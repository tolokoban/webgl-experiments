{"version":3,"sources":["polyfill.classList.js"],"names":["require","module","_","X","D","arguments","intl","all","self","document","createElement","createElementNS","testElement","classList","add","contains","createMethod","method","original","DOMTokenList","prototype","token","i","len","length","call","toggle","_toggle","force","view","elemCtrProto","Element","objCtr","Object","strTrim","String","trim","replace","arrIndexOf","Array","indexOf","item","DOMEx","type","message","name","code","DOMException","checkTokenAndGetIndex","test","ClassList","elem","trimmedClasses","getAttribute","classes","split","push","_updateClassName","setAttribute","toString","classListProto","classListGetter","Error","tokens","l","updated","remove","index","splice","result","join","defineProperty","classListPropDesc","get","enumerable","configurable","ex","number","__defineGetter__","exports"],"mappings":"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","sourcesContent":["/** @module polyfill.classList */require( 'polyfill.classList', function(require, module, exports) { var _=function(){var D={\"en\":{}},X=require(\"$\").intl;function _(){return X(D,arguments);}_.all=D;return _}();\r\n   /*\r\n * classList.js: Cross-browser full element.classList implementation.\r\n * 1.1.20150312\r\n *\r\n * By Eli Grey, http://eligrey.com\r\n * License: Dedicated to the public domain.\r\n *   See https://github.com/eligrey/classList.js/blob/master/LICENSE.md\r\n */\r\n\r\n/*global self, document, DOMException */\r\n\r\n/*! @source http://purl.eligrey.com/github/classList.js/blob/master/classList.js */\r\n\r\nif (\"document\" in self) {\r\n\r\n    // Full polyfill for browsers with no classList support\r\n    // Including IE < Edge missing SVGElement.classList\r\n    if (!(\"classList\" in document.createElement(\"_\"))\r\n        || document.createElementNS && !(\"classList\" in document.createElementNS(\"http://www.w3.org/2000/svg\",\"g\"))) {\r\n\r\n        (function (view) {\r\n\r\n            \"use strict\";\r\n\r\n            if (!('Element' in view)) return;\r\n\r\n            var\r\n            classListProp = \"classList\"\r\n            , protoProp = \"prototype\"\r\n            , elemCtrProto = view.Element[protoProp]\r\n            , objCtr = Object\r\n            , strTrim = String[protoProp].trim || function () {\r\n                return this.replace(/^\\s+|\\s+$/g, \"\");\r\n            }\r\n            , arrIndexOf = Array[protoProp].indexOf || function (item) {\r\n                var\r\n                i = 0\r\n                , len = this.length\r\n                ;\r\n                for (; i < len; i++) {\r\n                    if (i in this && this[i] === item) {\r\n                        return i;\r\n                    }\r\n                }\r\n                return -1;\r\n            }\r\n            // Vendors: please allow content code to instantiate DOMExceptions\r\n            , DOMEx = function (type, message) {\r\n                this.name = type;\r\n                this.code = DOMException[type];\r\n                this.message = message;\r\n            }\r\n            , checkTokenAndGetIndex = function (classList, token) {\r\n                if (token === \"\") {\r\n                    throw new DOMEx(\r\n                        \"SYNTAX_ERR\"\r\n                        , \"An invalid or illegal string was specified\"\r\n                    );\r\n                }\r\n                if (/\\s/.test(token)) {\r\n                    throw new DOMEx(\r\n                        \"INVALID_CHARACTER_ERR\"\r\n                        , \"String contains an invalid character\"\r\n                    );\r\n                }\r\n                return arrIndexOf.call(classList, token);\r\n            }\r\n            , ClassList = function (elem) {\r\n                var\r\n                trimmedClasses = strTrim.call(elem.getAttribute(\"class\") || \"\")\r\n                , classes = trimmedClasses ? trimmedClasses.split(/\\s+/) : []\r\n                , i = 0\r\n                , len = classes.length\r\n                ;\r\n                for (; i < len; i++) {\r\n                    this.push(classes[i]);\r\n                }\r\n                this._updateClassName = function () {\r\n                    elem.setAttribute(\"class\", this.toString());\r\n                };\r\n            }\r\n            , classListProto = ClassList[protoProp] = []\r\n            , classListGetter = function () {\r\n                return new ClassList(this);\r\n            }\r\n            ;\r\n            // Most DOMException implementations don't allow calling DOMException's toString()\r\n            // on non-DOMExceptions. Error's toString() is sufficient here.\r\n            DOMEx[protoProp] = Error[protoProp];\r\n            classListProto.item = function (i) {\r\n                return this[i] || null;\r\n            };\r\n            classListProto.contains = function (token) {\r\n                token += \"\";\r\n                return checkTokenAndGetIndex(this, token) !== -1;\r\n            };\r\n            classListProto.add = function () {\r\n                var\r\n                tokens = arguments\r\n                , i = 0\r\n                , l = tokens.length\r\n                , token\r\n                , updated = false\r\n                ;\r\n                do {\r\n                    token = tokens[i] + \"\";\r\n                    if (checkTokenAndGetIndex(this, token) === -1) {\r\n                        this.push(token);\r\n                        updated = true;\r\n                    }\r\n                }\r\n                while (++i < l);\r\n\r\n                if (updated) {\r\n                    this._updateClassName();\r\n                }\r\n            };\r\n            classListProto.remove = function () {\r\n                var\r\n                tokens = arguments\r\n                , i = 0\r\n                , l = tokens.length\r\n                , token\r\n                , updated = false\r\n                , index\r\n                ;\r\n                do {\r\n                    token = tokens[i] + \"\";\r\n                    index = checkTokenAndGetIndex(this, token);\r\n                    while (index !== -1) {\r\n                        this.splice(index, 1);\r\n                        updated = true;\r\n                        index = checkTokenAndGetIndex(this, token);\r\n                    }\r\n                }\r\n                while (++i < l);\r\n\r\n                if (updated) {\r\n                    this._updateClassName();\r\n                }\r\n            };\r\n            classListProto.toggle = function (token, force) {\r\n                token += \"\";\r\n\r\n                var\r\n                result = this.contains(token)\r\n                , method = result ?\r\n                    force !== true && \"remove\"\r\n                    :\r\n                    force !== false && \"add\"\r\n                ;\r\n\r\n                if (method) {\r\n                    this[method](token);\r\n                }\r\n\r\n                if (force === true || force === false) {\r\n                    return force;\r\n                } else {\r\n                    return !result;\r\n                }\r\n            };\r\n            classListProto.toString = function () {\r\n                return this.join(\" \");\r\n            };\r\n\r\n            if (objCtr.defineProperty) {\r\n                var classListPropDesc = {\r\n                    get: classListGetter\r\n                    , enumerable: true\r\n                    , configurable: true\r\n                };\r\n                try {\r\n                    objCtr.defineProperty(elemCtrProto, classListProp, classListPropDesc);\r\n                } catch (ex) { // IE 8 doesn't support enumerable:true\r\n                    if (ex.number === -0x7FF5EC54) {\r\n                        classListPropDesc.enumerable = false;\r\n                        objCtr.defineProperty(elemCtrProto, classListProp, classListPropDesc);\r\n                    }\r\n                }\r\n            } else if (objCtr[protoProp].__defineGetter__) {\r\n                elemCtrProto.__defineGetter__(classListProp, classListGetter);\r\n            }\r\n\r\n        }(self));\r\n\r\n    } else {\r\n        // There is full or partial native classList support, so just check if we need\r\n        // to normalize the add/remove and toggle APIs.\r\n\r\n        (function () {\r\n            \"use strict\";\r\n\r\n            var testElement = document.createElement(\"_\");\r\n\r\n            testElement.classList.add(\"c1\", \"c2\");\r\n\r\n            // Polyfill for IE 10/11 and Firefox <26, where classList.add and\r\n            // classList.remove exist but support only one argument at a time.\r\n            if (!testElement.classList.contains(\"c2\")) {\r\n                var createMethod = function(method) {\r\n                    var original = DOMTokenList.prototype[method];\r\n\r\n                    DOMTokenList.prototype[method] = function(token) {\r\n                        var i, len = arguments.length;\r\n\r\n                        for (i = 0; i < len; i++) {\r\n                            token = arguments[i];\r\n                            original.call(this, token);\r\n                        }\r\n                    };\r\n                };\r\n                createMethod('add');\r\n                createMethod('remove');\r\n            }\r\n\r\n            testElement.classList.toggle(\"c3\", false);\r\n\r\n            // Polyfill for IE 10 and Firefox <24, where classList.toggle does not\r\n            // support the second argument.\r\n            if (testElement.classList.contains(\"c3\")) {\r\n                var _toggle = DOMTokenList.prototype.toggle;\r\n\r\n                DOMTokenList.prototype.toggle = function(token, force) {\r\n                    if (1 in arguments && !this.contains(token) === !force) {\r\n                        return force;\r\n                    } else {\r\n                        return _toggle.call(this, token);\r\n                    }\r\n                };\r\n            }\r\n            testElement = null;\r\n        }());\r\n    }\r\n}\r\n\r\n\r\n\r\nmodule.exports._ = _;\n})"]}
{"version":3,"sources":["webgl.fillpoly.js"],"names":["require","module","exports","_","D","X","intl","arguments","all","fillPolyline","vertexArrayToAttribs","vectors3","output","length","xI","yI","zI","xJ","yJ","zJ","k","x","y","z","forEach","vector3","push","Float32Array","ex","console","error","vertices","attributesCount","offset","polyline","Polyline","vertexCount","Math","floor","expectedTriangles","elemBuff","doFillPolyline","Uint16Array","orientation","A","B","C","count","isCandidate","next","get","index","prev","removeTriangle","PTR","PREV","NEXT","points","size","_vertices","_cursor","_points","prototype","idxA","idxB","idxC","AB","getVector","AC","crossprod","cross","idxM","isInTriangle","point","pointer","u","v","isInTrianglePos","isInTriangleNeg","AM","BC","BM","CA","CM","idxCur","idxNxt","idxPrv","txt","alpha","ALPHABET","Array","slice","call","arg","charAt"],"mappings":"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","sourcesContent":["/** @module webgl.fillpoly */require( 'webgl.fillpoly', function(require, module, exports) { var _=function(){var D={\"en\":{},\"fr\":{}},X=require(\"$\").intl;function _(){return X(D,arguments);}_.all=D;return _}();\r\n   \"use strict\";\r\n\r\n/**\r\n * @param {Float32Array} vertices - attributs of each vertex. The first must be X and the second Y.\r\n * @param {number=2} attributesCount - Number of attribute per vertex. At least 2 (X and Y).\r\n * @param {number=0}  offset - Index  of the first  element. Usefull when  you need to  concat several\r\n * elements buffers.\r\n * @return {Uint16Array}\r\n */\r\nexports.fillPolyline = fillPolyline;\r\n/**\r\n * Sometimes, your polygon  is expressed in 3 dimensions.   So, if you\r\n * want to use `fillPolyline`, tjhis function will flatten the polygon\r\n * for you.\r\n * @param {array} vectors3 - [[x, y, z], ...]\r\n * @return {Float32Array} [ x1, y1, x2, y2, x3, y3, x4, y3, ... ]\r\n */\r\nexports.vertexArrayToAttribs = vertexArrayToAttribs;\r\n\r\n\r\nfunction vertexArrayToAttribs( vectors3 ) {\r\n  try {\r\n    var output = [];\r\n    if( vectors3.length < 3 )\r\n      throw \"[webgl.fillpoly.vertexArrayToAttribs] A polyline must have at least 3 vertices!\";\r\n\r\n    var xI = vectors3[1][0] - vectors3[0][0];\r\n    var yI = vectors3[1][1] - vectors3[0][1];\r\n    var zI = vectors3[1][2] - vectors3[0][2];\r\n\r\n    var xJ, yJ, zJ;\r\n    var k, x, y, z;\r\n    for( k = 2; k < vectors3.length; k++ ) {\r\n      xJ = vectors3[k][0] - vectors3[0][0];\r\n      yJ = vectors3[k][1] - vectors3[0][1];\r\n      zJ = vectors3[k][2] - vectors3[0][2];\r\n\r\n      x = yI * zJ - zI * yJ;\r\n      y = zI * xJ - xI * zJ;\r\n      z = xI * yJ - yI * xJ;\r\n      if( x*x + y*y + z*z > 0 ) break;\r\n    }\r\n\r\n    // Dot products make a projection on plan (I, J).\r\n    vectors3.forEach(function (vector3) {\r\n      var x = vector3[0];\r\n      var y = vector3[1];\r\n      var z = vector3[2];\r\n      output.push(\r\n        xI * x + yI * y + zI * z,\r\n        xJ * x + yJ * y + zJ * z\r\n      );\r\n    });\r\n\r\n    return new Float32Array( output );\r\n  }\r\n  catch( ex ) {\r\n    console.error( \"[webgl.fillpoly.vertexArrayToAttribs] error = \", ex );\r\n    console.error( \"[webgl.fillpoly.vertexArrayToAttribs] vectors3 = \", vectors3 );\r\n    throw ex + \"\\n...in webgl.fillpoly.vertexArrayToAttribs\";\r\n  }\r\n}\r\n\r\n\r\n//#(fillPolyline)\r\n// @param {Float32Array}  vertices -  Attributs de chaque  vertex. Les\r\n// deux premiers doivent être X et Y.\r\n// @param   {number=2}  attributesCount   -  Nombre   d'attributs  par\r\n// vertex. Au minimum 2 (X et Y).\r\n// @param {number=0}  offset -  Index du premier  vertex. Utile  si on\r\n// veut dessiner plusieurs polygônes avec le même buffer.\r\n// @return {Uint16Array} Tableau des indices des vertex.\r\nfunction fillPolyline( vertices, attributesCount, offset ) {\r\n  if( typeof attributesCount === 'undefined' ) attributesCount = 2;\r\n  if( typeof offset === 'undefined' ) offset = 0;\r\n\r\n  var polyline = new Polyline( vertices, attributesCount );\r\n  var vertexCount = Math.floor( vertices.length / attributesCount );\r\n  var expectedTriangles = vertexCount - 2;\r\n  var elemBuff = doFillPolyline( -1, polyline, offset, attributesCount );\r\n  if( elemBuff && elemBuff.length === 3 * expectedTriangles  ) {\r\n    return elemBuff;\r\n  }\r\n  polyline = new Polyline( vertices, attributesCount );\r\n  return new Uint16Array( doFillPolyline( +1, polyline, offset, attributesCount ) );\r\n}\r\n\r\nfunction doFillPolyline( orientation, polyline, offset, attributesCount ) {\r\n  var A, B, C;\r\n  var elemBuff = [];\r\n  while( polyline.length > 3 ) {\r\n    var count = 0;\r\n    while( !polyline.isCandidate( orientation ) && count++ < polyline.length ) {\r\n      count++;\r\n      polyline.next();\r\n    }\r\n    if( count >= polyline.length ) return null;\r\n    A = polyline.get();\r\n    elemBuff.push( offset + A.index, offset + A.next, offset + A.prev );\r\n    polyline.removeTriangle( A.index, A.next, A.prev );\r\n  }\r\n\r\n  if( !polyline.isCandidate( orientation ) ) return null;\r\n\r\n  A = polyline.get();\r\n  B = polyline.get( A.next );\r\n  C = polyline.get( A.prev );\r\n  elemBuff.push( offset + A.index, offset + B.index, offset + C.index );\r\n\r\n  return elemBuff;\r\n}\r\n\r\nvar PTR = 0;\r\nvar PREV = 1;\r\nvar NEXT = 2;\r\n\r\nvar Polyline = function( vertices, attributesCount ) {\r\n  var points = [];\r\n  var size = Math.floor( vertices.length / attributesCount );\r\n  for( var k = 0; k < size; k++ ) {\r\n    points.push([ k * attributesCount, (k + size - 1 ) % size, (k + 1) % size ]);\r\n  }\r\n  this.length = size;\r\n  this._vertices = vertices;\r\n  this._cursor = 0;\r\n  this._points = points;\r\n};\r\n\r\nPolyline.prototype.isCandidate = function( orientation ) {\r\n  var idxA = this._cursor;\r\n  var A = this.get( idxA );\r\n  var idxB = A.next;\r\n  var idxC = A.prev;\r\n  var AB = this.getVector( idxA, idxB );\r\n  var AC = this.getVector( idxA, idxC );\r\n  var crossprod = this.cross( AB, AC );\r\n\r\n  if( crossprod > 0 && orientation > 0 ) return false;\r\n  if( crossprod < 0 && orientation < 0 ) return false;\r\n\r\n  // On vérifie maintenant qu'aucun point n'est à l'intérieur du triangle.\r\n  for( var idxM = 0; idxM < this._points.length; idxM++ ) {\r\n    if( idxM === idxA ) continue;\r\n    if( idxM === idxB ) continue;\r\n    if( idxM === idxC ) continue;\r\n\r\n    if( this.isInTriangle( idxA, idxM, orientation ) ) return false;\r\n  }\r\n  return true;\r\n};\r\n\r\nPolyline.prototype.get = function( index ) {\r\n  if( typeof index === 'undefined' ) index = this._cursor;\r\n  var point = this._points[index];\r\n  var pointer = point[PTR];\r\n  return {\r\n    index: index,\r\n    next: point[NEXT],\r\n    prev: point[PREV],\r\n    x: this._vertices[pointer],\r\n    y: this._vertices[pointer + 1]\r\n  };\r\n};\r\n\r\nPolyline.prototype.getVector = function( idxA, idxB ) {\r\n  var A = this.get( idxA );\r\n  var B = this.get( idxB );\r\n  return {\r\n    x: B.x - A.x,\r\n    y: B.y - A.y\r\n  };\r\n};\r\n\r\nPolyline.prototype.cross = function( u, v ) {\r\n  return u.x * v.y - u.y * v.x;\r\n};\r\n\r\n/**\r\n * @param {number} orientation - Signe du produit scalaire AB^AC.\r\n */\r\nPolyline.prototype.isInTriangle = function( idxA, idxM, orientation ) {\r\n  var A = this.get( idxA );\r\n  var idxB = A.next;\r\n  var idxC = A.prev;\r\n\r\n  if( orientation > 0 ) return this.isInTrianglePos( idxA, idxB, idxC, idxM );\r\n  return this.isInTriangleNeg( idxA, idxB, idxC, idxM );\r\n}\r\n\r\nPolyline.prototype.isInTriangleNeg = function( idxA, idxB, idxC, idxM ) {\r\n  var AB = this.getVector( idxA, idxB );\r\n  var AM = this.getVector( idxA, idxM );\r\n  if( this.cross( AB, AM ) < 0 ) return false;\r\n  var BC = this.getVector( idxB, idxC );\r\n  var BM = this.getVector( idxB, idxM );\r\n  if( this.cross( BC, BM ) < 0 ) return false;\r\n  var CA = this.getVector( idxC, idxA );\r\n  var CM = this.getVector( idxC, idxM );\r\n  if( this.cross( CA, CM ) < 0 ) return false;\r\n  return true;\r\n};\r\n\r\nPolyline.prototype.isInTrianglePos = function( idxA, idxB, idxC, idxM ) {\r\n  var AB = this.getVector( idxA, idxB );\r\n  var AM = this.getVector( idxA, idxM );\r\n  if( this.cross( AB, AM ) > 0 ) return false;\r\n  var BC = this.getVector( idxB, idxC );\r\n  var BM = this.getVector( idxB, idxM );\r\n  if( this.cross( BC, BM ) > 0 ) return false;\r\n  var CA = this.getVector( idxC, idxA );\r\n  var CM = this.getVector( idxC, idxM );\r\n  if( this.cross( CA, CM ) > 0 ) return false;\r\n  return true;\r\n};\r\n\r\nPolyline.prototype.next = function() {\r\n  var index = this._cursor;\r\n  this._cursor = this._points[index][NEXT];\r\n};\r\n\r\nPolyline.prototype.removeTriangle = function( idxCur, idxNxt, idxPrv ) {\r\n  this._points[idxPrv][NEXT] = idxNxt;\r\n  this._points[idxNxt][PREV] = idxPrv;\r\n  this.length--;\r\n\r\n  this._cursor = idxNxt;\r\n  var txt = '';\r\n  var index = idxNxt;\r\n  do {\r\n    txt += alpha( index );\r\n    index = this._points[index][NEXT];\r\n  } while( index !== idxNxt );\r\n};\r\n\r\n//#(fillPolyline)\r\n\r\n\r\nvar ALPHABET = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\r\n\r\nfunction alpha( index ) {\r\n  var txt = '';\r\n  Array.prototype.slice.call(arguments).forEach(function(arg) {\r\n    txt += ALPHABET.charAt( arg );\r\n  });\r\n  return txt;\r\n}\r\n\r\n\r\n/*\r\n window.Jasmine = {\r\n describe: [],\r\n specCount: 0,\r\n failCount: 0\r\n };\r\n\r\n\r\n window.describe = function( name, slot ) {\r\n Jasmine.describe.push( name.trim() );\r\n try {\r\n slot();\r\n }\r\n catch( ex ) {\r\n console.error( \"Failure! \", Jasmine.describe.join(\" \") );\r\n console.error( ex );\r\n }\r\n Jasmine.describe.pop();\r\n if( Jasmine.describe.length === 0 ) {\r\n console.log(\"============================================================\");\r\n console.log(\" Number of tests: \", Jasmine.specCount );\r\n console.log(\" Success: \", Jasmine.specCount - Jasmine.failCount );\r\n console.log(\" Failure: \", Jasmine.failCount );\r\n console.log(\" Quality: \",\r\n parseFloat((100*(Jasmine.specCount - Jasmine.failCount) / Jasmine.specCount).toFixed(1)),\r\n \"%\" );\r\n console.log(\"------------------------------------------------------------\");\r\n }\r\n };\r\n\r\n window.it = function( name, slot ) {\r\n Jasmine.describe.push( name.trim() );\r\n Jasmine.specCount++;\r\n try {\r\n slot();\r\n }\r\n catch( ex ) {\r\n Jasmine.failCount++;\r\n console.error( \"Failure! \", Jasmine.describe.join(\" \"), \"\\n\", ex );\r\n }\r\n Jasmine.describe.pop();\r\n };\r\n\r\n\r\n describe('webgl.fillpoly', function() {\r\n describe('cross', function() {\r\n [\r\n [0,0, 1,0, 0,-1, -1],\r\n [0,0, 1,0, 0,1, 1]\r\n ].forEach(function (item) {\r\n var Ax = item[0];\r\n var Ay = item[1];\r\n var Bx = item[2];\r\n var By = item[3];\r\n var Mx = item[4];\r\n var My = item[5];\r\n var value = item[6];\r\n it(\"(\" + Ax + \",\" + Ay + \",\" + Bx + \",\" + By + \",\" + Mx + \",\" + My + \") should give \" + value, function() {\r\n var Ux = Bx - Ax;\r\n var Uy = By - Ay;\r\n var Vx = Mx - Ax;\r\n var Vy = My - Ay;\r\n var expected = Ux*Vy - Uy*Vx;\r\n if( value !== expected )\r\n throw(\"Expected \" + value + \" to be \" + expected);\r\n });\r\n });\r\n });\r\n describe('hasPointInsideNeg', function() {\r\n [\r\n [0,0,1,0,0,-1, .2,.2, false],\r\n [0,0,1,0,0,-1, -.2,0, false],\r\n [0,0,1,0,0,-1, -.1,-.1, false],\r\n [0,0,1,0,0,-1, .5,-.5, true],\r\n [0,0,1,0,0,-1, .5,0, true],\r\n [0,0,1,0,0,-1, 0,-.5, true],\r\n [0,0,1,0,0,-1, .2,-.2, true],\r\n [0,0,1,0,0,-1, .3,-.1, true],\r\n [0,0,1,0,0,-1, 1,0, true],\r\n [0,0,1,0,0,-1, 0,-1, true],\r\n [0,0,1,0,0,-1, 0,0, true]\r\n ].forEach(function (item) {\r\n var Ax = item[0];\r\n var Ay = item[1];\r\n var Bx = item[2];\r\n var By = item[3];\r\n var Cx = item[4];\r\n var Cy = item[5];\r\n var Mx = item[6];\r\n var My = item[7];\r\n var value = item[8];\r\n it('(' + Ax + \",\" + Ay + \",\" + Bx + \",\" + By + \",\" + Cx + \",\" + Cy + \",\" + Mx + \",\" + My\r\n + ') should return ' + value, function(){\r\n var result = hasPointInsideNeg(Ax,Ay,Bx,By,Cx,Cy,Mx,My);\r\n if( result !== value )\r\n throw \"Expected \" + result + \" to be \" + value + \"!\";\r\n });\r\n });\r\n });\r\n describe('hasPointInsidePos', function() {\r\n [\r\n [0,0,1,0,0,1, .2,.2, true],\r\n [0,0,1,0,0,1, -.2,0, false],\r\n [0,0,1,0,0,1, -.1,-.1, false],\r\n [0,0,1,0,0,1, .5,-.5, false],\r\n [0,0,1,0,0,1, .5,0, true],\r\n [0,0,1,0,0,1, 0,-.5, false],\r\n [0,0,1,0,0,1, .2,-.2, false],\r\n [0,0,1,0,0,1, .3,-.1, false],\r\n [0,0,1,0,0,1, 1,0, true],\r\n [0,0,1,0,0,1, 0,-1, false],\r\n [0,0,1,0,0,1, 0,0, true]\r\n ].forEach(function (item) {\r\n var Ax = item[0];\r\n var Ay = item[1];\r\n var Bx = item[2];\r\n var By = item[3];\r\n var Cx = item[4];\r\n var Cy = item[5];\r\n var Mx = item[6];\r\n var My = item[7];\r\n var value = item[8];\r\n it('(' + Ax + \",\" + Ay + \",\" + Bx + \",\" + By + \",\" + Cx + \",\" + Cy + \",\" + Mx + \",\" + My\r\n + ') should return ' + value, function(){\r\n var result = hasPointInsidePos(Ax,Ay,Bx,By,Cx,Cy,Mx,My);\r\n if( result !== value )\r\n throw \"Expected \" + result + \" to be \" + value + \"!\";\r\n });\r\n });\r\n });\r\n });\r\n */\r\n\r\n\r\n\r\nmodule.exports._ = _;\n})"]}
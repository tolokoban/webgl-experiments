{"version":3,"sources":["image-processor.js"],"names":["require","module","GLOBAL","Program","ImageProcessor","gl","fragShaderCode","prg","vert","frag","buffVert","createBuffer","arrayVert","Float32Array","bindBuffer","ARRAY_BUFFER","bufferData","STATIC_DRAW","use","bindAttribs","drawArrays","TRIANGLE_STRIP","exports","_"],"mappings":"ynBAA0CA,OAAO,CAAE,6BAAF,CAAiC,SAASA,OAAT,CAAkBC,MAAlB,CAAmC,IAAqCC,CAAAA,MAAM,CAAG,CACjK,KAAQ,wKADyJ,CAA9C,IAI/GC,CAAAA,OAAO,CAAGH,OAAO,CAAE,eAAF,CAJ8F,CAO/GI,cAP+G,YAQjH,wBAAaC,EAAb,CAAiBC,cAAjB,CAAkC,sCAC9B,KAAKD,EAAL,CAAUA,EADoB,CAE9B,KAAKE,GAAL,CAAW,GAAIJ,CAAAA,OAAJ,CAAaE,EAAb,CAAiB,CACxBG,IAAI,CAAEN,MAAM,CAACM,IADW,CAExBC,IAAI,CAAEH,cAFkB,CAAjB,CAFmB,CAM9B,KAAKI,QAAL,CAAgBL,EAAE,CAACM,YAAH,EANc,CAO9B,GAAMC,CAAAA,SAAS,CAAG,GAAIC,CAAAA,YAAJ,CAAkB,CAChC,CAAC,CAD+B,CAC5B,CAAC,CAD2B,CACxB,CADwB,CACrB,CADqB,GAE5B,CAAC,CAF2B,CAExB,CAFwB,CAErB,CAFqB,CAGhC,CAAC,CAH+B,GAGxB,CAHwB,CAGrB,CAHqB,KAIxB,CAJwB,CAIrB,CAJqB,CAAlB,CAAlB,CAOAR,EAAE,CAACS,UAAH,CAAeT,EAAE,CAACU,YAAlB,CAAgC,KAAKL,QAArC,CAd8B,CAe9BL,EAAE,CAACW,UAAH,CAAeX,EAAE,CAACU,YAAlB,CAAgCH,SAAhC,CAA2CP,EAAE,CAACY,WAA9C,CACH,CAxBgH,uEA0B5F,IACTZ,CAAAA,EADS,CACa,IADb,CACTA,EADS,CACLE,GADK,CACa,IADb,CACLA,GADK,CACAG,QADA,CACa,IADb,CACAA,QADA,CAEjBH,GAAG,CAACW,GAAJ,EAFiB,CAGjBb,EAAE,CAACS,UAAH,CAAeT,EAAE,CAACU,YAAlB,CAAgC,KAAKL,QAArC,CAHiB,CAKjBH,GAAG,CAACY,WAAJ,CAAiBT,QAAjB,CAA2B,OAA3B,CAAoC,OAApC,CALiB,CAMjBL,EAAE,CAACe,UAAH,CAAef,EAAE,CAACgB,cAAlB,CAAkC,CAAlC,CAAqC,CAArC,CACH,CAjCgH,sBAqCrHpB,MAAM,CAACqB,OAAP,CAAiBlB,cArCoG,CAwCrHH,MAAM,CAACqB,OAAP,CAAeC,CAAf,CAxC6H,QAAFA,CAAAA,CAAE,EAAU,CAAC,MAAO,EAAG,CAyCjJ,CAzCgD,C","sourcesContent":["/** @module light-saber.image-processor */require( 'light-saber.image-processor', function(require, module, exports) { var _=function(){return ''}; const GLOBAL = {\n  \"vert\": \"attribute vec2 attXY;\\r\\nattribute vec2 attUV;\\r\\n\\r\\nvarying vec2 varUV;\\r\\n\\r\\nvoid main() {\\r\\n    varUV = attUV;\\r\\n    gl_Position = vec4( attXY, 0, 1);\\r\\n}\\r\\n\"};\n  \"use strict\";\r\n\r\nconst Program = require( \"webgl.program\" );\r\n\r\n\r\nclass ImageProcessor {\r\n    constructor( gl, fragShaderCode ) {\r\n        this.gl = gl;\r\n        this.prg = new Program( gl, {\r\n            vert: GLOBAL.vert,\r\n            frag: fragShaderCode\r\n        } );\r\n        this.buffVert = gl.createBuffer();\r\n        const arrayVert = new Float32Array( [\r\n            -1, -1, 0, 0,\r\n            +1, -1, 1, 0,\r\n            -1, +1, 0, 1,\r\n            +1, +1, 1, 1\r\n        ] );\r\n\r\n        gl.bindBuffer( gl.ARRAY_BUFFER, this.buffVert );\r\n        gl.bufferData( gl.ARRAY_BUFFER, arrayVert, gl.STATIC_DRAW );\r\n    }\r\n\r\n    paint( time, delta ) {\r\n        const { gl, prg, buffVert } = this;\r\n        prg.use();\r\n        gl.bindBuffer( gl.ARRAY_BUFFER, this.buffVert );\r\n\r\n        prg.bindAttribs( buffVert, \"attXY\", \"attUV\" );\r\n        gl.drawArrays( gl.TRIANGLE_STRIP, 0, 4 );\r\n    }\r\n}\r\n\r\n\r\nmodule.exports = ImageProcessor;\r\n\r\n\r\nmodule.exports._ = _;\n})"]}
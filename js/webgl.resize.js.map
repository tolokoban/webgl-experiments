{"version":3,"sources":["resize.js"],"names":["require","module","exports","_","D","X","intl","arguments","all","gl","_resolution","resolution","window","devicePixelRatio","displayWidth","Math","floor","canvas","clientWidth","displayHeight","clientHeight","width","height","viewport"],"mappings":";;AAAA;AAA2BA,OAAO,CAAE,cAAF,EAAkB,UAASA,OAAT,EAAkBC,MAAlB,EAA0BC,OAA1B,EAAmC;AAAE,MAAIC,CAAC,GAAC,YAAU;AAAC,QAAIC,CAAC,GAAC;AAAC,YAAK,EAAN;AAAS,YAAK;AAAd,KAAN;AAAA,QAAwBC,CAAC,GAACL,OAAO,CAAC,GAAD,CAAP,CAAaM,IAAvC;;AAA4C,aAASH,CAAT,GAAY;AAAC,aAAOE,CAAC,CAACD,CAAD,EAAGG,SAAH,CAAR;AAAuB;;AAAAJ,IAAAA,CAAC,CAACK,GAAF,GAAMJ,CAAN;AAAQ,WAAOD,CAAP;AAAS,GAA5G,EAAN;AACtF;;;;;AAGH;AAEA;;;;;;;;;;AAQAF,EAAAA,MAAM,CAACC,OAAP,GAAiB,UAAWO,EAAX,EAAeC,WAAf,EAA6B;AAC1C,QACIC,UAAU,GAAG,OAAOD,WAAP,KAAuB,WAAvB,GAAqCA,WAArC,GAAmDE,MAAM,CAACC,gBAD3E;AAAA,QAEIC,YAAY,GAAGC,IAAI,CAACC,KAAL,CAAYP,EAAE,CAACQ,MAAH,CAAUC,WAAV,GAAwBP,UAApC,CAFnB;AAAA,QAGIQ,aAAa,GAAGJ,IAAI,CAACC,KAAL,CAAYP,EAAE,CAACQ,MAAH,CAAUG,YAAV,GAAyBT,UAArC,CAHpB,CAD0C,CAM1C;;AACA,QAAKF,EAAE,CAACQ,MAAH,CAAUI,KAAV,KAAoBP,YAApB,IACDL,EAAE,CAACQ,MAAH,CAAUK,MAAV,KAAqBH,aADzB,EACyC;AAErC;AACAV,MAAAA,EAAE,CAACQ,MAAH,CAAUI,KAAV,GAAkBP,YAAlB;AACAL,MAAAA,EAAE,CAACQ,MAAH,CAAUK,MAAV,GAAmBH,aAAnB;AACAV,MAAAA,EAAE,CAACc,QAAH,CAAa,CAAb,EAAgB,CAAhB,EAAmBT,YAAnB,EAAiCK,aAAjC;AACA,aAAO,IAAP;AACH;;AACD,WAAO,KAAP;AACH,GAjBD;;AAoBAlB,EAAAA,MAAM,CAACC,OAAP,CAAeC,CAAf,GAAmBA,CAAnB;AACC,CAnCiC,CAAP","sourcesContent":["/** @module webgl.resize */require( 'webgl.resize', function(require, module, exports) { var _=function(){var D={\"en\":{},\"fr\":{}},X=require(\"$\").intl;function _(){return X(D,arguments);}_.all=D;return _}();\r\n   /*\r\nFunctions to resize the canvas and the viewport.\r\n*/\r\n\"use strict\";\r\n\r\n/**\r\n * @function\r\n * @param {object} gl - WebGL context.\r\n * @param {number} _resolution - Resolution in CSS pixels. If omitted, the real resolution\r\n * of the device is taken. On smartphones, for instance, the resolution is often greater than 1.\r\n *\r\n * @return {boolean} `true` if the size has changed.\r\n */\r\nmodule.exports = function ( gl, _resolution ) {\r\n    const\r\n        resolution = typeof _resolution !== \"undefined\" ? _resolution : window.devicePixelRatio,\r\n        displayWidth = Math.floor( gl.canvas.clientWidth * resolution ),\r\n        displayHeight = Math.floor( gl.canvas.clientHeight * resolution );\r\n\r\n    // Check if the canvas is not the same size.\r\n    if ( gl.canvas.width !== displayWidth ||\r\n        gl.canvas.height !== displayHeight ) {\r\n\r\n        // Make the canvas the same size\r\n        gl.canvas.width = displayWidth;\r\n        gl.canvas.height = displayHeight;\r\n        gl.viewport( 0, 0, displayWidth, displayHeight );\r\n        return true;\r\n    }\r\n    return false;\r\n};\r\n\r\n\r\nmodule.exports._ = _;\n})"]}
{"version":3,"sources":["add.js"],"names":["require","module","GLOBAL","ImageProcessor","Add","gl","framebuffers","name0","name1","imageProcessor","frag","prg","time","delta","tex0","texture","tex1","use","$uniTex0","activeTexture","TEXTURE0","bindTexture","TEXTURE_2D","$uniTex1","TEXTURE1","paint","exports","_"],"mappings":"ynBAA8BA,OAAO,CAAE,iBAAF,CAAqB,SAASA,OAAT,CAAkBC,MAAlB,CAAmC,IAAqCC,CAAAA,MAAM,CAAG,CACzI,KAAQ,oSADiI,CAA9C,IAIvFC,CAAAA,cAAc,CAAGH,OAAO,CAAE,6BAAF,CAJ+D,CAMvFI,GANuF,YAOzF,aAAaC,EAAb,CAAiBC,YAAjB,CAA+BC,KAA/B,CAAsCC,KAAtC,CAA8C,2BAC1C,KAAKH,EAAL,CAAUA,EADgC,CAE1C,KAAKC,YAAL,CAAoBA,YAFsB,CAG1C,KAAKC,KAAL,CAAaA,KAH6B,CAI1C,KAAKC,KAAL,CAAaA,KAJ6B,CAK1C,KAAKC,cAAL,CAAsB,GAAIN,CAAAA,cAAJ,CAAoBE,EAApB,CAAwBH,MAAM,CAACQ,IAA/B,CALoB,CAM1C,KAAKC,GAAL,CAAW,KAAKF,cAAL,CAAoBE,GAClC,CAdwF,2DAgBlFC,IAhBkF,CAgB5EC,KAhB4E,CAgBpE,IACTR,CAAAA,EADS,CAC+C,IAD/C,CACTA,EADS,CACLM,GADK,CAC+C,IAD/C,CACLA,GADK,CACAF,cADA,CAC+C,IAD/C,CACAA,cADA,CACgBH,YADhB,CAC+C,IAD/C,CACgBA,YADhB,CAC8BC,KAD9B,CAC+C,IAD/C,CAC8BA,KAD9B,CACqCC,KADrC,CAC+C,IAD/C,CACqCA,KADrC,CAEXM,IAAI,CAAGR,YAAY,CAAEC,KAAF,CAAZ,CAAsBQ,OAFlB,CAGXC,IAAI,CAAGV,YAAY,CAAEE,KAAF,CAAZ,CAAsBO,OAHlB,CAKjBJ,GAAG,CAACM,GAAJ,EALiB,CAMjBN,GAAG,CAACO,QAAJ,CAAe,CANE,CAOjBb,EAAE,CAACc,aAAH,CAAkBd,EAAE,CAACe,QAArB,CAPiB,CAQjBf,EAAE,CAACgB,WAAH,CAAgBhB,EAAE,CAACiB,UAAnB,CAA+BR,IAA/B,CARiB,CASjBH,GAAG,CAACY,QAAJ,CAAe,CATE,CAUjBlB,EAAE,CAACc,aAAH,CAAkBd,EAAE,CAACmB,QAArB,CAViB,CAWjBnB,EAAE,CAACgB,WAAH,CAAgBhB,EAAE,CAACiB,UAAnB,CAA+BN,IAA/B,CAXiB,CAajBP,cAAc,CAACgB,KAAf,CAAsBb,IAAtB,CAA4BC,KAA5B,CACH,CA9BwF,WAkC7FZ,MAAM,CAACyB,OAAP,CAAiBtB,GAlC4E,CAqC7FH,MAAM,CAACyB,OAAP,CAAeC,CAAf,CArCqG,QAAFA,CAAAA,CAAE,EAAU,CAAC,MAAO,EAAG,CAsCzH,CAtCoC,C","sourcesContent":["/** @module light-saber.add */require( 'light-saber.add', function(require, module, exports) { var _=function(){return ''}; const GLOBAL = {\n  \"frag\": \"precision mediump float;\\r\\n\\r\\nuniform sampler2D uniTex0;\\r\\nuniform sampler2D uniTex1;\\r\\n\\r\\nvarying vec2 varUV;\\r\\n\\r\\nvoid main() {\\r\\n    vec4 color0 = texture2D( uniTex0, varUV );\\r\\n    vec4 color1 = texture2D( uniTex1, varUV );\\r\\n    gl_FragColor = 0.7 * color0 + color1;\\r\\n}\\r\\n\"};\n  \"use strict\";\r\n\r\nconst ImageProcessor = require( \"light-saber.image-processor\" );\r\n\r\nclass Add {\r\n    constructor( gl, framebuffers, name0, name1 ) {\r\n        this.gl = gl;\r\n        this.framebuffers = framebuffers;\r\n        this.name0 = name0;\r\n        this.name1 = name1;\r\n        this.imageProcessor = new ImageProcessor( gl, GLOBAL.frag );\r\n        this.prg = this.imageProcessor.prg;\r\n    }\r\n\r\n    paint( time, delta ) {\r\n        const { gl, prg, imageProcessor, framebuffers, name0, name1 } = this;\r\n        const tex0 = framebuffers[ name0 ].texture;\r\n        const tex1 = framebuffers[ name1 ].texture;\r\n\r\n        prg.use();\r\n        prg.$uniTex0 = 0;\r\n        gl.activeTexture( gl.TEXTURE0 );\r\n        gl.bindTexture( gl.TEXTURE_2D, tex0 );\r\n        prg.$uniTex1 = 1;\r\n        gl.activeTexture( gl.TEXTURE1 );\r\n        gl.bindTexture( gl.TEXTURE_2D, tex1 );\r\n\r\n        imageProcessor.paint( time, delta );\r\n    }\r\n}\r\n\r\n\r\nmodule.exports = Add;\r\n\r\n\r\nmodule.exports._ = _;\n})"]}
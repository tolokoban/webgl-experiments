{"version":3,"sources":["tfw.binding.property-manager.js"],"names":["require","module","PropertyManager","container","Object","defineProperty","value","ID","writable","configurable","enumerable","name","id","_props","_container","constructor","fail","pm","ex","console","error","createNewProperty","propertyName","options","that","prop","event","Event","filter","functionOrUndefined","converter","delay","castPositiveInteger","action","alwaysFired","manager","timeout","get","createGetter","set","createSetter","init","bind","change","v","newValue","addPropToValue","setter","cast","removePropFromValue","castedValue","isContentChangeAware","properties","Array","isArray","indexOf","push","pos","splice","exec","clearTimeout","setTimeout","msg","source","Error","isNaN","Math","max","floor","f","areDifferent","oldValue","_","X","D","arguments","intl","all","exports","isLinkable","getAllAttributesNames","keys","getProperties","property","readonly","target","attribs","attribNames","forEach","attName","attValue","CONTAINER_SYMBOL","prototype","create","propertyId","fire","wave","currentValue","parseFloat","on","add","off","remove","p","call","createAction"],"mappings":"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","sourcesContent":["/** @module tfw.binding.property-manager */require( 'tfw.binding.property-manager', function(require, module, exports) { var _=function(){var D={\"en\":{},\"fr\":{}},X=require(\"$\").intl;function _(){return X(D,arguments);}_.all=D;return _}();\r\n   \"use strict\";\r\n\r\n/**\r\n * @export\r\n * @function\r\n * @param {object} container - Object which will hold properties.\r\n */\r\nmodule.exports = constructor;\r\n\r\n/**\r\n * @export .isLinkable\r\n * Look if an object  has a property manager assigned to  it and own a\r\n * property which name is `propertyName`.\r\n */\r\nmodule.exports.isLinkable = isLinkable;\r\n\r\nmodule.exports.getAllAttributesNames = getAllAttributesNames;\r\n\r\n/**\r\n * Return the linkable properties which holds this value, or `null`.\r\n */\r\nmodule.exports.getProperties = getProperties;\r\n\r\n/**\r\n * Create a readonly attribute.\r\n *\r\n * @param {object} target - Object which will bear the readonly attribute.\r\n * @param {object} attribs - Attributes with their values.\r\n * @returns {undefined}\r\n */\r\nmodule.exports.readonly = readonly;\r\n\r\nconst Event = require( \"tfw.event\" );\r\n\r\nlet ID = 0;\r\n\r\n// A container  with linkable  properties has  an attribute  with this\r\n// name. This attribute own the list of linkable properties.\r\nconst CONTAINER_SYMBOL = \"__tfw.property-manager__\";\r\n// A linkable property owned by a container has an attribute with this\r\n// name. This attribute give the name  of the property and a reference\r\n// to the container.\r\nconst PROPERTY_SYMBOL = '__tfw.binding.property-manager__';\r\n\r\n/**\r\n *\r\n */\r\nfunction PropertyManager( container ) {\r\n    Object.defineProperty( this, 'id', {\r\n        value: ID++,\r\n        writable: false,\r\n        configurable: false,\r\n        enumerable: true\r\n    } );\r\n    this.name = this.id;\r\n    this._props = {};\r\n    this._container = container;\r\n}\r\n\r\n/**\r\n * @class PropertyManager\r\n * @member set\r\n * Set the inner value of a property without fireing any event.\r\n * @param {string} propertyName.\r\n * @param {any} value.\r\n */\r\nPropertyManager.prototype.set = function ( propertyName, value ) {\r\n    this.create( propertyName ).set( value );\r\n};\r\n\r\n/**\r\n * Look if `propertyName` is a linkable property of this object.\r\n */\r\nPropertyManager.prototype.isLinkable = function ( propertyName ) {\r\n    var container = this._container;\r\n    if ( !container ) return false;\r\n    if ( typeof container[ CONTAINER_SYMBOL ] === 'undefined' ) return false;\r\n    return typeof container[ CONTAINER_SYMBOL ]._props[ propertyName ] !== 'undefined';\r\n\r\n};\r\n\r\n/**\r\n * @class PropertyManager\r\n * @member get\r\n * @param {string} propertyName.\r\n * @return {any} Inner value of the property.\r\n *\r\n */\r\nPropertyManager.prototype.get = function ( propertyName ) {\r\n    return this.create( propertyName ).get();\r\n};\r\n\r\nPropertyManager.prototype.propertyId = function ( propertyName ) {\r\n    return this.create( propertyName ).id;\r\n};\r\n\r\nPropertyManager.prototype.fire = function ( propertyName, wave ) {\r\n    var prop = this.create( propertyName );\r\n    prop.event.fire( prop.get(), propertyName, this._container, wave );\r\n};\r\n\r\nPropertyManager.prototype.change = function ( propertyName, value, wave ) {\r\n    if ( typeof wave === 'undefined' ) wave = [];\r\n\r\n    var prop = this.create( propertyName );\r\n\r\n    var converter = prop.converter;\r\n    if ( typeof converter === 'function' ) {\r\n        value = converter( value );\r\n    }\r\n\r\n    var currentValue = prop.get();\r\n    if ( prop.alwaysFired || areDifferent( value, currentValue ) ) {\r\n        prop.set( value );\r\n        var that = this;\r\n        exec( prop, function () {\r\n            // Fire change event.\r\n            that.fire( propertyName, wave );\r\n        } );\r\n    }\r\n};\r\n\r\n/**\r\n * @class PropertyManager\r\n * @member converter\r\n * @param {string} propertyName.\r\n * @param {function=undefined} converter -  Converter is assigned only\r\n * if it is a function.\r\n * @return {function} Current converter.\r\n */\r\nPropertyManager.prototype.converter = function ( propertyName, converter ) {\r\n    var prop = this.create( propertyName );\r\n    if ( typeof converter === 'function' ) {\r\n        prop.converter = converter;\r\n    } else if ( typeof converter !== 'undefined' ) {\r\n        throw Error(\r\n            \"[tfw.binding.property-manager::converter] \" +\r\n            \"`converter` must be of type function or undefined!\"\r\n        );\r\n    }\r\n    return prop.converter;\r\n};\r\n\r\nPropertyManager.prototype.delay = function ( propertyName, delay ) {\r\n    var prop = this.create( propertyName );\r\n    delay = parseFloat( delay );\r\n    if ( isNaN( delay ) ) return prop.delay;\r\n    prop.delay = delay;\r\n};\r\n\r\n/**\r\n * @class PropertyManager\r\n * @member on\r\n * @param {string} propertyName.\r\n * @param {function(val,name,container)} action  - Function to execute\r\n * when a property changed.\r\n */\r\nPropertyManager.prototype.on = function ( propertyName, action ) {\r\n    var prop = this.create( propertyName );\r\n    prop.event.add( action );\r\n};\r\n\r\n/**\r\n * @class PropertyManager\r\n * @member off\r\n * @param {string} propertyName.\r\n * @param {function(val,name,container)} action  - Function to execute\r\n * when a property changed.\r\n */\r\nPropertyManager.prototype.off = function ( propertyName, action ) {\r\n    var prop = this.create( propertyName );\r\n    prop.event.remove( action );\r\n};\r\n\r\n\r\n/**\r\n * @export\r\n * @function\r\n * @param {object} container - Object which will hold properties.\r\n */\r\nfunction constructor( container ) {\r\n    try {\r\n        if ( typeof container === 'undefined' ) {\r\n            fail( \"Argument `container` is mandatory!\" );\r\n        }\r\n        if ( typeof container !== 'object' ) return null;\r\n\r\n        let pm = container[ CONTAINER_SYMBOL ];\r\n        if ( !pm ) {\r\n            pm = new PropertyManager( container );\r\n            container[ CONTAINER_SYMBOL ] = pm;\r\n        }\r\n        return pm;\r\n    } catch ( ex ) {\r\n        console.error( ex );\r\n        return null;\r\n    }\r\n}\r\n\r\n/**\r\n * @export .isLinkable\r\n * Look if an object  has a property manager assigned to  it and own a\r\n * property which name is `propertyName`.\r\n */\r\nfunction isLinkable( container, propertyName ) {\r\n    if ( typeof container[ CONTAINER_SYMBOL ] === \"undefined\" ) return false;\r\n    if ( typeof propertyName !== 'string' ) return true;\r\n    return typeof container[ CONTAINER_SYMBOL ]._props[ propertyName ] !== \"undefined\";\r\n};\r\n\r\nfunction getAllAttributesNames( container ) {\r\n    if ( container[ CONTAINER_SYMBOL ] === undefined ) return [];\r\n    return Object.keys( container[ CONTAINER_SYMBOL ]._props );\r\n};\r\n\r\n/**\r\n * Return the linkable properties which holds this value, or `null`.\r\n */\r\nfunction getProperties( property ) {\r\n    var properties = property[ PROPERTY_SYMBOL ];\r\n    if ( !Array.isArray( properties ) ) return null;\r\n    return properties;\r\n};\r\n\r\n/**\r\n * @export .create\r\n * Create an new linkable property.\r\n * @param {string} propertyName - Name of the property.\r\n * @param {any} options.init - Initial value. Won't fire any change notification.\r\n * @param {function=undefined} options.get - Special getter.\r\n * @param {function=undefined} options.set - Special setter.\r\n * @param {function=undefined}  options.cast - Conversion to  apply to\r\n * the value before setting it.\r\n */\r\nPropertyManager.prototype.create = function ( propertyName, options ) {\r\n    var that = this;\r\n    if ( typeof propertyName !== 'string' ) fail( \"propertyName must be a string!\" );\r\n    var p = this._props[ propertyName ];\r\n    if ( !p ) {\r\n        if ( typeof options === 'undefined' ) options = {};\r\n        p = createNewProperty.call( this, propertyName, options );\r\n    }\r\n    return p;\r\n};\r\n\r\n/**\r\n * Copy all the attributes of `source` into `target`.\r\n */\r\nfunction applyAttributesToTarget( source, target ) {\r\n    var attName, attValue;\r\n    for ( attName in source ) {\r\n        if ( module.exports.isLinkable( target, attName ) ) {\r\n            attValue = source[ attName ];\r\n            target[ attName ] = attValue;\r\n        }\r\n    }\r\n}\r\n\r\nfunction createNewProperty( propertyName, options ) {\r\n    var that = this;\r\n\r\n    var prop = {\r\n        value: undefined,\r\n        event: new Event(),\r\n        filter: functionOrUndefined( options.filter ),\r\n        converter: functionOrUndefined( options.converter ),\r\n        delay: castPositiveInteger( options.delay ),\r\n        action: null,\r\n        alwaysFired: options.alwaysFired ? true : false,\r\n        manager: this,\r\n        name: propertyName,\r\n        timeout: 0\r\n    };\r\n    prop.get = createGetter( prop, options );\r\n    prop.set = createSetter( prop, options, that, propertyName );\r\n\r\n    this._props[ propertyName ] = prop;\r\n    if ( typeof options.init !== 'undefined' ) {\r\n        prop.set( options.init );\r\n    }\r\n\r\n    Object.defineProperty( this._container, propertyName, {\r\n        get: prop.get.bind( prop ),\r\n        set: that.change.bind( that, propertyName ),\r\n        enumerable: true,\r\n        configurable: false\r\n    } );\r\n\r\n    return prop;\r\n}\r\n\r\nfunction createGetter( prop, options ) {\r\n    if ( typeof options.get === 'function' ) {\r\n        return function ( v ) {\r\n            var newValue = options.get( v );\r\n            addPropToValue( prop, newValue );\r\n            return newValue;\r\n        };\r\n    }\r\n    return function ( v ) {\r\n        return prop.value;\r\n    };\r\n}\r\n\r\nfunction createSetter( prop, options, that, propertyName ) {\r\n    var setter;\r\n    if ( typeof options.cast === 'function' ) {\r\n        if ( typeof options.set === 'function' ) {\r\n            setter = function ( v ) {\r\n                removePropFromValue( prop, prop.get() );\r\n                var castedValue = options.cast( v, that );\r\n                addPropToValue( prop, prop.value );\r\n                options.set( castedValue );\r\n            };\r\n        } else {\r\n            setter = function ( v ) {\r\n                removePropFromValue( prop, prop.get() );\r\n                prop.value = options.cast( v, that );\r\n                addPropToValue( prop, prop.value );\r\n            };\r\n        }\r\n    } else {\r\n        setter = typeof options.set === 'function' ? options.set : function ( v ) {\r\n            removePropFromValue( prop, prop.get() );\r\n            prop.value = v;\r\n            addPropToValue( prop, prop.value );\r\n        };\r\n    }\r\n    return setter;\r\n}\r\n\r\n/**\r\n * Add an `info` attribute to the  property's value. This is useful to\r\n * find the container and the property name from the value.\r\n */\r\nfunction addPropToValue( prop, value ) {\r\n    if ( value === undefined || value === null ) return;\r\n    if ( value.isContentChangeAware !== true ) return;\r\n    var properties = value[ PROPERTY_SYMBOL ];\r\n    if ( !Array.isArray( properties ) ) {\r\n        properties = [ prop ];\r\n    } else if ( properties.indexOf( prop ) === -1 ) {\r\n        properties.push( prop );\r\n    }\r\n    value[ PROPERTY_SYMBOL ] = properties;\r\n}\r\n\r\nfunction removePropFromValue( prop, value ) {\r\n    if ( value === undefined || value === null ) return;\r\n    if ( value.isContentChangeAware !== true ) return;\r\n    var properties = value[ PROPERTY_SYMBOL ];\r\n    if ( !Array.isArray( properties ) ) return;\r\n    var pos = properties.indexOf( prop );\r\n    if ( pos === -1 ) return;\r\n    properties.splice( pos, 1 );\r\n}\r\n\r\n/**\r\n * This is a special property which emit a change event as soon as any\r\n * value is set  to it, even if  this value has already  been set just\r\n * before. Moreover, the  value of this attribute is  always its name.\r\n * This is used for action properties in buttons, for instance.\r\n */\r\nPropertyManager.prototype.createAction = function ( propertyName, options ) {\r\n    if ( typeof options === 'undefined' ) options = {};\r\n    options.alwaysFired = true;\r\n    return this.create( propertyName, options );\r\n};\r\n\r\n\r\n/**\r\n * Most  of  the  time,  `action` is  called  immediatly  without  any\r\n * argument. But  you can configure  your property with a  `delay`. If\r\n * you do so, the action is only called after this `delay`(in ms). The\r\n * `action`can be lost  if another call to `exec()`  occurs before the\r\n * end of the `delay` and the `delay` is reset.\r\n */\r\nfunction exec( prop, action ) {\r\n    if ( !prop.delay ) action();\r\n    else {\r\n        clearTimeout( prop.timeout );\r\n        prop.timeout = setTimeout( action, prop.delay );\r\n    }\r\n};\r\n\r\n\r\nfunction fail( msg, source ) {\r\n    if ( typeof source === 'undefined' ) {\r\n        source = \"\";\r\n    } else {\r\n        source = \"::\" + source;\r\n    }\r\n    throw Error( \"[tfw.binding.property-manager\" + source + \"] \" + msg );\r\n}\r\n\r\nfunction castPositiveInteger( v ) {\r\n    if ( typeof v !== 'number' ) return 0;\r\n    if ( isNaN( v ) ) return 0;\r\n    return Math.max( 0, Math.floor( v ) );\r\n}\r\n\r\nfunction functionOrUndefined( f ) {\r\n    if ( typeof f === 'function' ) return f;\r\n    return undefined;\r\n}\r\n\r\n/**\r\n * A linkable property must link only if  we set a new value to it. If\r\n * the value  is a  List, we need  to check if  they have  a different\r\n * inner array because different Lists can share the same array and in\r\n * this cas, we don't want to fire a changed event.\r\n */\r\nfunction areDifferent( oldValue, newValue ) {\r\n    return oldValue !== newValue;\r\n}\r\n\r\n\r\n/**\r\n * Create a readonly attribute.\r\n *\r\n * @param {object} target - Object which will bear the readonly attribute.\r\n * @param {object} attribs - Attributes with their values.\r\n * @returns {undefined}\r\n */\r\nfunction readonly( target, attribs ) {\r\n    const attribNames = Object.keys( attribs );\r\n    attribNames.forEach( function ( attName ) {\r\n        const attValue = attribs[ attName ];\r\n        if ( typeof attValue === 'function' ) {\r\n            Object.defineProperty(\r\n                target,\r\n                attName, {\r\n                    set() {\r\n                        throw Error( `Attribute \"${attName}\" is read only!` );\r\n                    },\r\n                    get: attValue,\r\n                    configurable: false,\r\n                    enumerable: true\r\n                }\r\n            );\r\n        } else {\r\n            Object.defineProperty(\r\n                target,\r\n                attName, {\r\n                    value: attValue,\r\n                    writable: false,\r\n                    configurable: false,\r\n                    enumerable: true\r\n                }\r\n            );\r\n        }\r\n    } );\r\n}\r\n\r\n\r\nmodule.exports._ = _;\n})"]}
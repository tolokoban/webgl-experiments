"use strict";function _slicedToArray(arr,i){return _arrayWithHoles(arr)||_iterableToArrayLimit(arr,i)||_nonIterableRest()}function _nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance")}function _iterableToArrayLimit(arr,i){var _arr=[],_n=!0,_d=!1,_e=void 0;try{for(var _s,_i=arr[Symbol.iterator]();!(_n=(_s=_i.next()).done)&&(_arr.push(_s.value),!(i&&_arr.length===i));_n=!0);}catch(err){_d=!0,_e=err}finally{try{_n||null==_i["return"]||_i["return"]()}finally{if(_d)throw _e}}return _arr}function _arrayWithHoles(arr){if(Array.isArray(arr))return arr}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor))throw new TypeError("Cannot call a class as a function")}function _defineProperties(target,props){for(var descriptor,i=0;i<props.length;i++)descriptor=props[i],descriptor.enumerable=descriptor.enumerable||!1,descriptor.configurable=!0,"value"in descriptor&&(descriptor.writable=!0),Object.defineProperty(target,descriptor.key,descriptor)}function _createClass(Constructor,protoProps,staticProps){return protoProps&&_defineProperties(Constructor.prototype,protoProps),staticProps&&_defineProperties(Constructor,staticProps),Constructor}require("light-saber.saber-plasma",function(require,module){function createMesh(){for(var ring,sectors=12,angleStep=2*Math.PI/sectors,line=[[0,.91],[.02,.9],[.03,.89],[.02,0]],arrayVert=[0,line[0][1],0],arrayElem=[],k=1;k<line.length;k++){ring=line[k];for(var i=0;i<sectors;i++){var ang=angleStep*i,_ring=_slicedToArray(ring,2),radius=_ring[0],y=_ring[1],x=radius*Math.cos(ang),z=radius*Math.sin(ang);arrayVert.push(x,y,z)}}for(var _i2=0;_i2<sectors;_i2++)arrayElem.push(_i2+1,0,(_i2+1)%sectors+1);for(var _k=0;_k<line.length-1;_k++)for(var idxRing0=1+sectors*_k,idxRing1=idxRing0+sectors,_i3=0;_i3<sectors;_i3++){var A=idxRing0+_i3,B=idxRing1+_i3,C=idxRing1+(_i3+1)%sectors,D=idxRing0+(_i3+1)%sectors;arrayElem.push(A,C,B),arrayElem.push(A,D,C)}return{arrayVert:new Float32Array(arrayVert),arrayElem:new Uint16Array(arrayElem)}}var GLOBAL={vert:"// Perspective\r\nuniform mat4 uniProjection;\r\n// Rotation de la multiball.\r\nuniform mat4 uniRotation;\r\n// Translation.\r\nuniform vec4 uniTranslation;\r\n\r\n// Coordonn\xE9es du centre du mod\xE8le.\r\nattribute vec3 attPoint;\r\n\r\nvoid main() {\r\n  // Rotation, translation et projection en perspective.\r\n  vec4 vertex = uniRotation * vec4( attPoint, 1 ) + uniTranslation;\r\n  gl_Position = uniProjection * vertex;\r\n}\r\n",frag:"precision mediump float;\r\n\r\nuniform vec4 uniColor;\r\n\r\nvoid main() {\r\n  gl_FragColor = uniColor;\r\n}\r\n"};var M4=require("webgl.math").m4,Colors=require("light-saber.colors"),Program=require("webgl.program"),Plasma=function(){function Plasma(gl){_classCallCheck(this,Plasma),this.gl=gl,this.prg=new Program(gl,{vert:GLOBAL.vert,frag:GLOBAL.frag}),this.buffVert=gl.createBuffer(),this.buffElem=gl.createBuffer();var _createMesh=createMesh(),arrayVert=_createMesh.arrayVert,arrayElem=_createMesh.arrayElem;this.arrayVert=arrayVert,this.arrayElem=arrayElem,this.countElem=arrayElem.length,gl.bindBuffer(gl.ARRAY_BUFFER,this.buffVert),gl.bufferData(gl.ARRAY_BUFFER,arrayVert,gl.STATIC_DRAW),gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER,this.buffElem),gl.bufferData(gl.ELEMENT_ARRAY_BUFFER,arrayElem,gl.STATIC_DRAW),this.projection=M4.identity(),this.rotation=M4.identity(),this.translation=new Float32Array([0,0,0,0]),this.color=Colors.PLASMA}return _createClass(Plasma,[{key:"paint",value:function paint(){var gl=this.gl,prg=this.prg,projection=this.projection,rotation=this.rotation,translation=this.translation,buffVert=this.buffVert,countElem=this.countElem;prg.use(),gl.bindBuffer(gl.ARRAY_BUFFER,this.buffVert),gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER,this.buffElem),prg.$uniProjection=projection,prg.$uniRotation=rotation,prg.$uniTranslation=translation,prg.$uniColor=this.color,gl.enable(gl.CULL_FACE),gl.enable(gl.DEPTH_TEST),gl.cullFace(gl.BACK),prg.bindAttribs(buffVert,"attPoint"),gl.drawElements(gl.TRIANGLES,countElem,gl.UNSIGNED_SHORT,0)}},{key:"destroy",value:function destroy(){var gl=this.gl;gl.deleteBuffer(this.buffVert),gl.deleteBuffer(this.buffElem)}}]),Plasma}();module.exports=Plasma,module.exports._=function _(){return""}});
//# sourceMappingURL=saber-plasma.js.map
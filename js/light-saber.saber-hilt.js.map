{"version":3,"sources":["saber-hilt.js"],"names":["require","module","createMesh","attribs","sectors","angleStep","Math","PI","line","arrayVert","arrayElem","k","length","ring0","ring1","ring2","i","ang","radius0","y0","x0","cos","z0","sin","radius1","y1","x1","z1","radius2","y2","x2","z2","computeNormal","nx","ny","nz","push","idxRing0","idxRing1","A","B","C","D","idxBottom","floor","idxRing","Float32Array","Uint16Array","vxA","vyA","vzA","invLenA","sqrt","vxB","vyB","vzB","invLenB","vx","vy","vz","invLen","vnx","vny","vnz","GLOBAL","M4","m4","Program","Hilt","gl","prg","vert","frag","buffVert","createBuffer","buffElem","countElem","bindBuffer","ARRAY_BUFFER","bufferData","STATIC_DRAW","ELEMENT_ARRAY_BUFFER","projection","identity","rotation","translation","use","$uniProjection","$uniRotation","$uniTranslation","enable","CULL_FACE","DEPTH_TEST","cullFace","BACK","bindAttribs","drawElements","TRIANGLES","UNSIGNED_SHORT","deleteBuffer","exports","_"],"mappings":"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","sourcesContent":["/** @module light-saber.saber-hilt */require( 'light-saber.saber-hilt', function(require, module, exports) { var _=function(){return ''}; const GLOBAL = {\n  \"vert\": \"// Perspective\\r\\nuniform mat4 uniProjection;\\r\\n// Rotation de la multiball.\\r\\nuniform mat4 uniRotation;\\r\\n// Translation.\\r\\nuniform vec4 uniTranslation;\\r\\n\\r\\n// Coordonnées du centre du modèle.\\r\\nattribute vec3 attPoint;\\r\\n// Vecteur normal en ce point.\\r\\nattribute vec3 attNormal;\\r\\n\\r\\nconst vec3 COLOR = vec3(0.1, 0.5, 0.86666666666666666);\\r\\nconst vec3 LIGHT = normalize(vec3(.5, -.5, -1));\\r\\n\\r\\nvarying vec3 varColor;\\r\\n\\r\\nfloat ramp(vec3 ray, float minValue, float maxValue) {\\r\\n    float diff = maxValue - minValue;\\r\\n    float alpha = 0.5 * (ray.z + 1.0);\\r\\n    return minValue + alpha * diff;\\r\\n}\\r\\n\\r\\nvoid main() {\\r\\n  // Rotation, translation et projection en perspective.\\r\\n  vec4 vertex = uniRotation * vec4( attPoint, 1 ) + uniTranslation;\\r\\n  gl_Position = uniProjection * vertex;\\r\\n\\r\\n  vec4 normal = uniRotation * vec4( attNormal, 1 );\\r\\n  vec3 ray = reflect(LIGHT, normal.xyz);\\r\\n  float lightPower = ramp(ray, 0.4, 1.5);\\r\\n\\r\\n  varColor = COLOR * lightPower;\\r\\n}\\r\\n\",\n  \"frag\": \"precision mediump float;\\r\\n\\r\\nvarying vec3 varColor;\\r\\n\\r\\nvoid main() {\\r\\n  gl_FragColor = vec4( varColor, 1.0 );\\r\\n}\\r\\n\"};\n  \"use strict\";\r\n\r\nconst\r\n    M4 = require( \"webgl.math\" ).m4,\r\n    Program = require( \"webgl.program\" );\r\n\r\nclass Hilt {\r\n    constructor( gl ) {\r\n        this.gl = gl;\r\n        this.prg = new Program( gl, {\r\n            vert: GLOBAL.vert,\r\n            frag: GLOBAL.frag\r\n        } );\r\n        this.buffVert = gl.createBuffer();\r\n        this.buffElem = gl.createBuffer();\r\n        const { arrayVert, arrayElem } = createMesh();\r\n        this.arrayVert = arrayVert;\r\n        this.arrayElem = arrayElem;\r\n        this.countElem = arrayElem.length;\r\n\r\n        gl.bindBuffer( gl.ARRAY_BUFFER, this.buffVert );\r\n        gl.bufferData( gl.ARRAY_BUFFER, arrayVert, gl.STATIC_DRAW );\r\n\r\n        gl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, this.buffElem );\r\n        gl.bufferData( gl.ELEMENT_ARRAY_BUFFER, arrayElem, gl.STATIC_DRAW );\r\n\r\n        this.projection = M4.identity();\r\n        this.rotation = M4.identity();\r\n        this.translation = new Float32Array( [ 0, -0.1, -1, 0 ] );\r\n    }\r\n\r\n    paint( time, delta ) {\r\n        const { gl, prg, projection, rotation, translation, buffVert, countElem } = this;\r\n\r\n        prg.use();\r\n        gl.bindBuffer( gl.ARRAY_BUFFER, this.buffVert );\r\n        gl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, this.buffElem );\r\n\r\n        prg.$uniProjection = projection;\r\n        prg.$uniRotation = rotation;\r\n        prg.$uniTranslation = translation;\r\n\r\n        gl.enable( gl.CULL_FACE );\r\n        gl.enable( gl.DEPTH_TEST );\r\n        gl.cullFace( gl.BACK );\r\n\r\n        prg.bindAttribs( buffVert, \"attPoint\", \"attNormal\" );\r\n        gl.drawElements( gl.TRIANGLES, countElem, gl.UNSIGNED_SHORT, 0 );\r\n    }\r\n\r\n    destroy() {\r\n        const gl = this.gl;\r\n        gl.deleteBuffer( this.buffVert );\r\n        gl.deleteBuffer( this.buffElem );\r\n    }\r\n}\r\n\r\n/**\r\n * Create the vertex and the element array for the light saber hilt.\r\n * This is merely a cylinder.\r\n *\r\n * @returns {object} `{ arrayVert, arrayElem }`\r\n */\r\nfunction createMesh() {\r\n    const\r\n        attribs = 6,\r\n        sectors = 12,\r\n        angleStep = 2 * Math.PI / sectors,\r\n        line = [\r\n            [ 0, 0 ],\r\n            [ 0.05, 0.02 ],\r\n            [ 0.02, 0 ],\r\n            [ 0.03, -0.10 ],\r\n            [ 0.03, -0.15 ],\r\n            [ 0.02, -0.25 ],\r\n            [ 0.03, -0.26 ],\r\n            [ 0, -0.27 ]\r\n        ],\r\n        arrayVert = [ 0, line[ 0 ][ 1 ], 0, 0, 1, 0 ],\r\n        arrayElem = [];\r\n    // --------------\r\n    // define vertice\r\n    for ( let k = 1; k < line.length - 1; k++ ) {\r\n        const\r\n            ring0 = line[ k - 1 ],\r\n            ring1 = line[ k ],\r\n            ring2 = line[ k + 1 ];\r\n        for ( let i = 0; i < sectors; i++ ) {\r\n            const\r\n                ang = angleStep * i,\r\n                [ radius0, y0 ] = ring0,\r\n                x0 = radius0 * Math.cos( ang ),\r\n                z0 = radius0 * Math.sin( ang ),\r\n                [ radius1, y1 ] = ring1,\r\n                x1 = radius1 * Math.cos( ang ),\r\n                z1 = radius1 * Math.sin( ang ),\r\n                [ radius2, y2 ] = ring2,\r\n                x2 = radius2 * Math.cos( ang ),\r\n                z2 = radius2 * Math.sin( ang ),\r\n                [ nx, ny, nz ] = computeNormal(\r\n                    x0, y0, z0,\r\n                    x1, y1, z1,\r\n                    x2, y2, z2\r\n                );\r\n            arrayVert.push( x1, y1, z1, nx, ny, nz );\r\n        }\r\n    }\r\n    // Add bottom vertex.\r\n    arrayVert.push( 0, line[ line.length - 1 ][ 1 ], 0, 0, -1, 0 );\r\n\r\n    // ------------\r\n    // Define faces\r\n\r\n    // Top cone.\r\n    for ( let i = 0; i < sectors; i++ ) {\r\n        arrayElem.push( i + 1, 0, ( ( i + 1 ) % sectors ) + 1 );\r\n    }\r\n\r\n    // Rings.\r\n    for ( let k = 0; k < line.length - 3; k++ ) {\r\n        const\r\n            idxRing0 = 1 + sectors * k,\r\n            idxRing1 = idxRing0 + sectors;\r\n        for ( let i = 0; i < sectors; i++ ) {\r\n            const\r\n                A = idxRing0 + i,\r\n                B = idxRing1 + i,\r\n                C = idxRing1 + ( i + 1 ) % sectors,\r\n                D = idxRing0 + ( i + 1 ) % sectors;\r\n            arrayElem.push( A, C, B );\r\n            arrayElem.push( A, D, C );\r\n        }\r\n    }\r\n\r\n    // Bottom cone.\r\n    const\r\n        idxBottom = Math.floor( arrayVert.length / attribs ) - 1,\r\n        idxRing = idxBottom - sectors;\r\n    for ( let i = 0; i < sectors; i++ ) {\r\n        arrayElem.push( idxBottom, idxRing + i, idxRing + ( i + 1 ) % sectors );\r\n    }\r\n\r\n    return {\r\n        arrayVert: new Float32Array( arrayVert ),\r\n        arrayElem: new Uint16Array( arrayElem )\r\n    };\r\n}\r\n\r\n/**\r\n * [computeNormal description]\r\n *\r\n * @param   {[type]} x0 [description]\r\n * @param   {[type]} y0 [description]\r\n * @param   {[type]} z0 [description]\r\n * @param   {[type]} x1 [description]\r\n * @param   {[type]} y1 [description]\r\n * @param   {[type]} z1 [description]\r\n * @param   {[type]} x2 [description]\r\n * @param   {[type]} y2 [description]\r\n * @param   {[type]} z2 [description]\r\n * @returns {[type]}    [description]\r\n */\r\nfunction computeNormal( x0, y0, z0, x1, y1, z1, x2, y2, z2 ) {\r\n    const\r\n        vxA = x0 - x1,\r\n        vyA = y0 - y1,\r\n        vzA = z0 - z1,\r\n        invLenA = 1 / Math.sqrt( vxA * vxA + vyA * vyA + vzA * vzA ),\r\n        vxB = x2 - x1,\r\n        vyB = y2 - y1,\r\n        vzB = z2 - z1,\r\n        invLenB = 1 / Math.sqrt( vxB * vxB + vyB * vyB + vzB * vzB ),\r\n        vx = invLenA * vxA + invLenB * vxB,\r\n        vy = invLenA * vyA + invLenB * vyB,\r\n        vz = invLenA * vzA + invLenB * vzB,\r\n        invLen = 1 / Math.sqrt( vx * vx + vy * vy + vz * vz ),\r\n        vnx = vx * invLen,\r\n        vny = vy * invLen,\r\n        vnz = vz * invLen,\r\n        proj = x1 * vnx + y1 * vny + z1 * vnz;\r\n    // The normal vector can be directed to the center of the object with this calculus.\r\n    // If it is the case, we need to flip it.\r\n    return proj > 0 ? [ vnx, vny, vnz ] : [ -vnx, -vny, -vnz ];\r\n}\r\n\r\nmodule.exports = Hilt;\r\n\r\n\r\nmodule.exports._ = _;\n})"]}
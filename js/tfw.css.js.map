{"version":3,"sources":["tfw.css.js"],"names":["require","module","exports","_","X","D","arguments","intl","all","RX_NUMBER","parseUnit","txt","c","mode","i","length","charAt","unit","v","parseFloat","substr","u","trim","toLowerCase"],"mappings":"aAAsBA,OAAO,CAAE,SAAF,CAAa,SAASA,OAAT,CAAkBC,MAAlB,CAA0BC,OAA1B,CAAmC,IAAMC,CAAAA,CAAC,CAAC,UAAU,CAAqC,QAASA,CAAAA,CAAT,EAAY,CAAC,MAAOC,CAAAA,CAAC,CAACC,CAAD,CAAGC,SAAH,CAAe,CAAxE,GAAID,CAAAA,CAAC,CAAC,CAAC,GAAK,EAAN,CAAN,CAAgBD,CAAC,CAACJ,OAAO,CAAC,GAAD,CAAP,CAAaO,IAA/B,CAAgF,MAARJ,CAAAA,CAAC,CAACK,GAAF,CAAMH,CAAE,CAAOF,CAAE,CAApG,EAAR,CAEzEM,SAAS,CAAG,8CAF6D,CAI7EP,OAAO,CAACQ,SAAR,CAAoB,SAASC,GAAT,CAAc,CAG9B,OAFIC,CAAAA,CAEJ,CADIC,IAAI,CAAG,CACX,CAASC,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAGH,GAAG,CAACI,MAAxB,CAAgCD,CAAC,EAAjC,CAEI,GADAF,CAAC,CAAGD,GAAG,CAACK,MAAJ,CAAWF,CAAX,CACJ,CAAa,CAAT,GAAAD,IAAJ,EACI,GAAS,GAAL,EAAAD,CAAC,EAAgB,GAAL,EAAAA,CAAZ,EAA8B,GAAL,EAAAA,CAAC,EAAgB,GAAL,EAAAA,CAAzC,CAAoDC,IAAI,CAAG,CAAP,CAApD,IACK,IAAS,GAAL,EAAAD,CAAJ,CAAcC,IAAI,CAAG,CAAP,CAAd,IACA,IAAQ,GAAJ,CAAAD,CAAJ,CAAa,MAHtB,KAKK,IAAY,CAAR,EAAAC,IAAJ,EACD,GAAS,GAAL,EAAAD,CAAJ,CAAcC,IAAI,CAAG,CAAP,CAAd,IACK,IAAQ,GAAJ,CAAAD,CAAC,EAAc,GAAJ,CAAAA,CAAf,CAAwB,MAF5B,KAIA,IAAY,CAAR,EAAAC,IAAJ,GACO,GAAJ,CAAAD,CAAC,EAAc,GAAJ,CAAAA,CADd,EACuB,MAIhC,GAAIK,CAAAA,IAAI,CAAG,CACPC,CAAC,CAAEC,UAAU,CAACR,GAAG,CAACS,MAAJ,CAAW,CAAX,CAAcN,CAAd,CAAD,CADN,CAEPO,CAAC,CAAEV,GAAG,CAACS,MAAJ,CAAWN,CAAX,EAAcQ,IAAd,GAAqBC,WAArB,EAFI,CAAX,CAQA,MAHgB,EAAX,GAAAN,IAAI,CAACI,CAGV,GAFEJ,IAAI,CAACI,CAAL,CAAS,IAEX,EAAOJ,IACV,CAhC4E,CAoC7EhB,MAAM,CAACC,OAAP,CAAeC,CAAf,CAAmBA,CAClB,CArC4B,C","sourcesContent":["/** @module tfw.css */require( 'tfw.css', function(require, module, exports) { var _=function(){var D={\"en\":{}},X=require(\"$\").intl;function _(){return X(D,arguments);}_.all=D;return _}();\r\n   \r\nvar RX_NUMBER = /[ \\t\\n\\r]*[+-]?(\\.[0-9]+|[0-9]+(\\.[0-9]+)?)/g;\r\n\r\nexports.parseUnit = function(txt) {\r\n    var c;\r\n    var mode = 0;\r\n    for (var i = 0; i < txt.length; i++) {\r\n        c = txt.charAt(i);\r\n        if (mode === 0) {\r\n            if (c == '-' || c == '+' || (c >= '0' && c <= '9')) mode = 1;\r\n            else if (c == '.') mode = 2;\r\n            else if (c > ' ') break;\r\n        }\r\n        else if (mode == 1) {\r\n            if (c == '.') mode = 2;\r\n            else if (c < '0' || c > '9') break;\r\n        }\r\n        else if (mode == 2) {\r\n            if (c < '0' || c > '9') break;\r\n        }\r\n    }\r\n\r\n    var unit = {\r\n        v: parseFloat(txt.substr(0, i)),\r\n        u: txt.substr(i).trim().toLowerCase()\r\n    };\r\n    \r\n    if ( unit.u === '' ) {\r\n      unit.u = 'px';\r\n    }\r\n    return unit;\r\n};\r\n\r\n\r\n\r\nmodule.exports._ = _;\n})"]}
{"version":3,"sources":["$.js"],"names":["require","module","exports","config","ZERO_CHAR_CODE","charCodeAt","lang","_lang","language","window","localStorage","getItem","navigator","browserLanguage","substr","toLowerCase","setItem","intl","words","params","dic","k","defLang","Object","keys","txt","processArguments","output","length","newTxt","lastIdx","i","c","charAt","substring","pos"],"mappings":"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","sourcesContent":["/** @module $ */require( '$', function(require, module, exports) {    exports.config={\"name\":\"\\\"webgl-experiments\\\"\",\"description\":\"\\\"WebGL study by tutorials\\\"\",\"author\":\"\\\"tolokoban\\\"\",\"version\":\"\\\"0.0.125\\\"\",\"major\":\"0\",\"minor\":\"0\",\"revision\":\"125\",\"date\":\"2019-02-22T14:39:49.078Z\",\"consts\":{}};\n\"use strict\";\r\n\r\nconst ZERO_CHAR_CODE = '0'.charCodeAt( 0 );\r\n\r\nexports.lang = function lang( _lang ) {\r\n    let language = _lang;\r\n    if ( typeof language === 'undefined' ) {\r\n        if ( window.localStorage ) {\r\n            language = window.localStorage.getItem( \"Language\" );\r\n        }\r\n        if ( !language ) {\r\n            language = window.navigator.language;\r\n            if ( !language ) {\r\n                language = window.navigator.browserLanguage;\r\n                if ( !language ) {\r\n                    language = \"fr\";\r\n                }\r\n            }\r\n        }\r\n        language = language.substr( 0, 2 ).toLowerCase();\r\n    }\r\n    if ( window.localStorage ) {\r\n        window.localStorage.setItem( \"Language\", language );\r\n    }\r\n    return language;\r\n};\r\n\r\nexports.intl = function intl( words, params ) {\r\n    let dic = words[ exports.lang() ];\r\n\r\n    const\r\n        k = params[ 0 ],\r\n        defLang = Object.keys( words )[ 0 ];\r\n    if ( !defLang ) return k;\r\n\r\n    if ( !dic ) {\r\n        dic = words[ defLang ];\r\n        if ( !dic ) {\r\n            return k;\r\n        }\r\n    }\r\n    let txt = dic[ k ];\r\n    if ( !txt ) {\r\n        dic = words[ defLang ];\r\n        txt = dic[ k ];\r\n    }\r\n    if ( !txt ) return k;\r\n    return processArguments( txt, params );\r\n};\r\n\r\n\r\n/**\r\n * @param {string} txt - Text with place holders like `$1`, `$2`, etc.\r\n * @param {array} params - Params for place holders replacement.\r\n * @return {string} The text with place holders replaces by params.\r\n */\r\nfunction processArguments( txt, params ) {\r\n    let output = txt;\r\n    if ( params.length > 1 ) {\r\n        let\r\n            newTxt = \"\",\r\n            lastIdx = 0;\r\n        for ( let i = 0; i < txt.length; i++ ) {\r\n            const c = txt.charAt( i );\r\n            if ( c === '$' ) {\r\n                newTxt += txt.substring( lastIdx, i );\r\n                i++;\r\n                const pos = txt.charCodeAt( i ) - ZERO_CHAR_CODE;\r\n                if ( pos < 0 || pos >= params.length ) {\r\n                    newTxt += `$${txt.charAt(i)}`;\r\n                } else {\r\n                    newTxt += params[ pos ];\r\n                }\r\n                lastIdx = i + 1;\r\n            } else if ( c === '\\\\' ) {\r\n                newTxt += txt.substring( lastIdx, i );\r\n                i++;\r\n                newTxt += txt.charAt( i );\r\n                lastIdx = i + 1;\r\n            }\r\n        }\r\n        newTxt += txt.substr( lastIdx );\r\n        output = newTxt;\r\n    }\r\n    return output;\r\n}\r\n\r\n\r\n})"]}
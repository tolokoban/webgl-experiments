{"version":3,"sources":["external.hammer.js"],"names":["require","module","_","X","D","arguments","intl","all","window","document","exportName","setTimeoutContext","fn","timeout","context","setTimeout","bindFn","invokeArrayArg","arg","Array","isArray","each","obj","iterator","forEach","length","i","call","hasOwnProperty","deprecate","method","name","message","e","Error","stack","replace","log","console","warn","apply","inherit","child","base","properties","baseP","prototype","childP","Object","create","constructor","_super","assign","boolOrFn","val","args","ifUndefined","val1","val2","addEventListeners","target","types","handler","splitStr","type","addEventListener","removeEventListeners","removeEventListener","hasParent","node","parent","parentNode","inStr","str","find","indexOf","trim","split","inArray","src","findByKey","toArray","slice","uniqueArray","key","sort","results","values","push","a","b","prefixed","property","camelProp","toUpperCase","VENDOR_PREFIXES","prefix","prop","uniqueId","_uniqueId","getWindowForElement","element","doc","ownerDocument","defaultView","parentWindow","Input","manager","callback","that","options","inputTarget","domHandler","ev","enable","init","createInputInstance","Type","inputClass","SUPPORT_POINTER_EVENTS","PointerEventInput","SUPPORT_ONLY_TOUCH","TouchInput","SUPPORT_TOUCH","TouchMouseInput","MouseInput","inputHandler","eventType","input","pointersLen","pointers","changedPointersLen","changedPointers","isFirst","isFinal","session","computeInputData","emit","recognize","prevInput","pointersLength","firstInput","simpleCloneInputData","firstMultiple","offsetCenter","center","getCenter","timeStamp","now","deltaTime","angle","getAngle","distance","getDistance","computeDeltaXY","offsetDirection","getDirection","deltaX","deltaY","overallVelocity","getVelocity","overallVelocityX","x","overallVelocityY","y","abs","scale","getScale","rotation","getRotation","maxPointers","computeIntervalInputData","srcEvent","offset","offsetDelta","prevDelta","velocity","velocityX","velocityY","direction","last","lastInterval","v","clientX","round","clientY","p1","p2","props","PROPS_XY","Math","sqrt","atan2","PI","start","end","PROPS_CLIENT_XY","evEl","evWin","pressed","POINTER_ELEMENT_EVENTS","POINTER_WINDOW_EVENTS","store","pointerEvents","SingleTouchInput","evTarget","started","normalizeSingleTouches","touches","changed","changedTouches","concat","targetIds","getTouches","allTouches","identifier","targetTouches","changedTargetTouches","filter","touch","mouse","primaryTouch","lastTouches","recordTouches","eventData","setLastTouch","lastTouch","lts","removeLastTouch","splice","isSyntheticEvent","t","dx","dy","TouchAction","value","set","cleanTouchActions","actions","hasPanX","hasPanY","Recognizer","defaults","id","state","simultaneous","requireFail","stateStr","directionStr","getRecognizerByNameIfManager","otherRecognizer","recognizer","get","AttrRecognizer","PanRecognizer","pX","pY","PinchRecognizer","PressRecognizer","_timer","_input","RotateRecognizer","SwipeRecognizer","TapRecognizer","pTime","pCenter","count","Hammer","recognizers","preset","Manager","handlers","oldCssProps","touchAction","toggleCssProps","item","add","recognizeWith","requireFailure","style","cssProps","triggerDomEvent","event","data","gestureEvent","createEvent","initEvent","gesture","dispatchEvent","TEST_ELEMENT","createElement","Date","TypeError","source","output","index","nextKey","extend","dest","merge","keys","MOBILE_REGEX","test","navigator","userAgent","INPUT_TYPE_TOUCH","INPUT_TYPE_MOUSE","INPUT_START","INPUT_MOVE","INPUT_END","INPUT_CANCEL","DIRECTION_NONE","DIRECTION_LEFT","DIRECTION_RIGHT","DIRECTION_UP","DIRECTION_DOWN","DIRECTION_HORIZONTAL","DIRECTION_VERTICAL","DIRECTION_ALL","destroy","MOUSE_INPUT_MAP","mousedown","mousemove","mouseup","button","which","pointerType","POINTER_INPUT_MAP","pointerdown","pointermove","pointerup","pointercancel","pointerout","IE10_POINTER_TYPE_ENUM","MSPointerEvent","PointerEvent","removePointer","eventTypeNormalized","toLowerCase","storeIndex","pointerId","SINGLE_TOUCH_INPUT_MAP","touchstart","touchmove","touchend","touchcancel","TOUCH_INPUT_MAP","inputEvent","inputData","isTouch","isMouse","sourceCapabilities","firesTouchEvents","PREFIXED_TOUCH_ACTION","NATIVE_TOUCH_ACTION","TOUCH_ACTION_COMPUTE","TOUCH_ACTION_NONE","TOUCH_ACTION_PAN_X","TOUCH_ACTION_PAN_Y","TOUCH_ACTION_MAP","touchMap","cssSupports","CSS","supports","compute","update","getTouchAction","join","preventDefaults","prevented","preventDefault","hasNone","isTapPointer","isTapMovement","isTapTouchTime","preventSrc","STATE_BEGAN","STATE_CHANGED","STATE_ENDED","STATE_RECOGNIZED","STATE_CANCELLED","STATE_FAILED","dropRecognizeWith","dropRequireFailure","hasRequireFailures","canRecognizeWith","self","additionalEvent","tryEmit","canEmit","inputDataClone","process","reset","attrTest","optionPointers","isRecognized","isValid","threshold","directionTest","hasMoved","inOut","time","validPointers","validMovement","validTime","clearTimeout","taps","interval","posThreshold","validTouchTime","failTimeout","validInterval","validMultiTap","tapCount","VERSION","domEvents","userSelect","touchSelect","touchCallout","contentZooming","userDrag","tapHighlightColor","FORCED_STOP","stop","force","stopped","curRecognizer","existing","remove","on","events","off","STATE_POSSIBLE","Tap","Pan","Swipe","Pinch","Rotate","Press","freeGlobal","define","amd","exports"],"mappings":"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","sourcesContent":["/** @module external.hammer */require( 'external.hammer', function(require, module, exports) { var _=function(){var D={\"en\":{},\"fr\":{}},X=require(\"$\").intl;function _(){return X(D,arguments);}_.all=D;return _}();\r\n   'use strict';\r\n\r\n/**\r\n * ! Hammer.JS - v2.0.8 - 2016-04-23\r\n * http://hammerjs.github.io/\r\n *\r\n * Copyright (c) 2016 Jorik Tangelder;\r\n * Licensed under the MIT license */\r\n\r\n/* eslint max-statements: [\"error\", 20, { \"ignoreTopLevelFunctions\": true }] */\r\n/* eslint wrap-iife: 0 */\r\n( function ( window, document, exportName, undefined ) {\r\n    const\r\n        VENDOR_PREFIXES = [ '', 'webkit', 'Moz', 'MS', 'ms', 'o' ],\r\n        TEST_ELEMENT = document.createElement( 'div' ),\r\n        TYPE_FUNCTION = 'function';\r\n\r\n    const\r\n        round = Math.round,\r\n        abs = Math.abs,\r\n        now = Date.now;\r\n\r\n    /**\r\n     * set a timeout with a given scope\r\n     * @param {Function} fn\r\n     * @param {Number} timeout\r\n     * @param {Object} context\r\n     * @returns {number}\r\n     */\r\n    function setTimeoutContext( fn, timeout, context ) {\r\n        return setTimeout( bindFn( fn, context ), timeout );\r\n    }\r\n\r\n    /**\r\n     * if the argument is an array, we want to execute the fn on each entry\r\n     * if it aint an array we don't want to do a thing.\r\n     * this is used by all the methods that accept a single and array argument.\r\n     * @param {*|Array} arg\r\n     * @param {String} fn\r\n     * @param {Object} [context]\r\n     * @returns {Boolean}\r\n     */\r\n    function invokeArrayArg( arg, fn, context ) {\r\n        if ( Array.isArray( arg ) ) {\r\n            each( arg, context[ fn ], context );\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * walk objects and arrays\r\n     * @param {Object} obj\r\n     * @param {Function} iterator\r\n     * @param {Object} context\r\n     */\r\n    function each( obj, iterator, context ) {\r\n        var i;\r\n\r\n        if ( !obj ) {\r\n            return;\r\n        }\r\n\r\n        if ( obj.forEach ) {\r\n            obj.forEach( iterator, context );\r\n        } else if ( obj.length !== undefined ) {\r\n            i = 0;\r\n            while ( i < obj.length ) {\r\n                iterator.call( context, obj[ i ], i, obj );\r\n                i++;\r\n            }\r\n        } else {\r\n            for ( i in obj ) {\r\n                obj.hasOwnProperty( i ) && iterator.call( context, obj[ i ], i, obj );\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * wrap a method with a deprecation warning and stack trace\r\n     * @param {Function} method\r\n     * @param {String} name\r\n     * @param {String} message\r\n     * @returns {Function} A new function wrapping the supplied method.\r\n     */\r\n    function deprecate( method, name, message ) {\r\n        var deprecationMessage = 'DEPRECATED METHOD: ' + name + '\\n' + message + ' AT \\n';\r\n        return function () {\r\n            var e = new Error( 'get-stack-trace' );\r\n            var stack = e && e.stack ? e.stack.replace( /^[^\\(]+?[\\n$]/gm, '' )\r\n                .replace( /^\\s+at\\s+/gm, '' )\r\n                .replace( /^Object.<anonymous>\\s*\\(/gm, '{anonymous}()@' ) : 'Unknown Stack Trace';\r\n\r\n            var log = window.console && ( window.console.warn || window.console.log );\r\n            if ( log ) {\r\n                log.call( window.console, deprecationMessage, stack );\r\n            }\r\n            return method.apply( this, arguments );\r\n        };\r\n    }\r\n\r\n    /**\r\n     * extend object.\r\n     * means that properties in dest will be overwritten by the ones in src.\r\n     * @param {Object} target\r\n     * @param {...Object} objects_to_assign\r\n     * @returns {Object} target\r\n     */\r\n    let assign;\r\n    if ( typeof Object.assign !== 'function' ) {\r\n        assign = function assign( target ) {\r\n            if ( target === undefined || target === null ) {\r\n                throw new TypeError( 'Cannot convert undefined or null to object' );\r\n            }\r\n\r\n            var output = Object( target );\r\n            for ( var index = 1; index < arguments.length; index++ ) {\r\n                var source = arguments[ index ];\r\n                if ( source !== undefined && source !== null ) {\r\n                    for ( var nextKey in source ) {\r\n                        if ( source.hasOwnProperty( nextKey ) ) {\r\n                            output[ nextKey ] = source[ nextKey ];\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            return output;\r\n        };\r\n    } else {\r\n        assign = Object.assign;\r\n    }\r\n\r\n    /**\r\n     * extend object.\r\n     * means that properties in dest will be overwritten by the ones in src.\r\n     * @param {Object} dest\r\n     * @param {Object} src\r\n     * @param {Boolean} [merge=false]\r\n     * @returns {Object} dest\r\n     */\r\n    var extend = deprecate( function extend( dest, src, merge ) {\r\n        var keys = Object.keys( src );\r\n        var i = 0;\r\n        while ( i < keys.length ) {\r\n            if ( !merge || ( merge && dest[ keys[ i ] ] === undefined ) ) {\r\n                dest[ keys[ i ] ] = src[ keys[ i ] ];\r\n            }\r\n            i++;\r\n        }\r\n        return dest;\r\n    }, 'extend', 'Use `assign`.' );\r\n\r\n    /**\r\n     * merge the values from src in the dest.\r\n     * means that properties that exist in dest will not be overwritten by src\r\n     * @param {Object} dest\r\n     * @param {Object} src\r\n     * @returns {Object} dest\r\n     */\r\n    var merge = deprecate( function merge( dest, src ) {\r\n        return extend( dest, src, true );\r\n    }, 'merge', 'Use `assign`.' );\r\n\r\n    /**\r\n     * simple class inheritance\r\n     * @param {Function} child\r\n     * @param {Function} base\r\n     * @param {Object} [properties]\r\n     */\r\n    function inherit( child, base, properties ) {\r\n        const\r\n            baseP = base.prototype,\r\n            childP = child.prototype = Object.create( baseP );\r\n        childP.constructor = child;\r\n        childP._super = baseP;\r\n\r\n        if ( properties ) {\r\n            assign( childP, properties );\r\n        }\r\n    }\r\n\r\n    /**\r\n     * simple function bind\r\n     * @param {Function} fn\r\n     * @param {Object} context\r\n     * @returns {Function}\r\n     */\r\n    function bindFn( fn, context ) {\r\n        return function boundFn() {\r\n            return fn.apply( context, arguments );\r\n        };\r\n    }\r\n\r\n    /**\r\n     * let a boolean value also be a function that must return a boolean\r\n     * this first item in args will be used as the context\r\n     * @param {Boolean|Function} val\r\n     * @param {Array} [args]\r\n     * @returns {Boolean}\r\n     */\r\n    function boolOrFn( val, args ) {\r\n        if ( typeof val == TYPE_FUNCTION ) {\r\n            return val.apply( args ? args[ 0 ] || undefined : undefined, args );\r\n        }\r\n        return val;\r\n    }\r\n\r\n    /**\r\n     * use the val2 when val1 is undefined\r\n     * @param {*} val1\r\n     * @param {*} val2\r\n     * @returns {*}\r\n     */\r\n    function ifUndefined( val1, val2 ) {\r\n        return ( val1 === undefined ) ? val2 : val1;\r\n    }\r\n\r\n    /**\r\n     * addEventListener with multiple events at once\r\n     * @param {EventTarget} target\r\n     * @param {String} types\r\n     * @param {Function} handler\r\n     */\r\n    function addEventListeners( target, types, handler ) {\r\n        each( splitStr( types ), function ( type ) {\r\n            target.addEventListener( type, handler, false );\r\n        } );\r\n    }\r\n\r\n    /**\r\n     * removeEventListener with multiple events at once\r\n     * @param {EventTarget} target\r\n     * @param {String} types\r\n     * @param {Function} handler\r\n     */\r\n    function removeEventListeners( target, types, handler ) {\r\n        each( splitStr( types ), function ( type ) {\r\n            target.removeEventListener( type, handler, false );\r\n        } );\r\n    }\r\n\r\n    /**\r\n     * find if a node is in the given parent\r\n     * @method hasParent\r\n     * @param {HTMLElement} node\r\n     * @param {HTMLElement} parent\r\n     * @return {Boolean} found\r\n     */\r\n    function hasParent( node, parent ) {\r\n        while ( node ) {\r\n            if ( node == parent ) {\r\n                return true;\r\n            }\r\n            node = node.parentNode;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * small indexOf wrapper\r\n     * @param {String} str\r\n     * @param {String} find\r\n     * @returns {Boolean} found\r\n     */\r\n    function inStr( str, find ) {\r\n        return str.indexOf( find ) > -1;\r\n    }\r\n\r\n    /**\r\n     * split string on whitespace\r\n     * @param {String} str\r\n     * @returns {Array} words\r\n     */\r\n    function splitStr( str ) {\r\n        return str.trim().split( /\\s+/g );\r\n    }\r\n\r\n    /**\r\n     * find if a array contains the object using indexOf or a simple polyFill\r\n     * @param {Array} src\r\n     * @param {String} find\r\n     * @param {String} [findByKey]\r\n     * @return {Boolean|Number} false when not found, or the index\r\n     */\r\n    function inArray( src, find, findByKey ) {\r\n        if ( src.indexOf && !findByKey ) {\r\n            return src.indexOf( find );\r\n        } else {\r\n            var i = 0;\r\n            while ( i < src.length ) {\r\n                if ( ( findByKey && src[ i ][ findByKey ] == find ) || ( !findByKey && src[ i ] === find ) ) {\r\n                    return i;\r\n                }\r\n                i++;\r\n            }\r\n            return -1;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * convert array-like objects to real arrays\r\n     * @param {Object} obj\r\n     * @returns {Array}\r\n     */\r\n    function toArray( obj ) {\r\n        return Array.prototype.slice.call( obj, 0 );\r\n    }\r\n\r\n    /**\r\n     * unique array with objects based on a key (like 'id') or just by the array's value\r\n     * @param {Array} src [{id:1},{id:2},{id:1}]\r\n     * @param {String} [key]\r\n     * @param {Boolean} [sort=False]\r\n     * @returns {Array} [{id:1},{id:2}]\r\n     */\r\n    function uniqueArray( src, key, sort ) {\r\n        var results = [];\r\n        var values = [];\r\n        var i = 0;\r\n\r\n        while ( i < src.length ) {\r\n            var val = key ? src[ i ][ key ] : src[ i ];\r\n            if ( inArray( values, val ) < 0 ) {\r\n                results.push( src[ i ] );\r\n            }\r\n            values[ i ] = val;\r\n            i++;\r\n        }\r\n\r\n        if ( sort ) {\r\n            if ( !key ) {\r\n                results = results.sort();\r\n            } else {\r\n                results = results.sort( function sortUniqueArray( a, b ) {\r\n                    return a[ key ] > b[ key ];\r\n                } );\r\n            }\r\n        }\r\n\r\n        return results;\r\n    }\r\n\r\n    /**\r\n     * get the prefixed property\r\n     * @param {Object} obj\r\n     * @param {String} property\r\n     * @returns {String|Undefined} prefixed\r\n     */\r\n    function prefixed( obj, property ) {\r\n        const camelProp = property[ 0 ].toUpperCase() + property.slice( 1 );\r\n\r\n        let i = 0;\r\n        while ( i < VENDOR_PREFIXES.length ) {\r\n            const\r\n                prefix = VENDOR_PREFIXES[ i ],\r\n                prop = ( prefix ) ? prefix + camelProp : property;\r\n\r\n            if ( prop in obj ) {\r\n                return prop;\r\n            }\r\n            i++;\r\n        }\r\n        return undefined;\r\n    }\r\n\r\n    /**\r\n     * get a unique id\r\n     * @returns {number} uniqueId\r\n     */\r\n    let _uniqueId = 1;\r\n\r\n    function uniqueId() {\r\n        return _uniqueId++;\r\n    }\r\n\r\n    /**\r\n     * get the window object of an element\r\n     * @param {HTMLElement} element\r\n     * @returns {DocumentView|Window}\r\n     */\r\n    function getWindowForElement( element ) {\r\n        var doc = element.ownerDocument || element;\r\n        return ( doc.defaultView || doc.parentWindow || window );\r\n    }\r\n\r\n    const MOBILE_REGEX = /mobile|tablet|ip(ad|hone|od)|android/i;\r\n\r\n    const\r\n        SUPPORT_TOUCH = ( 'ontouchstart' in window ),\r\n        SUPPORT_POINTER_EVENTS = prefixed( window, 'PointerEvent' ) !== undefined,\r\n        SUPPORT_ONLY_TOUCH = SUPPORT_TOUCH && MOBILE_REGEX.test( navigator.userAgent );\r\n\r\n    const\r\n        INPUT_TYPE_TOUCH = 'touch',\r\n        INPUT_TYPE_PEN = 'pen',\r\n        INPUT_TYPE_MOUSE = 'mouse',\r\n        INPUT_TYPE_KINECT = 'kinect';\r\n\r\n    const COMPUTE_INTERVAL = 25;\r\n\r\n    const\r\n        INPUT_START = 1,\r\n        INPUT_MOVE = 2,\r\n        INPUT_END = 4,\r\n        INPUT_CANCEL = 8;\r\n\r\n    const\r\n        DIRECTION_NONE = 1,\r\n        DIRECTION_LEFT = 2,\r\n        DIRECTION_RIGHT = 4,\r\n        DIRECTION_UP = 8,\r\n        DIRECTION_DOWN = 16;\r\n\r\n    const\r\n        DIRECTION_HORIZONTAL = DIRECTION_LEFT | DIRECTION_RIGHT,\r\n        DIRECTION_VERTICAL = DIRECTION_UP | DIRECTION_DOWN,\r\n        DIRECTION_ALL = DIRECTION_HORIZONTAL | DIRECTION_VERTICAL;\r\n\r\n    const\r\n        PROPS_XY = [ 'x', 'y' ],\r\n        PROPS_CLIENT_XY = [ 'clientX', 'clientY' ];\r\n\r\n    /**\r\n     * create new input type manager\r\n     * @param {Manager} manager\r\n     * @param {Function} callback\r\n     * @returns {Input}\r\n     * @constructor\r\n     */\r\n    function Input( manager, callback ) {\r\n        const that = this;\r\n        this.manager = manager;\r\n        this.callback = callback;\r\n        this.element = manager.element;\r\n        this.target = manager.options.inputTarget;\r\n\r\n        // smaller wrapper around the handler, for the scope and the enabled state of the manager,\r\n        // so when disabled the input events are completely bypassed.\r\n        this.domHandler = function ( ev ) {\r\n            if ( boolOrFn( manager.options.enable, [ manager ] ) ) {\r\n                that.handler( ev );\r\n            }\r\n        };\r\n\r\n        this.init();\r\n    }\r\n\r\n    Input.prototype = {\r\n        /**\r\n         * should handle the inputEvent data and trigger the callback\r\n         * @virtual\r\n         */\r\n        handler() {},\r\n\r\n        /**\r\n         * bind the events\r\n         */\r\n        init() {\r\n            this.evEl && addEventListeners( this.element, this.evEl, this.domHandler );\r\n            this.evTarget && addEventListeners( this.target, this.evTarget, this.domHandler );\r\n            this.evWin && addEventListeners( getWindowForElement( this.element ), this.evWin, this.domHandler );\r\n        },\r\n\r\n        /**\r\n         * unbind the events\r\n         */\r\n        destroy() {\r\n            this.evEl && removeEventListeners( this.element, this.evEl, this.domHandler );\r\n            this.evTarget && removeEventListeners( this.target, this.evTarget, this.domHandler );\r\n            this.evWin && removeEventListeners( getWindowForElement( this.element ), this.evWin, this.domHandler );\r\n        }\r\n    };\r\n\r\n    /**\r\n     * create new input type manager\r\n     * called by the Manager constructor\r\n     * @param {Hammer} manager\r\n     * @returns {Input}\r\n     */\r\n    function createInputInstance( manager ) {\r\n        var Type;\r\n        var inputClass = manager.options.inputClass;\r\n\r\n        if ( inputClass ) {\r\n            Type = inputClass;\r\n        } else if ( SUPPORT_POINTER_EVENTS ) {\r\n            Type = PointerEventInput;\r\n        } else if ( SUPPORT_ONLY_TOUCH ) {\r\n            Type = TouchInput;\r\n        } else if ( !SUPPORT_TOUCH ) {\r\n            Type = MouseInput;\r\n        } else {\r\n            Type = TouchMouseInput;\r\n        }\r\n        return new( Type )( manager, inputHandler );\r\n    }\r\n\r\n    /**\r\n     * handle input events\r\n     * @param {Manager} manager\r\n     * @param {String} eventType\r\n     * @param {Object} input\r\n     */\r\n    function inputHandler( manager, eventType, input ) {\r\n        var pointersLen = input.pointers.length;\r\n        var changedPointersLen = input.changedPointers.length;\r\n        var isFirst = ( eventType & INPUT_START && ( pointersLen - changedPointersLen === 0 ) );\r\n        var isFinal = ( eventType & ( INPUT_END | INPUT_CANCEL ) && ( pointersLen - changedPointersLen === 0 ) );\r\n\r\n        input.isFirst = !!isFirst;\r\n        input.isFinal = !!isFinal;\r\n\r\n        if ( isFirst ) {\r\n            manager.session = {};\r\n        }\r\n\r\n        // source event is the normalized value of the domEvents\r\n        // like 'touchstart, mouseup, pointerdown'\r\n        input.eventType = eventType;\r\n\r\n        // compute scale, rotation etc\r\n        computeInputData( manager, input );\r\n\r\n        // emit secret event\r\n        manager.emit( 'hammer.input', input );\r\n\r\n        manager.recognize( input );\r\n        manager.session.prevInput = input;\r\n    }\r\n\r\n    /**\r\n     * extend the data with some usable properties like scale, rotate, velocity etc\r\n     * @param {Object} manager\r\n     * @param {Object} input\r\n     */\r\n    function computeInputData( manager, input ) {\r\n        const\r\n            session = manager.session,\r\n            pointers = input.pointers,\r\n            pointersLength = pointers.length;\r\n\r\n        // store the first input to calculate the distance and direction\r\n        if ( !session.firstInput ) {\r\n            session.firstInput = simpleCloneInputData( input );\r\n        }\r\n\r\n        // to compute scale and rotation we need to store the multiple touches\r\n        if ( pointersLength > 1 && !session.firstMultiple ) {\r\n            session.firstMultiple = simpleCloneInputData( input );\r\n        } else if ( pointersLength === 1 ) {\r\n            session.firstMultiple = false;\r\n        }\r\n\r\n        const\r\n            firstInput = session.firstInput,\r\n            firstMultiple = session.firstMultiple,\r\n            offsetCenter = firstMultiple ? firstMultiple.center : firstInput.center;\r\n\r\n        const center = input.center = getCenter( pointers );\r\n        input.timeStamp = now();\r\n        input.deltaTime = input.timeStamp - firstInput.timeStamp;\r\n\r\n        input.angle = getAngle( offsetCenter, center );\r\n        input.distance = getDistance( offsetCenter, center );\r\n\r\n        computeDeltaXY( session, input );\r\n        input.offsetDirection = getDirection( input.deltaX, input.deltaY );\r\n\r\n        const overallVelocity = getVelocity( input.deltaTime, input.deltaX, input.deltaY );\r\n        input.overallVelocityX = overallVelocity.x;\r\n        input.overallVelocityY = overallVelocity.y;\r\n        input.overallVelocity = ( abs( overallVelocity.x ) > abs( overallVelocity.y ) ) ? overallVelocity.x : overallVelocity.y;\r\n\r\n        input.scale = firstMultiple ? getScale( firstMultiple.pointers, pointers ) : 1;\r\n        input.rotation = firstMultiple ? getRotation( firstMultiple.pointers, pointers ) : 0;\r\n\r\n        input.maxPointers = !session.prevInput ? input.pointers.length : ( ( input.pointers.length >\r\n            session.prevInput.maxPointers ) ? input.pointers.length : session.prevInput.maxPointers );\r\n\r\n        computeIntervalInputData( session, input );\r\n\r\n        // find the correct target\r\n        var target = manager.element;\r\n        if ( hasParent( input.srcEvent.target, target ) ) {\r\n            target = input.srcEvent.target;\r\n        }\r\n        input.target = target;\r\n    }\r\n\r\n    function computeDeltaXY( session, input ) {\r\n        let\r\n            center = input.center,\r\n            offset = session.offsetDelta || {},\r\n            prevDelta = session.prevDelta || {},\r\n            prevInput = session.prevInput || {};\r\n\r\n        if ( input.eventType === INPUT_START || prevInput.eventType === INPUT_END ) {\r\n            prevDelta = session.prevDelta = {\r\n                x: prevInput.deltaX || 0,\r\n                y: prevInput.deltaY || 0\r\n            };\r\n\r\n            offset = session.offsetDelta = {\r\n                x: center.x,\r\n                y: center.y\r\n            };\r\n        }\r\n\r\n        input.deltaX = prevDelta.x + ( center.x - offset.x );\r\n        input.deltaY = prevDelta.y + ( center.y - offset.y );\r\n    }\r\n\r\n    /**\r\n     * velocity is calculated every x ms\r\n     * @param {Object} session\r\n     * @param {Object} input\r\n     */\r\n    function computeIntervalInputData( session, input ) {\r\n        const\r\n            last = session.lastInterval || input,\r\n            deltaTime = input.timeStamp - last.timeStamp;\r\n        let velocity, velocityX, velocityY, direction;\r\n\r\n        if ( input.eventType !== INPUT_CANCEL && ( deltaTime > COMPUTE_INTERVAL || last.velocity === undefined ) ) {\r\n            const\r\n                deltaX = input.deltaX - last.deltaX,\r\n                deltaY = input.deltaY - last.deltaY,\r\n                v = getVelocity( deltaTime, deltaX, deltaY );\r\n\r\n            velocityX = v.x;\r\n            velocityY = v.y;\r\n            velocity = ( abs( v.x ) > abs( v.y ) ) ? v.x : v.y;\r\n            direction = getDirection( deltaX, deltaY );\r\n\r\n            session.lastInterval = input;\r\n        } else {\r\n            // use latest velocity info if it doesn't overtake a minimum period\r\n            velocity = last.velocity;\r\n            velocityX = last.velocityX;\r\n            velocityY = last.velocityY;\r\n            direction = last.direction;\r\n        }\r\n\r\n        input.velocity = velocity;\r\n        input.velocityX = velocityX;\r\n        input.velocityY = velocityY;\r\n        input.direction = direction;\r\n    }\r\n\r\n    /**\r\n     * create a simple clone from the input used for storage of firstInput and firstMultiple\r\n     * @param {Object} input\r\n     * @returns {Object} clonedInputData\r\n     */\r\n    function simpleCloneInputData( input ) {\r\n        // make a simple copy of the pointers because we will get a reference if we don't\r\n        // we only need clientXY for the calculations\r\n        var pointers = [];\r\n        var i = 0;\r\n        while ( i < input.pointers.length ) {\r\n            pointers[ i ] = {\r\n                clientX: round( input.pointers[ i ].clientX ),\r\n                clientY: round( input.pointers[ i ].clientY )\r\n            };\r\n            i++;\r\n        }\r\n\r\n        return {\r\n            timeStamp: now(),\r\n            pointers: pointers,\r\n            center: getCenter( pointers ),\r\n            deltaX: input.deltaX,\r\n            deltaY: input.deltaY\r\n        };\r\n    }\r\n\r\n    /**\r\n     * get the center of all the pointers\r\n     * @param {Array} pointers\r\n     * @return {Object} center contains `x` and `y` properties\r\n     */\r\n    function getCenter( pointers ) {\r\n        var pointersLength = pointers.length;\r\n\r\n        // no need to loop when only one touch\r\n        if ( pointersLength === 1 ) {\r\n            return {\r\n                x: round( pointers[ 0 ].clientX ),\r\n                y: round( pointers[ 0 ].clientY )\r\n            };\r\n        }\r\n\r\n        var x = 0,\r\n            y = 0,\r\n            i = 0;\r\n        while ( i < pointersLength ) {\r\n            x += pointers[ i ].clientX;\r\n            y += pointers[ i ].clientY;\r\n            i++;\r\n        }\r\n\r\n        return {\r\n            x: round( x / pointersLength ),\r\n            y: round( y / pointersLength )\r\n        };\r\n    }\r\n\r\n    /**\r\n     * calculate the velocity between two points. unit is in px per ms.\r\n     * @param {Number} deltaTime\r\n     * @param {Number} x\r\n     * @param {Number} y\r\n     * @return {Object} velocity `x` and `y`\r\n     */\r\n    function getVelocity( deltaTime, x, y ) {\r\n        return {\r\n            x: x / deltaTime || 0,\r\n            y: y / deltaTime || 0\r\n        };\r\n    }\r\n\r\n    /**\r\n     * get the direction between two points\r\n     * @param {Number} x\r\n     * @param {Number} y\r\n     * @return {Number} direction\r\n     */\r\n    function getDirection( x, y ) {\r\n        if ( x === y ) {\r\n            return DIRECTION_NONE;\r\n        }\r\n\r\n        if ( abs( x ) >= abs( y ) ) {\r\n            return x < 0 ? DIRECTION_LEFT : DIRECTION_RIGHT;\r\n        }\r\n        return y < 0 ? DIRECTION_UP : DIRECTION_DOWN;\r\n    }\r\n\r\n    /**\r\n     * calculate the absolute distance between two points\r\n     * @param {Object} p1 {x, y}\r\n     * @param {Object} p2 {x, y}\r\n     * @param {Array} [props] containing x and y keys\r\n     * @return {Number} distance\r\n     */\r\n    function getDistance( p1, p2, props ) {\r\n        if ( !props ) {\r\n            props = PROPS_XY;\r\n        }\r\n        var x = p2[ props[ 0 ] ] - p1[ props[ 0 ] ],\r\n            y = p2[ props[ 1 ] ] - p1[ props[ 1 ] ];\r\n\r\n        return Math.sqrt( ( x * x ) + ( y * y ) );\r\n    }\r\n\r\n    /**\r\n     * calculate the angle between two coordinates\r\n     * @param {Object} p1\r\n     * @param {Object} p2\r\n     * @param {Array} [props] containing x and y keys\r\n     * @return {Number} angle\r\n     */\r\n    function getAngle( p1, p2, props ) {\r\n        if ( !props ) {\r\n            props = PROPS_XY;\r\n        }\r\n        var x = p2[ props[ 0 ] ] - p1[ props[ 0 ] ],\r\n            y = p2[ props[ 1 ] ] - p1[ props[ 1 ] ];\r\n        return Math.atan2( y, x ) * 180 / Math.PI;\r\n    }\r\n\r\n    /**\r\n     * calculate the rotation degrees between two pointersets\r\n     * @param {Array} start array of pointers\r\n     * @param {Array} end array of pointers\r\n     * @return {Number} rotation\r\n     */\r\n    function getRotation( start, end ) {\r\n        return getAngle( end[ 1 ], end[ 0 ], PROPS_CLIENT_XY ) + getAngle( start[ 1 ], start[ 0 ], PROPS_CLIENT_XY );\r\n    }\r\n\r\n    /**\r\n     * calculate the scale factor between two pointersets\r\n     * no scale is 1, and goes down to 0 when pinched together, and bigger when pinched out\r\n     * @param {Array} start array of pointers\r\n     * @param {Array} end array of pointers\r\n     * @return {Number} scale\r\n     */\r\n    function getScale( start, end ) {\r\n        return getDistance( end[ 0 ], end[ 1 ], PROPS_CLIENT_XY ) / getDistance( start[ 0 ], start[ 1 ], PROPS_CLIENT_XY );\r\n    }\r\n\r\n    var MOUSE_INPUT_MAP = {\r\n        mousedown: INPUT_START,\r\n        mousemove: INPUT_MOVE,\r\n        mouseup: INPUT_END\r\n    };\r\n\r\n    var MOUSE_ELEMENT_EVENTS = 'mousedown';\r\n    var MOUSE_WINDOW_EVENTS = 'mousemove mouseup';\r\n\r\n    /**\r\n     * Mouse events input\r\n     * @constructor\r\n     * @extends Input\r\n     */\r\n    function MouseInput() {\r\n        this.evEl = MOUSE_ELEMENT_EVENTS;\r\n        this.evWin = MOUSE_WINDOW_EVENTS;\r\n\r\n        this.pressed = false; // mousedown state\r\n\r\n        Input.apply( this, arguments );\r\n    }\r\n\r\n    inherit( MouseInput, Input, {\r\n        /**\r\n         * handle mouse events\r\n         * @param {Object} ev\r\n         */\r\n        handler: function MEhandler( ev ) {\r\n            var eventType = MOUSE_INPUT_MAP[ ev.type ];\r\n\r\n            // on start we want to have the left mouse button down\r\n            if ( eventType & INPUT_START && ev.button !== 2 ) {\r\n                this.pressed = true;\r\n            }\r\n\r\n            if ( eventType & INPUT_MOVE && ev.which !== 1 ) {\r\n                eventType = INPUT_END;\r\n            }\r\n\r\n            // mouse must be down\r\n            if ( !this.pressed ) {\r\n                return;\r\n            }\r\n\r\n            if ( eventType & INPUT_END ) {\r\n                this.pressed = false;\r\n            }\r\n\r\n            this.callback( this.manager, eventType, {\r\n                pointers: [ ev ],\r\n                changedPointers: [ ev ],\r\n                pointerType: INPUT_TYPE_MOUSE,\r\n                srcEvent: ev\r\n            } );\r\n        }\r\n    } );\r\n\r\n    var POINTER_INPUT_MAP = {\r\n        pointerdown: INPUT_START,\r\n        pointermove: INPUT_MOVE,\r\n        pointerup: INPUT_END,\r\n        pointercancel: INPUT_CANCEL,\r\n        pointerout: INPUT_CANCEL\r\n    };\r\n\r\n    // in IE10 the pointer types is defined as an enum\r\n    var IE10_POINTER_TYPE_ENUM = {\r\n        2: INPUT_TYPE_TOUCH,\r\n        3: INPUT_TYPE_PEN,\r\n        4: INPUT_TYPE_MOUSE,\r\n        5: INPUT_TYPE_KINECT // see https://twitter.com/jacobrossi/status/480596438489890816\r\n    };\r\n\r\n    var POINTER_ELEMENT_EVENTS = 'pointerdown';\r\n    var POINTER_WINDOW_EVENTS = 'pointermove pointerup pointercancel';\r\n\r\n    // IE10 has prefixed support, and case-sensitive\r\n    if ( window.MSPointerEvent && !window.PointerEvent ) {\r\n        POINTER_ELEMENT_EVENTS = 'MSPointerDown';\r\n        POINTER_WINDOW_EVENTS = 'MSPointerMove MSPointerUp MSPointerCancel';\r\n    }\r\n\r\n    /**\r\n     * Pointer events input\r\n     * @constructor\r\n     * @extends Input\r\n     */\r\n    function PointerEventInput() {\r\n        this.evEl = POINTER_ELEMENT_EVENTS;\r\n        this.evWin = POINTER_WINDOW_EVENTS;\r\n\r\n        Input.apply( this, arguments );\r\n\r\n        this.store = ( this.manager.session.pointerEvents = [] );\r\n    }\r\n\r\n    inherit( PointerEventInput, Input, {\r\n        /**\r\n         * handle mouse events\r\n         * @param {Object} ev\r\n         */\r\n        handler: function PEhandler( ev ) {\r\n            var store = this.store;\r\n            var removePointer = false;\r\n\r\n            var eventTypeNormalized = ev.type.toLowerCase().replace( 'ms', '' );\r\n            var eventType = POINTER_INPUT_MAP[ eventTypeNormalized ];\r\n            var pointerType = IE10_POINTER_TYPE_ENUM[ ev.pointerType ] || ev.pointerType;\r\n\r\n            var isTouch = ( pointerType == INPUT_TYPE_TOUCH );\r\n\r\n            // get index of the event in the store\r\n            var storeIndex = inArray( store, ev.pointerId, 'pointerId' );\r\n\r\n            // start and mouse must be down\r\n            if ( eventType & INPUT_START && ( ev.button !== 2 || isTouch ) ) {\r\n                if ( storeIndex < 0 ) {\r\n                    store.push( ev );\r\n                    storeIndex = store.length - 1;\r\n                }\r\n            } else if ( eventType & ( INPUT_END | INPUT_CANCEL ) ) {\r\n                removePointer = true;\r\n            }\r\n\r\n            // it not found, so the pointer hasn't been down (so it's probably a hover)\r\n            if ( storeIndex < 0 ) {\r\n                return;\r\n            }\r\n\r\n            // update the event in the store\r\n            store[ storeIndex ] = ev;\r\n\r\n            this.callback( this.manager, eventType, {\r\n                pointers: store,\r\n                changedPointers: [ ev ],\r\n                pointerType: pointerType,\r\n                srcEvent: ev\r\n            } );\r\n\r\n            if ( removePointer ) {\r\n                // remove from the store\r\n                store.splice( storeIndex, 1 );\r\n            }\r\n        }\r\n    } );\r\n\r\n    var SINGLE_TOUCH_INPUT_MAP = {\r\n        touchstart: INPUT_START,\r\n        touchmove: INPUT_MOVE,\r\n        touchend: INPUT_END,\r\n        touchcancel: INPUT_CANCEL\r\n    };\r\n\r\n    var SINGLE_TOUCH_TARGET_EVENTS = 'touchstart';\r\n    var SINGLE_TOUCH_WINDOW_EVENTS = 'touchstart touchmove touchend touchcancel';\r\n\r\n    /**\r\n     * Touch events input\r\n     * @constructor\r\n     * @extends Input\r\n     */\r\n    function SingleTouchInput() {\r\n        this.evTarget = SINGLE_TOUCH_TARGET_EVENTS;\r\n        this.evWin = SINGLE_TOUCH_WINDOW_EVENTS;\r\n        this.started = false;\r\n\r\n        Input.apply( this, arguments );\r\n    }\r\n\r\n    inherit( SingleTouchInput, Input, {\r\n        handler: function TEhandler( ev ) {\r\n            var type = SINGLE_TOUCH_INPUT_MAP[ ev.type ];\r\n\r\n            // should we handle the touch events?\r\n            if ( type === INPUT_START ) {\r\n                this.started = true;\r\n            }\r\n\r\n            if ( !this.started ) {\r\n                return;\r\n            }\r\n\r\n            var touches = normalizeSingleTouches.call( this, ev, type );\r\n\r\n            // when done, reset the started state\r\n            if ( type & ( INPUT_END | INPUT_CANCEL ) && touches[ 0 ].length - touches[ 1 ].length === 0 ) {\r\n                this.started = false;\r\n            }\r\n\r\n            this.callback( this.manager, type, {\r\n                pointers: touches[ 0 ],\r\n                changedPointers: touches[ 1 ],\r\n                pointerType: INPUT_TYPE_TOUCH,\r\n                srcEvent: ev\r\n            } );\r\n        }\r\n    } );\r\n\r\n    /**\r\n     * @this {TouchInput}\r\n     * @param {Object} ev\r\n     * @param {Number} type flag\r\n     * @returns {undefined|Array} [all, changed]\r\n     */\r\n    function normalizeSingleTouches( ev, type ) {\r\n        var all = toArray( ev.touches );\r\n        var changed = toArray( ev.changedTouches );\r\n\r\n        if ( type & ( INPUT_END | INPUT_CANCEL ) ) {\r\n            all = uniqueArray( all.concat( changed ), 'identifier', true );\r\n        }\r\n\r\n        return [ all, changed ];\r\n    }\r\n\r\n    var TOUCH_INPUT_MAP = {\r\n        touchstart: INPUT_START,\r\n        touchmove: INPUT_MOVE,\r\n        touchend: INPUT_END,\r\n        touchcancel: INPUT_CANCEL\r\n    };\r\n\r\n    var TOUCH_TARGET_EVENTS = 'touchstart touchmove touchend touchcancel';\r\n\r\n    /**\r\n     * Multi-user touch events input\r\n     * @constructor\r\n     * @extends Input\r\n     */\r\n    function TouchInput() {\r\n        this.evTarget = TOUCH_TARGET_EVENTS;\r\n        this.targetIds = {};\r\n\r\n        Input.apply( this, arguments );\r\n    }\r\n\r\n    inherit( TouchInput, Input, {\r\n        handler: function MTEhandler( ev ) {\r\n            var type = TOUCH_INPUT_MAP[ ev.type ];\r\n            var touches = getTouches.call( this, ev, type );\r\n            if ( !touches ) {\r\n                return;\r\n            }\r\n\r\n            this.callback( this.manager, type, {\r\n                pointers: touches[ 0 ],\r\n                changedPointers: touches[ 1 ],\r\n                pointerType: INPUT_TYPE_TOUCH,\r\n                srcEvent: ev\r\n            } );\r\n        }\r\n    } );\r\n\r\n    /**\r\n     * @this {TouchInput}\r\n     * @param {Object} ev\r\n     * @param {Number} type flag\r\n     * @returns {undefined|Array} [all, changed]\r\n     */\r\n    function getTouches( ev, type ) {\r\n        var allTouches = toArray( ev.touches );\r\n        var targetIds = this.targetIds;\r\n\r\n        // when there is only one touch, the process can be simplified\r\n        if ( type & ( INPUT_START | INPUT_MOVE ) && allTouches.length === 1 ) {\r\n            targetIds[ allTouches[ 0 ].identifier ] = true;\r\n            return [ allTouches, allTouches ];\r\n        }\r\n\r\n        var i,\r\n            targetTouches,\r\n            changedTouches = toArray( ev.changedTouches ),\r\n            changedTargetTouches = [],\r\n            target = this.target;\r\n\r\n        // get target touches from touches\r\n        targetTouches = allTouches.filter( function ( touch ) {\r\n            return hasParent( touch.target, target );\r\n        } );\r\n\r\n        // collect touches\r\n        if ( type === INPUT_START ) {\r\n            i = 0;\r\n            while ( i < targetTouches.length ) {\r\n                targetIds[ targetTouches[ i ].identifier ] = true;\r\n                i++;\r\n            }\r\n        }\r\n\r\n        // filter changed touches to only contain touches that exist in the collected target ids\r\n        i = 0;\r\n        while ( i < changedTouches.length ) {\r\n            if ( targetIds[ changedTouches[ i ].identifier ] ) {\r\n                changedTargetTouches.push( changedTouches[ i ] );\r\n            }\r\n\r\n            // cleanup removed touches\r\n            if ( type & ( INPUT_END | INPUT_CANCEL ) ) {\r\n                delete targetIds[ changedTouches[ i ].identifier ];\r\n            }\r\n            i++;\r\n        }\r\n\r\n        if ( !changedTargetTouches.length ) {\r\n            return;\r\n        }\r\n\r\n        return [\r\n            // merge targetTouches with changedTargetTouches so it contains ALL touches, including 'end' and 'cancel'\r\n            uniqueArray( targetTouches.concat( changedTargetTouches ), 'identifier', true ),\r\n            changedTargetTouches\r\n        ];\r\n    }\r\n\r\n    /**\r\n     * Combined touch and mouse input\r\n     *\r\n     * Touch has a higher priority then mouse, and while touching no mouse events are allowed.\r\n     * This because touch devices also emit mouse events while doing a touch.\r\n     *\r\n     * @constructor\r\n     * @extends Input\r\n     */\r\n\r\n    var DEDUP_TIMEOUT = 2500;\r\n    var DEDUP_DISTANCE = 25;\r\n\r\n    function TouchMouseInput() {\r\n        Input.apply( this, arguments );\r\n\r\n        var handler = bindFn( this.handler, this );\r\n        this.touch = new TouchInput( this.manager, handler );\r\n        this.mouse = new MouseInput( this.manager, handler );\r\n\r\n        this.primaryTouch = null;\r\n        this.lastTouches = [];\r\n    }\r\n\r\n    inherit( TouchMouseInput, Input, {\r\n        /**\r\n         * handle mouse and touch events\r\n         * @param {Hammer} manager\r\n         * @param {String} inputEvent\r\n         * @param {Object} inputData\r\n         */\r\n        handler: function TMEhandler( manager, inputEvent, inputData ) {\r\n            var isTouch = ( inputData.pointerType == INPUT_TYPE_TOUCH ),\r\n                isMouse = ( inputData.pointerType == INPUT_TYPE_MOUSE );\r\n\r\n            if ( isMouse && inputData.sourceCapabilities && inputData.sourceCapabilities.firesTouchEvents ) {\r\n                return;\r\n            }\r\n\r\n            // when we're in a touch event, record touches to  de-dupe synthetic mouse event\r\n            if ( isTouch ) {\r\n                recordTouches.call( this, inputEvent, inputData );\r\n            } else if ( isMouse && isSyntheticEvent.call( this, inputData ) ) {\r\n                return;\r\n            }\r\n\r\n            this.callback( manager, inputEvent, inputData );\r\n        },\r\n\r\n        /**\r\n         * remove the event listeners\r\n         */\r\n        destroy: function destroy() {\r\n            this.touch.destroy();\r\n            this.mouse.destroy();\r\n        }\r\n    } );\r\n\r\n    function recordTouches( eventType, eventData ) {\r\n        if ( eventType & INPUT_START ) {\r\n            this.primaryTouch = eventData.changedPointers[ 0 ].identifier;\r\n            setLastTouch.call( this, eventData );\r\n        } else if ( eventType & ( INPUT_END | INPUT_CANCEL ) ) {\r\n            setLastTouch.call( this, eventData );\r\n        }\r\n    }\r\n\r\n    function setLastTouch( eventData ) {\r\n        var touch = eventData.changedPointers[ 0 ];\r\n\r\n        if ( touch.identifier === this.primaryTouch ) {\r\n            var lastTouch = { x: touch.clientX, y: touch.clientY };\r\n            this.lastTouches.push( lastTouch );\r\n            var lts = this.lastTouches;\r\n            var removeLastTouch = function () {\r\n                var i = lts.indexOf( lastTouch );\r\n                if ( i > -1 ) {\r\n                    lts.splice( i, 1 );\r\n                }\r\n            };\r\n            setTimeout( removeLastTouch, DEDUP_TIMEOUT );\r\n        }\r\n    }\r\n\r\n    function isSyntheticEvent( eventData ) {\r\n        var x = eventData.srcEvent.clientX,\r\n            y = eventData.srcEvent.clientY;\r\n        for ( var i = 0; i < this.lastTouches.length; i++ ) {\r\n            var t = this.lastTouches[ i ];\r\n            var dx = Math.abs( x - t.x ),\r\n                dy = Math.abs( y - t.y );\r\n            if ( dx <= DEDUP_DISTANCE && dy <= DEDUP_DISTANCE ) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    var PREFIXED_TOUCH_ACTION = prefixed( TEST_ELEMENT.style, 'touchAction' );\r\n    var NATIVE_TOUCH_ACTION = PREFIXED_TOUCH_ACTION !== undefined;\r\n\r\n    // magical touchAction value\r\n    var TOUCH_ACTION_COMPUTE = 'compute';\r\n    var TOUCH_ACTION_AUTO = 'auto';\r\n    var TOUCH_ACTION_MANIPULATION = 'manipulation'; // not implemented\r\n    var TOUCH_ACTION_NONE = 'none';\r\n    var TOUCH_ACTION_PAN_X = 'pan-x';\r\n    var TOUCH_ACTION_PAN_Y = 'pan-y';\r\n    var TOUCH_ACTION_MAP = getTouchActionProps();\r\n\r\n    /**\r\n     * Touch Action\r\n     * sets the touchAction property or uses the js alternative\r\n     * @param {Manager} manager\r\n     * @param {String} value\r\n     * @constructor\r\n     */\r\n    function TouchAction( manager, value ) {\r\n        this.manager = manager;\r\n        this.set( value );\r\n    }\r\n\r\n    TouchAction.prototype = {\r\n        /**\r\n         * set the touchAction value on the element or enable the polyfill\r\n         * @param {String} value\r\n         */\r\n        set: function ( value ) {\r\n            // find out the touch-action by the event handlers\r\n            if ( value == TOUCH_ACTION_COMPUTE ) {\r\n                value = this.compute();\r\n            }\r\n\r\n            if ( NATIVE_TOUCH_ACTION && this.manager.element.style && TOUCH_ACTION_MAP[ value ] ) {\r\n                this.manager.element.style[ PREFIXED_TOUCH_ACTION ] = value;\r\n            }\r\n            this.actions = value.toLowerCase().trim();\r\n        },\r\n\r\n        /**\r\n         * just re-set the touchAction value\r\n         */\r\n        update: function () {\r\n            this.set( this.manager.options.touchAction );\r\n        },\r\n\r\n        /**\r\n         * compute the value for the touchAction property based on the recognizer's settings\r\n         * @returns {String} value\r\n         */\r\n        compute: function () {\r\n            var actions = [];\r\n            each( this.manager.recognizers, function ( recognizer ) {\r\n                if ( boolOrFn( recognizer.options.enable, [ recognizer ] ) ) {\r\n                    actions = actions.concat( recognizer.getTouchAction() );\r\n                }\r\n            } );\r\n            return cleanTouchActions( actions.join( ' ' ) );\r\n        },\r\n\r\n        /**\r\n         * this method is called on each input cycle and provides the preventing of the browser behavior\r\n         * @param {Object} input\r\n         */\r\n        preventDefaults: function ( input ) {\r\n            var srcEvent = input.srcEvent;\r\n            var direction = input.offsetDirection;\r\n\r\n            // if the touch action did prevented once this session\r\n            if ( this.manager.session.prevented ) {\r\n                srcEvent.preventDefault();\r\n                return;\r\n            }\r\n\r\n            var actions = this.actions;\r\n            var hasNone = inStr( actions, TOUCH_ACTION_NONE ) && !TOUCH_ACTION_MAP[ TOUCH_ACTION_NONE ];\r\n            var hasPanY = inStr( actions, TOUCH_ACTION_PAN_Y ) && !TOUCH_ACTION_MAP[ TOUCH_ACTION_PAN_Y ];\r\n            var hasPanX = inStr( actions, TOUCH_ACTION_PAN_X ) && !TOUCH_ACTION_MAP[ TOUCH_ACTION_PAN_X ];\r\n\r\n            if ( hasNone ) {\r\n                //do not prevent defaults if this is a tap gesture\r\n\r\n                var isTapPointer = input.pointers.length === 1;\r\n                var isTapMovement = input.distance < 2;\r\n                var isTapTouchTime = input.deltaTime < 250;\r\n\r\n                if ( isTapPointer && isTapMovement && isTapTouchTime ) {\r\n                    return;\r\n                }\r\n            }\r\n\r\n            if ( hasPanX && hasPanY ) {\r\n                // `pan-x pan-y` means browser handles all scrolling/panning, do not prevent\r\n                return;\r\n            }\r\n\r\n            if ( hasNone ||\r\n                ( hasPanY && direction & DIRECTION_HORIZONTAL ) ||\r\n                ( hasPanX && direction & DIRECTION_VERTICAL ) ) {\r\n                return this.preventSrc( srcEvent );\r\n            }\r\n        },\r\n\r\n        /**\r\n         * call preventDefault to prevent the browser's default behavior (scrolling in most cases)\r\n         * @param {Object} srcEvent\r\n         */\r\n        preventSrc: function ( srcEvent ) {\r\n            this.manager.session.prevented = true;\r\n            srcEvent.preventDefault();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * when the touchActions are collected they are not a valid value, so we need to clean things up. *\r\n     * @param {String} actions\r\n     * @returns {*}\r\n     */\r\n    function cleanTouchActions( actions ) {\r\n        // none\r\n        if ( inStr( actions, TOUCH_ACTION_NONE ) ) {\r\n            return TOUCH_ACTION_NONE;\r\n        }\r\n\r\n        var hasPanX = inStr( actions, TOUCH_ACTION_PAN_X );\r\n        var hasPanY = inStr( actions, TOUCH_ACTION_PAN_Y );\r\n\r\n        // if both pan-x and pan-y are set (different recognizers\r\n        // for different directions, e.g. horizontal pan but vertical swipe?)\r\n        // we need none (as otherwise with pan-x pan-y combined none of these\r\n        // recognizers will work, since the browser would handle all panning\r\n        if ( hasPanX && hasPanY ) {\r\n            return TOUCH_ACTION_NONE;\r\n        }\r\n\r\n        // pan-x OR pan-y\r\n        if ( hasPanX || hasPanY ) {\r\n            return hasPanX ? TOUCH_ACTION_PAN_X : TOUCH_ACTION_PAN_Y;\r\n        }\r\n\r\n        // manipulation\r\n        if ( inStr( actions, TOUCH_ACTION_MANIPULATION ) ) {\r\n            return TOUCH_ACTION_MANIPULATION;\r\n        }\r\n\r\n        return TOUCH_ACTION_AUTO;\r\n    }\r\n\r\n    function getTouchActionProps() {\r\n        if ( !NATIVE_TOUCH_ACTION ) {\r\n            return false;\r\n        }\r\n        var touchMap = {};\r\n        var cssSupports = window.CSS && window.CSS.supports;\r\n        [ 'auto', 'manipulation', 'pan-y', 'pan-x', 'pan-x pan-y', 'none' ].forEach( function ( val ) {\r\n\r\n            // If css.supports is not supported but there is native touch-action assume it supports\r\n            // all values. This is the case for IE 10 and 11.\r\n            touchMap[ val ] = cssSupports ? window.CSS.supports( 'touch-action', val ) : true;\r\n        } );\r\n        return touchMap;\r\n    }\r\n\r\n    /**\r\n     * Recognizer flow explained; *\r\n     * All recognizers have the initial state of POSSIBLE when a input session starts.\r\n     * The definition of a input session is from the first input until the last input, with all it's movement in it. *\r\n     * Example session for mouse-input: mousedown -> mousemove -> mouseup\r\n     *\r\n     * On each recognizing cycle (see Manager.recognize) the .recognize() method is executed\r\n     * which determines with state it should be.\r\n     *\r\n     * If the recognizer has the state FAILED, CANCELLED or RECOGNIZED (equals ENDED), it is reset to\r\n     * POSSIBLE to give it another change on the next cycle.\r\n     *\r\n     *               Possible\r\n     *                  |\r\n     *            +-----+---------------+\r\n     *            |                     |\r\n     *      +-----+-----+               |\r\n     *      |           |               |\r\n     *   Failed      Cancelled          |\r\n     *                          +-------+------+\r\n     *                          |              |\r\n     *                      Recognized       Began\r\n     *                                         |\r\n     *                                      Changed\r\n     *                                         |\r\n     *                                  Ended/Recognized\r\n     */\r\n    var STATE_POSSIBLE = 1;\r\n    var STATE_BEGAN = 2;\r\n    var STATE_CHANGED = 4;\r\n    var STATE_ENDED = 8;\r\n    var STATE_RECOGNIZED = STATE_ENDED;\r\n    var STATE_CANCELLED = 16;\r\n    var STATE_FAILED = 32;\r\n\r\n    /**\r\n     * Recognizer\r\n     * Every recognizer needs to extend from this class.\r\n     * @constructor\r\n     * @param {Object} options\r\n     */\r\n    function Recognizer( options ) {\r\n        this.options = assign( {}, this.defaults, options || {} );\r\n\r\n        this.id = uniqueId();\r\n\r\n        this.manager = null;\r\n\r\n        // default is enable true\r\n        this.options.enable = ifUndefined( this.options.enable, true );\r\n\r\n        this.state = STATE_POSSIBLE;\r\n\r\n        this.simultaneous = {};\r\n        this.requireFail = [];\r\n    }\r\n\r\n    Recognizer.prototype = {\r\n        /**\r\n         * @virtual\r\n         * @type {Object}\r\n         */\r\n        defaults: {},\r\n\r\n        /**\r\n         * set options\r\n         * @param {Object} options\r\n         * @return {Recognizer}\r\n         */\r\n        set: function ( options ) {\r\n            assign( this.options, options );\r\n\r\n            // also update the touchAction, in case something changed about the directions/enabled state\r\n            this.manager && this.manager.touchAction.update();\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * recognize simultaneous with an other recognizer.\r\n         * @param {Recognizer} otherRecognizer\r\n         * @returns {Recognizer} this\r\n         */\r\n        recognizeWith: function ( otherRecognizer ) {\r\n            if ( invokeArrayArg( otherRecognizer, 'recognizeWith', this ) ) {\r\n                return this;\r\n            }\r\n\r\n            var simultaneous = this.simultaneous;\r\n            otherRecognizer = getRecognizerByNameIfManager( otherRecognizer, this );\r\n            if ( !simultaneous[ otherRecognizer.id ] ) {\r\n                simultaneous[ otherRecognizer.id ] = otherRecognizer;\r\n                otherRecognizer.recognizeWith( this );\r\n            }\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * drop the simultaneous link. it doesnt remove the link on the other recognizer.\r\n         * @param {Recognizer} otherRecognizer\r\n         * @returns {Recognizer} this\r\n         */\r\n        dropRecognizeWith: function ( otherRecognizer ) {\r\n            if ( invokeArrayArg( otherRecognizer, 'dropRecognizeWith', this ) ) {\r\n                return this;\r\n            }\r\n\r\n            otherRecognizer = getRecognizerByNameIfManager( otherRecognizer, this );\r\n            delete this.simultaneous[ otherRecognizer.id ];\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * recognizer can only run when an other is failing\r\n         * @param {Recognizer} otherRecognizer\r\n         * @returns {Recognizer} this\r\n         */\r\n        requireFailure: function ( otherRecognizer ) {\r\n            if ( invokeArrayArg( otherRecognizer, 'requireFailure', this ) ) {\r\n                return this;\r\n            }\r\n\r\n            var requireFail = this.requireFail;\r\n            otherRecognizer = getRecognizerByNameIfManager( otherRecognizer, this );\r\n            if ( inArray( requireFail, otherRecognizer ) === -1 ) {\r\n                requireFail.push( otherRecognizer );\r\n                otherRecognizer.requireFailure( this );\r\n            }\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * drop the requireFailure link. it does not remove the link on the other recognizer.\r\n         * @param {Recognizer} otherRecognizer\r\n         * @returns {Recognizer} this\r\n         */\r\n        dropRequireFailure: function ( otherRecognizer ) {\r\n            if ( invokeArrayArg( otherRecognizer, 'dropRequireFailure', this ) ) {\r\n                return this;\r\n            }\r\n\r\n            otherRecognizer = getRecognizerByNameIfManager( otherRecognizer, this );\r\n            var index = inArray( this.requireFail, otherRecognizer );\r\n            if ( index > -1 ) {\r\n                this.requireFail.splice( index, 1 );\r\n            }\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * has require failures boolean\r\n         * @returns {boolean}\r\n         */\r\n        hasRequireFailures: function () {\r\n            return this.requireFail.length > 0;\r\n        },\r\n\r\n        /**\r\n         * if the recognizer can recognize simultaneous with an other recognizer\r\n         * @param {Recognizer} otherRecognizer\r\n         * @returns {Boolean}\r\n         */\r\n        canRecognizeWith: function ( otherRecognizer ) {\r\n            return !!this.simultaneous[ otherRecognizer.id ];\r\n        },\r\n\r\n        /**\r\n         * You should use `tryEmit` instead of `emit` directly to check\r\n         * that all the needed recognizers has failed before emitting.\r\n         * @param {Object} input\r\n         */\r\n        emit: function ( input ) {\r\n            var self = this;\r\n            var state = this.state;\r\n\r\n            function emit( event ) {\r\n                self.manager.emit( event, input );\r\n            }\r\n\r\n            // 'panstart' and 'panmove'\r\n            if ( state < STATE_ENDED ) {\r\n                emit( self.options.event + stateStr( state ) );\r\n            }\r\n\r\n            emit( self.options.event ); // simple 'eventName' events\r\n\r\n            if ( input.additionalEvent ) { // additional event(panleft, panright, pinchin, pinchout...)\r\n                emit( input.additionalEvent );\r\n            }\r\n\r\n            // panend and pancancel\r\n            if ( state >= STATE_ENDED ) {\r\n                emit( self.options.event + stateStr( state ) );\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Check that all the require failure recognizers has failed,\r\n         * if true, it emits a gesture event,\r\n         * otherwise, setup the state to FAILED.\r\n         * @param {Object} input\r\n         */\r\n        tryEmit: function ( input ) {\r\n            if ( this.canEmit() ) {\r\n                return this.emit( input );\r\n            }\r\n            // it's failing anyway\r\n            this.state = STATE_FAILED;\r\n        },\r\n\r\n        /**\r\n         * can we emit?\r\n         * @returns {boolean}\r\n         */\r\n        canEmit: function () {\r\n            var i = 0;\r\n            while ( i < this.requireFail.length ) {\r\n                if ( !( this.requireFail[ i ].state & ( STATE_FAILED | STATE_POSSIBLE ) ) ) {\r\n                    return false;\r\n                }\r\n                i++;\r\n            }\r\n            return true;\r\n        },\r\n\r\n        /**\r\n         * update the recognizer\r\n         * @param {Object} inputData\r\n         */\r\n        recognize: function ( inputData ) {\r\n            // make a new copy of the inputData\r\n            // so we can change the inputData without messing up the other recognizers\r\n            var inputDataClone = assign( {}, inputData );\r\n\r\n            // is is enabled and allow recognizing?\r\n            if ( !boolOrFn( this.options.enable, [ this, inputDataClone ] ) ) {\r\n                this.reset();\r\n                this.state = STATE_FAILED;\r\n                return;\r\n            }\r\n\r\n            // reset when we've reached the end\r\n            if ( this.state & ( STATE_RECOGNIZED | STATE_CANCELLED | STATE_FAILED ) ) {\r\n                this.state = STATE_POSSIBLE;\r\n            }\r\n\r\n            this.state = this.process( inputDataClone );\r\n\r\n            // the recognizer has recognized a gesture\r\n            // so trigger an event\r\n            if ( this.state & ( STATE_BEGAN | STATE_CHANGED | STATE_ENDED | STATE_CANCELLED ) ) {\r\n                this.tryEmit( inputDataClone );\r\n            }\r\n        },\r\n\r\n        /**\r\n         * return the state of the recognizer\r\n         * the actual recognizing happens in this method\r\n         * @virtual\r\n         * @param {Object} inputData\r\n         * @returns {Const} STATE\r\n         */\r\n        process: function ( inputData ) {}, // jshint ignore:line\r\n\r\n        /**\r\n         * return the preferred touch-action\r\n         * @virtual\r\n         * @returns {Array}\r\n         */\r\n        getTouchAction: function () {},\r\n\r\n        /**\r\n         * called when the gesture isn't allowed to recognize\r\n         * like when another is being recognized or it is disabled\r\n         * @virtual\r\n         */\r\n        reset: function () {}\r\n    };\r\n\r\n    /**\r\n     * get a usable string, used as event postfix\r\n     * @param {Const} state\r\n     * @returns {String} state\r\n     */\r\n    function stateStr( state ) {\r\n        if ( state & STATE_CANCELLED ) {\r\n            return 'cancel';\r\n        } else if ( state & STATE_ENDED ) {\r\n            return 'end';\r\n        } else if ( state & STATE_CHANGED ) {\r\n            return 'move';\r\n        } else if ( state & STATE_BEGAN ) {\r\n            return 'start';\r\n        }\r\n        return '';\r\n    }\r\n\r\n    /**\r\n     * direction cons to string\r\n     * @param {Const} direction\r\n     * @returns {String}\r\n     */\r\n    function directionStr( direction ) {\r\n        if ( direction == DIRECTION_DOWN ) {\r\n            return 'down';\r\n        } else if ( direction == DIRECTION_UP ) {\r\n            return 'up';\r\n        } else if ( direction == DIRECTION_LEFT ) {\r\n            return 'left';\r\n        } else if ( direction == DIRECTION_RIGHT ) {\r\n            return 'right';\r\n        }\r\n        return '';\r\n    }\r\n\r\n    /**\r\n     * get a recognizer by name if it is bound to a manager\r\n     * @param {Recognizer|String} otherRecognizer\r\n     * @param {Recognizer} recognizer\r\n     * @returns {Recognizer}\r\n     */\r\n    function getRecognizerByNameIfManager( otherRecognizer, recognizer ) {\r\n        var manager = recognizer.manager;\r\n        if ( manager ) {\r\n            return manager.get( otherRecognizer );\r\n        }\r\n        return otherRecognizer;\r\n    }\r\n\r\n    /**\r\n     * This recognizer is just used as a base for the simple attribute recognizers.\r\n     * @constructor\r\n     * @extends Recognizer\r\n     */\r\n    function AttrRecognizer() {\r\n        Recognizer.apply( this, arguments );\r\n    }\r\n\r\n    inherit( AttrRecognizer, Recognizer, {\r\n        /**\r\n         * @namespace\r\n         * @memberof AttrRecognizer\r\n         */\r\n        defaults: {\r\n            /**\r\n             * @type {Number}\r\n             * @default 1\r\n             */\r\n            pointers: 1\r\n        },\r\n\r\n        /**\r\n         * Used to check if it the recognizer receives valid input, like input.distance > 10.\r\n         * @memberof AttrRecognizer\r\n         * @param {Object} input\r\n         * @returns {Boolean} recognized\r\n         */\r\n        attrTest: function ( input ) {\r\n            var optionPointers = this.options.pointers;\r\n            return optionPointers === 0 || input.pointers.length === optionPointers;\r\n        },\r\n\r\n        /**\r\n         * Process the input and return the state for the recognizer\r\n         * @memberof AttrRecognizer\r\n         * @param {Object} input\r\n         * @returns {*} State\r\n         */\r\n        process: function ( input ) {\r\n            var state = this.state;\r\n            var eventType = input.eventType;\r\n\r\n            var isRecognized = state & ( STATE_BEGAN | STATE_CHANGED );\r\n            var isValid = this.attrTest( input );\r\n\r\n            // on cancel input and we've recognized before, return STATE_CANCELLED\r\n            if ( isRecognized && ( eventType & INPUT_CANCEL || !isValid ) ) {\r\n                return state | STATE_CANCELLED;\r\n            } else if ( isRecognized || isValid ) {\r\n                if ( eventType & INPUT_END ) {\r\n                    return state | STATE_ENDED;\r\n                } else if ( !( state & STATE_BEGAN ) ) {\r\n                    return STATE_BEGAN;\r\n                }\r\n                return state | STATE_CHANGED;\r\n            }\r\n            return STATE_FAILED;\r\n        }\r\n    } );\r\n\r\n    /**\r\n     * Pan\r\n     * Recognized when the pointer is down and moved in the allowed direction.\r\n     * @constructor\r\n     * @extends AttrRecognizer\r\n     */\r\n    function PanRecognizer() {\r\n        AttrRecognizer.apply( this, arguments );\r\n\r\n        this.pX = null;\r\n        this.pY = null;\r\n    }\r\n\r\n    inherit( PanRecognizer, AttrRecognizer, {\r\n        /**\r\n         * @namespace\r\n         * @memberof PanRecognizer\r\n         */\r\n        defaults: {\r\n            event: 'pan',\r\n            threshold: 10,\r\n            pointers: 1,\r\n            direction: DIRECTION_ALL\r\n        },\r\n\r\n        getTouchAction: function () {\r\n            var direction = this.options.direction;\r\n            var actions = [];\r\n            if ( direction & DIRECTION_HORIZONTAL ) {\r\n                actions.push( TOUCH_ACTION_PAN_Y );\r\n            }\r\n            if ( direction & DIRECTION_VERTICAL ) {\r\n                actions.push( TOUCH_ACTION_PAN_X );\r\n            }\r\n            return actions;\r\n        },\r\n\r\n        directionTest: function ( input ) {\r\n            var options = this.options;\r\n            var hasMoved = true;\r\n            var distance = input.distance;\r\n            var direction = input.direction;\r\n            var x = input.deltaX;\r\n            var y = input.deltaY;\r\n\r\n            // lock to axis?\r\n            if ( !( direction & options.direction ) ) {\r\n                if ( options.direction & DIRECTION_HORIZONTAL ) {\r\n                    direction = ( x === 0 ) ? DIRECTION_NONE : ( x < 0 ) ? DIRECTION_LEFT : DIRECTION_RIGHT;\r\n                    hasMoved = x != this.pX;\r\n                    distance = Math.abs( input.deltaX );\r\n                } else {\r\n                    direction = ( y === 0 ) ? DIRECTION_NONE : ( y < 0 ) ? DIRECTION_UP : DIRECTION_DOWN;\r\n                    hasMoved = y != this.pY;\r\n                    distance = Math.abs( input.deltaY );\r\n                }\r\n            }\r\n            input.direction = direction;\r\n            return hasMoved && distance > options.threshold && direction & options.direction;\r\n        },\r\n\r\n        attrTest: function ( input ) {\r\n            return AttrRecognizer.prototype.attrTest.call( this, input ) &&\r\n                ( this.state & STATE_BEGAN || ( !( this.state & STATE_BEGAN ) && this.directionTest( input ) ) );\r\n        },\r\n\r\n        emit: function ( input ) {\r\n\r\n            this.pX = input.deltaX;\r\n            this.pY = input.deltaY;\r\n\r\n            var direction = directionStr( input.direction );\r\n\r\n            if ( direction ) {\r\n                input.additionalEvent = this.options.event + direction;\r\n            }\r\n            this._super.emit.call( this, input );\r\n        }\r\n    } );\r\n\r\n    /**\r\n     * Pinch\r\n     * Recognized when two or more pointers are moving toward (zoom-in) or away from each other (zoom-out).\r\n     * @constructor\r\n     * @extends AttrRecognizer\r\n     */\r\n    function PinchRecognizer() {\r\n        AttrRecognizer.apply( this, arguments );\r\n    }\r\n\r\n    inherit( PinchRecognizer, AttrRecognizer, {\r\n        /**\r\n         * @namespace\r\n         * @memberof PinchRecognizer\r\n         */\r\n        defaults: {\r\n            event: 'pinch',\r\n            threshold: 0,\r\n            pointers: 2\r\n        },\r\n\r\n        getTouchAction: function () {\r\n            return [ TOUCH_ACTION_NONE ];\r\n        },\r\n\r\n        attrTest: function ( input ) {\r\n            return this._super.attrTest.call( this, input ) &&\r\n                ( Math.abs( input.scale - 1 ) > this.options.threshold || this.state & STATE_BEGAN );\r\n        },\r\n\r\n        emit: function ( input ) {\r\n            if ( input.scale !== 1 ) {\r\n                var inOut = input.scale < 1 ? 'in' : 'out';\r\n                input.additionalEvent = this.options.event + inOut;\r\n            }\r\n            this._super.emit.call( this, input );\r\n        }\r\n    } );\r\n\r\n    /**\r\n     * Press\r\n     * Recognized when the pointer is down for x ms without any movement.\r\n     * @constructor\r\n     * @extends Recognizer\r\n     */\r\n    function PressRecognizer() {\r\n        Recognizer.apply( this, arguments );\r\n\r\n        this._timer = null;\r\n        this._input = null;\r\n    }\r\n\r\n    inherit( PressRecognizer, Recognizer, {\r\n        /**\r\n         * @namespace\r\n         * @memberof PressRecognizer\r\n         */\r\n        defaults: {\r\n            event: 'press',\r\n            pointers: 1,\r\n            time: 251, // minimal time of the pointer to be pressed\r\n            threshold: 9 // a minimal movement is ok, but keep it low\r\n        },\r\n\r\n        getTouchAction: function () {\r\n            return [ TOUCH_ACTION_AUTO ];\r\n        },\r\n\r\n        process: function ( input ) {\r\n            var options = this.options;\r\n            var validPointers = input.pointers.length === options.pointers;\r\n            var validMovement = input.distance < options.threshold;\r\n            var validTime = input.deltaTime > options.time;\r\n\r\n            this._input = input;\r\n\r\n            // we only allow little movement\r\n            // and we've reached an end event, so a tap is possible\r\n            if ( !validMovement || !validPointers || ( input.eventType & ( INPUT_END | INPUT_CANCEL ) && !validTime ) ) {\r\n                this.reset();\r\n            } else if ( input.eventType & INPUT_START ) {\r\n                this.reset();\r\n                this._timer = setTimeoutContext( function () {\r\n                    this.state = STATE_RECOGNIZED;\r\n                    this.tryEmit();\r\n                }, options.time, this );\r\n            } else if ( input.eventType & INPUT_END ) {\r\n                return STATE_RECOGNIZED;\r\n            }\r\n            return STATE_FAILED;\r\n        },\r\n\r\n        reset: function () {\r\n            clearTimeout( this._timer );\r\n        },\r\n\r\n        emit: function ( input ) {\r\n            if ( this.state !== STATE_RECOGNIZED ) {\r\n                return;\r\n            }\r\n\r\n            if ( input && ( input.eventType & INPUT_END ) ) {\r\n                this.manager.emit( this.options.event + 'up', input );\r\n            } else {\r\n                this._input.timeStamp = now();\r\n                this.manager.emit( this.options.event, this._input );\r\n            }\r\n        }\r\n    } );\r\n\r\n    /**\r\n     * Rotate\r\n     * Recognized when two or more pointer are moving in a circular motion.\r\n     * @constructor\r\n     * @extends AttrRecognizer\r\n     */\r\n    function RotateRecognizer() {\r\n        AttrRecognizer.apply( this, arguments );\r\n    }\r\n\r\n    inherit( RotateRecognizer, AttrRecognizer, {\r\n        /**\r\n         * @namespace\r\n         * @memberof RotateRecognizer\r\n         */\r\n        defaults: {\r\n            event: 'rotate',\r\n            threshold: 0,\r\n            pointers: 2\r\n        },\r\n\r\n        getTouchAction: function () {\r\n            return [ TOUCH_ACTION_NONE ];\r\n        },\r\n\r\n        attrTest: function ( input ) {\r\n            return this._super.attrTest.call( this, input ) &&\r\n                ( Math.abs( input.rotation ) > this.options.threshold || this.state & STATE_BEGAN );\r\n        }\r\n    } );\r\n\r\n    /**\r\n     * Swipe\r\n     * Recognized when the pointer is moving fast (velocity), with enough distance in the allowed direction.\r\n     * @constructor\r\n     * @extends AttrRecognizer\r\n     */\r\n    function SwipeRecognizer() {\r\n        AttrRecognizer.apply( this, arguments );\r\n    }\r\n\r\n    inherit( SwipeRecognizer, AttrRecognizer, {\r\n        /**\r\n         * @namespace\r\n         * @memberof SwipeRecognizer\r\n         */\r\n        defaults: {\r\n            event: 'swipe',\r\n            threshold: 10,\r\n            velocity: 0.3,\r\n            direction: DIRECTION_HORIZONTAL | DIRECTION_VERTICAL,\r\n            pointers: 1\r\n        },\r\n\r\n        getTouchAction: function () {\r\n            return PanRecognizer.prototype.getTouchAction.call( this );\r\n        },\r\n\r\n        attrTest: function ( input ) {\r\n            var direction = this.options.direction;\r\n            var velocity;\r\n\r\n            if ( direction & ( DIRECTION_HORIZONTAL | DIRECTION_VERTICAL ) ) {\r\n                velocity = input.overallVelocity;\r\n            } else if ( direction & DIRECTION_HORIZONTAL ) {\r\n                velocity = input.overallVelocityX;\r\n            } else if ( direction & DIRECTION_VERTICAL ) {\r\n                velocity = input.overallVelocityY;\r\n            }\r\n\r\n            return this._super.attrTest.call( this, input ) &&\r\n                direction & input.offsetDirection &&\r\n                input.distance > this.options.threshold &&\r\n                input.maxPointers == this.options.pointers &&\r\n                abs( velocity ) > this.options.velocity && input.eventType & INPUT_END;\r\n        },\r\n\r\n        emit: function ( input ) {\r\n            var direction = directionStr( input.offsetDirection );\r\n            if ( direction ) {\r\n                this.manager.emit( this.options.event + direction, input );\r\n            }\r\n\r\n            this.manager.emit( this.options.event, input );\r\n        }\r\n    } );\r\n\r\n    /**\r\n     * A tap is ecognized when the pointer is doing a small tap/click. Multiple taps are recognized if they occur\r\n     * between the given interval and position. The delay option can be used to recognize multi-taps without firing\r\n     * a single tap.\r\n     *\r\n     * The eventData from the emitted event contains the property `tapCount`, which contains the amount of\r\n     * multi-taps being recognized.\r\n     * @constructor\r\n     * @extends Recognizer\r\n     */\r\n    function TapRecognizer() {\r\n        Recognizer.apply( this, arguments );\r\n\r\n        // previous time and center,\r\n        // used for tap counting\r\n        this.pTime = false;\r\n        this.pCenter = false;\r\n\r\n        this._timer = null;\r\n        this._input = null;\r\n        this.count = 0;\r\n    }\r\n\r\n    inherit( TapRecognizer, Recognizer, {\r\n        /**\r\n         * @namespace\r\n         * @memberof PinchRecognizer\r\n         */\r\n        defaults: {\r\n            event: 'tap',\r\n            pointers: 1,\r\n            taps: 1,\r\n            interval: 300, // max time between the multi-tap taps\r\n            time: 250, // max time of the pointer to be down (like finger on the screen)\r\n            threshold: 9, // a minimal movement is ok, but keep it low\r\n            posThreshold: 10 // a multi-tap can be a bit off the initial position\r\n        },\r\n\r\n        getTouchAction: function () {\r\n            return [ TOUCH_ACTION_MANIPULATION ];\r\n        },\r\n\r\n        process: function ( input ) {\r\n            var options = this.options;\r\n\r\n            var validPointers = input.pointers.length === options.pointers;\r\n            var validMovement = input.distance < options.threshold;\r\n            var validTouchTime = input.deltaTime < options.time;\r\n\r\n            this.reset();\r\n\r\n            if ( ( input.eventType & INPUT_START ) && ( this.count === 0 ) ) {\r\n                return this.failTimeout();\r\n            }\r\n\r\n            // we only allow little movement\r\n            // and we've reached an end event, so a tap is possible\r\n            if ( validMovement && validTouchTime && validPointers ) {\r\n                if ( input.eventType != INPUT_END ) {\r\n                    return this.failTimeout();\r\n                }\r\n\r\n                var validInterval = this.pTime ? ( input.timeStamp - this.pTime < options.interval ) : true;\r\n                var validMultiTap = !this.pCenter || getDistance( this.pCenter, input.center ) < options.posThreshold;\r\n\r\n                this.pTime = input.timeStamp;\r\n                this.pCenter = input.center;\r\n\r\n                if ( !validMultiTap || !validInterval ) {\r\n                    this.count = 1;\r\n                } else {\r\n                    this.count += 1;\r\n                }\r\n\r\n                this._input = input;\r\n\r\n                // if tap count matches we have recognized it,\r\n                // else it has began recognizing...\r\n                var tapCount = this.count % options.taps;\r\n                if ( tapCount === 0 ) {\r\n                    // no failing requirements, immediately trigger the tap event\r\n                    // or wait as long as the multitap interval to trigger\r\n                    if ( !this.hasRequireFailures() ) {\r\n                        return STATE_RECOGNIZED;\r\n                    } else {\r\n                        this._timer = setTimeoutContext( function () {\r\n                            this.state = STATE_RECOGNIZED;\r\n                            this.tryEmit();\r\n                        }, options.interval, this );\r\n                        return STATE_BEGAN;\r\n                    }\r\n                }\r\n            }\r\n            return STATE_FAILED;\r\n        },\r\n\r\n        failTimeout: function () {\r\n            this._timer = setTimeoutContext( function () {\r\n                this.state = STATE_FAILED;\r\n            }, this.options.interval, this );\r\n            return STATE_FAILED;\r\n        },\r\n\r\n        reset: function () {\r\n            clearTimeout( this._timer );\r\n        },\r\n\r\n        emit: function () {\r\n            if ( this.state == STATE_RECOGNIZED ) {\r\n                this._input.tapCount = this.count;\r\n                this.manager.emit( this.options.event, this._input );\r\n            }\r\n        }\r\n    } );\r\n\r\n    /**\r\n     * Simple way to create a manager with a default set of recognizers.\r\n     * @param {HTMLElement} element\r\n     * @param {Object} [options]\r\n     * @constructor\r\n     */\r\n    function Hammer( element, options ) {\r\n        options = options || {};\r\n        options.recognizers = ifUndefined( options.recognizers, Hammer.defaults.preset );\r\n        return new Manager( element, options );\r\n    }\r\n\r\n    /**\r\n     * @const {string}\r\n     */\r\n    Hammer.VERSION = '2.0.8';\r\n\r\n    /**\r\n     * default settings\r\n     * @namespace\r\n     */\r\n    Hammer.defaults = {\r\n        /**\r\n         * set if DOM events are being triggered.\r\n         * But this is slower and unused by simple implementations, so disabled by default.\r\n         * @type {Boolean}\r\n         * @default false\r\n         */\r\n        domEvents: false,\r\n\r\n        /**\r\n         * The value for the touchAction property/fallback.\r\n         * When set to `compute` it will magically set the correct value based on the added recognizers.\r\n         * @type {String}\r\n         * @default compute\r\n         */\r\n        touchAction: TOUCH_ACTION_COMPUTE,\r\n\r\n        /**\r\n         * @type {Boolean}\r\n         * @default true\r\n         */\r\n        enable: true,\r\n\r\n        /**\r\n         * EXPERIMENTAL FEATURE -- can be removed/changed\r\n         * Change the parent input target element.\r\n         * If Null, then it is being set the to main element.\r\n         * @type {Null|EventTarget}\r\n         * @default null\r\n         */\r\n        inputTarget: null,\r\n\r\n        /**\r\n         * force an input class\r\n         * @type {Null|Function}\r\n         * @default null\r\n         */\r\n        inputClass: null,\r\n\r\n        /**\r\n         * Default recognizer setup when calling `Hammer()`\r\n         * When creating a new Manager these will be skipped.\r\n         * @type {Array}\r\n         */\r\n        preset: [\r\n            // RecognizerClass, options, [recognizeWith, ...], [requireFailure, ...]\r\n            [ RotateRecognizer, { enable: false } ],\r\n            [ PinchRecognizer, { enable: false },\r\n                [ 'rotate' ]\r\n            ],\r\n            [ SwipeRecognizer, { direction: DIRECTION_HORIZONTAL } ],\r\n            [ PanRecognizer, { direction: DIRECTION_HORIZONTAL },\r\n                [ 'swipe' ]\r\n            ],\r\n            [ TapRecognizer ],\r\n            [ TapRecognizer, { event: 'doubletap', taps: 2 },\r\n                [ 'tap' ]\r\n            ],\r\n            [ PressRecognizer ]\r\n        ],\r\n\r\n        /**\r\n         * Some CSS properties can be used to improve the working of Hammer.\r\n         * Add them to this method and they will be set when creating a new Manager.\r\n         * @namespace\r\n         */\r\n        cssProps: {\r\n            /**\r\n             * Disables text selection to improve the dragging gesture. Mainly for desktop browsers.\r\n             * @type {String}\r\n             * @default 'none'\r\n             */\r\n            userSelect: 'none',\r\n\r\n            /**\r\n             * Disable the Windows Phone grippers when pressing an element.\r\n             * @type {String}\r\n             * @default 'none'\r\n             */\r\n            touchSelect: 'none',\r\n\r\n            /**\r\n             * Disables the default callout shown when you touch and hold a touch target.\r\n             * On iOS, when you touch and hold a touch target such as a link, Safari displays\r\n             * a callout containing information about the link. This property allows you to disable that callout.\r\n             * @type {String}\r\n             * @default 'none'\r\n             */\r\n            touchCallout: 'none',\r\n\r\n            /**\r\n             * Specifies whether zooming is enabled. Used by IE10>\r\n             * @type {String}\r\n             * @default 'none'\r\n             */\r\n            contentZooming: 'none',\r\n\r\n            /**\r\n             * Specifies that an entire element should be draggable instead of its contents. Mainly for desktop browsers.\r\n             * @type {String}\r\n             * @default 'none'\r\n             */\r\n            userDrag: 'none',\r\n\r\n            /**\r\n             * Overrides the highlight color shown when the user taps a link or a JavaScript\r\n             * clickable element in iOS. This property obeys the alpha value, if specified.\r\n             * @type {String}\r\n             * @default 'rgba(0,0,0,0)'\r\n             */\r\n            tapHighlightColor: 'rgba(0,0,0,0)'\r\n        }\r\n    };\r\n\r\n    var STOP = 1;\r\n    var FORCED_STOP = 2;\r\n\r\n    /**\r\n     * Manager\r\n     * @param {HTMLElement} element\r\n     * @param {Object} [options]\r\n     * @constructor\r\n     */\r\n    function Manager( element, options ) {\r\n        this.options = assign( {}, Hammer.defaults, options || {} );\r\n\r\n        this.options.inputTarget = this.options.inputTarget || element;\r\n\r\n        this.handlers = {};\r\n        this.session = {};\r\n        this.recognizers = [];\r\n        this.oldCssProps = {};\r\n\r\n        this.element = element;\r\n        this.input = createInputInstance( this );\r\n        this.touchAction = new TouchAction( this, this.options.touchAction );\r\n\r\n        toggleCssProps( this, true );\r\n\r\n        each( this.options.recognizers, function ( item ) {\r\n            var recognizer = this.add( new( item[ 0 ] )( item[ 1 ] ) );\r\n            item[ 2 ] && recognizer.recognizeWith( item[ 2 ] );\r\n            item[ 3 ] && recognizer.requireFailure( item[ 3 ] );\r\n        }, this );\r\n    }\r\n\r\n    Manager.prototype = {\r\n        /**\r\n         * set options\r\n         * @param {Object} options\r\n         * @returns {Manager}\r\n         */\r\n        set: function ( options ) {\r\n            assign( this.options, options );\r\n\r\n            // Options that need a little more setup\r\n            if ( options.touchAction ) {\r\n                this.touchAction.update();\r\n            }\r\n            if ( options.inputTarget ) {\r\n                // Clean up existing event listeners and reinitialize\r\n                this.input.destroy();\r\n                this.input.target = options.inputTarget;\r\n                this.input.init();\r\n            }\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * stop recognizing for this session.\r\n         * This session will be discarded, when a new [input]start event is fired.\r\n         * When forced, the recognizer cycle is stopped immediately.\r\n         * @param {Boolean} [force]\r\n         */\r\n        stop: function ( force ) {\r\n            this.session.stopped = force ? FORCED_STOP : STOP;\r\n        },\r\n\r\n        /**\r\n         * run the recognizers!\r\n         * called by the inputHandler function on every movement of the pointers (touches)\r\n         * it walks through all the recognizers and tries to detect the gesture that is being made\r\n         * @param {Object} inputData\r\n         */\r\n        recognize: function ( inputData ) {\r\n            var session = this.session;\r\n            if ( session.stopped ) {\r\n                return;\r\n            }\r\n\r\n            // run the touch-action polyfill\r\n            this.touchAction.preventDefaults( inputData );\r\n\r\n            var recognizer;\r\n            var recognizers = this.recognizers;\r\n\r\n            // this holds the recognizer that is being recognized.\r\n            // so the recognizer's state needs to be BEGAN, CHANGED, ENDED or RECOGNIZED\r\n            // if no recognizer is detecting a thing, it is set to `null`\r\n            var curRecognizer = session.curRecognizer;\r\n\r\n            // reset when the last recognizer is recognized\r\n            // or when we're in a new session\r\n            if ( !curRecognizer || ( curRecognizer && curRecognizer.state & STATE_RECOGNIZED ) ) {\r\n                curRecognizer = session.curRecognizer = null;\r\n            }\r\n\r\n            var i = 0;\r\n            while ( i < recognizers.length ) {\r\n                recognizer = recognizers[ i ];\r\n\r\n                // find out if we are allowed try to recognize the input for this one.\r\n                // 1.   allow if the session is NOT forced stopped (see the .stop() method)\r\n                // 2.   allow if we still haven't recognized a gesture in this session, or the this recognizer is the one\r\n                //      that is being recognized.\r\n                // 3.   allow if the recognizer is allowed to run simultaneous with the current recognized recognizer.\r\n                //      this can be setup with the `recognizeWith()` method on the recognizer.\r\n                if ( session.stopped !== FORCED_STOP && ( // 1\r\n                        !curRecognizer || recognizer == curRecognizer || // 2\r\n                        recognizer.canRecognizeWith( curRecognizer ) ) ) { // 3\r\n                    recognizer.recognize( inputData );\r\n                } else {\r\n                    recognizer.reset();\r\n                }\r\n\r\n                // if the recognizer has been recognizing the input as a valid gesture, we want to store this one as the\r\n                // current active recognizer. but only if we don't already have an active recognizer\r\n                if ( !curRecognizer && recognizer.state & ( STATE_BEGAN | STATE_CHANGED | STATE_ENDED ) ) {\r\n                    curRecognizer = session.curRecognizer = recognizer;\r\n                }\r\n                i++;\r\n            }\r\n        },\r\n\r\n        /**\r\n         * get a recognizer by its event name.\r\n         * @param {Recognizer|String} recognizer\r\n         * @returns {Recognizer|Null}\r\n         */\r\n        get: function ( recognizer ) {\r\n            if ( recognizer instanceof Recognizer ) {\r\n                return recognizer;\r\n            }\r\n\r\n            var recognizers = this.recognizers;\r\n            for ( var i = 0; i < recognizers.length; i++ ) {\r\n                if ( recognizers[ i ].options.event == recognizer ) {\r\n                    return recognizers[ i ];\r\n                }\r\n            }\r\n            return null;\r\n        },\r\n\r\n        /**\r\n         * add a recognizer to the manager\r\n         * existing recognizers with the same event name will be removed\r\n         * @param {Recognizer} recognizer\r\n         * @returns {Recognizer|Manager}\r\n         */\r\n        add: function ( recognizer ) {\r\n            if ( invokeArrayArg( recognizer, 'add', this ) ) {\r\n                return this;\r\n            }\r\n\r\n            // remove existing\r\n            var existing = this.get( recognizer.options.event );\r\n            if ( existing ) {\r\n                this.remove( existing );\r\n            }\r\n\r\n            this.recognizers.push( recognizer );\r\n            recognizer.manager = this;\r\n\r\n            this.touchAction.update();\r\n            return recognizer;\r\n        },\r\n\r\n        /**\r\n         * remove a recognizer by name or instance\r\n         * @param {Recognizer|String} recognizer\r\n         * @returns {Manager}\r\n         */\r\n        remove: function ( recognizer ) {\r\n            if ( invokeArrayArg( recognizer, 'remove', this ) ) {\r\n                return this;\r\n            }\r\n\r\n            recognizer = this.get( recognizer );\r\n\r\n            // let's make sure this recognizer exists\r\n            if ( recognizer ) {\r\n                var recognizers = this.recognizers;\r\n                var index = inArray( recognizers, recognizer );\r\n\r\n                if ( index !== -1 ) {\r\n                    recognizers.splice( index, 1 );\r\n                    this.touchAction.update();\r\n                }\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * bind event\r\n         * @param {String} events\r\n         * @param {Function} handler\r\n         * @returns {EventEmitter} this\r\n         */\r\n        on: function ( events, handler ) {\r\n            if ( events === undefined ) {\r\n                return;\r\n            }\r\n            if ( handler === undefined ) {\r\n                return;\r\n            }\r\n\r\n            var handlers = this.handlers;\r\n            each( splitStr( events ), function ( event ) {\r\n                handlers[ event ] = handlers[ event ] || [];\r\n                handlers[ event ].push( handler );\r\n            } );\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * unbind event, leave emit blank to remove all handlers\r\n         * @param {String} events\r\n         * @param {Function} [handler]\r\n         * @returns {EventEmitter} this\r\n         */\r\n        off: function ( events, handler ) {\r\n            if ( events === undefined ) {\r\n                return;\r\n            }\r\n\r\n            var handlers = this.handlers;\r\n            each( splitStr( events ), function ( event ) {\r\n                if ( !handler ) {\r\n                    delete handlers[ event ];\r\n                } else {\r\n                    handlers[ event ] && handlers[ event ].splice( inArray( handlers[ event ], handler ), 1 );\r\n                }\r\n            } );\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * emit event to the listeners\r\n         * @param {String} event\r\n         * @param {Object} data\r\n         */\r\n        emit: function ( event, data ) {\r\n            // we also want to trigger dom events\r\n            if ( this.options.domEvents ) {\r\n                triggerDomEvent( event, data );\r\n            }\r\n\r\n            // no handlers, so skip it all\r\n            var handlers = this.handlers[ event ] && this.handlers[ event ].slice();\r\n            if ( !handlers || !handlers.length ) {\r\n                return;\r\n            }\r\n\r\n            data.type = event;\r\n            data.preventDefault = function () {\r\n                data.srcEvent.preventDefault();\r\n            };\r\n\r\n            var i = 0;\r\n            while ( i < handlers.length ) {\r\n                handlers[ i ]( data );\r\n                i++;\r\n            }\r\n        },\r\n\r\n        /**\r\n         * destroy the manager and unbinds all events\r\n         * it doesn't unbind dom events, that is the user own responsibility\r\n         */\r\n        destroy: function () {\r\n            this.element && toggleCssProps( this, false );\r\n\r\n            this.handlers = {};\r\n            this.session = {};\r\n            this.input.destroy();\r\n            this.element = null;\r\n        }\r\n    };\r\n\r\n    /**\r\n     * add/remove the css properties as defined in manager.options.cssProps\r\n     * @param {Manager} manager\r\n     * @param {Boolean} add\r\n     */\r\n    function toggleCssProps( manager, add ) {\r\n        var element = manager.element;\r\n        if ( !element.style ) {\r\n            return;\r\n        }\r\n        var prop;\r\n        each( manager.options.cssProps, function ( value, name ) {\r\n            prop = prefixed( element.style, name );\r\n            if ( add ) {\r\n                manager.oldCssProps[ prop ] = element.style[ prop ];\r\n                element.style[ prop ] = value;\r\n            } else {\r\n                element.style[ prop ] = manager.oldCssProps[ prop ] || '';\r\n            }\r\n        } );\r\n        if ( !add ) {\r\n            manager.oldCssProps = {};\r\n        }\r\n    }\r\n\r\n    /**\r\n     * trigger dom event\r\n     * @param {String} event\r\n     * @param {Object} data\r\n     */\r\n    function triggerDomEvent( event, data ) {\r\n        var gestureEvent = document.createEvent( 'Event' );\r\n        gestureEvent.initEvent( event, true, true );\r\n        gestureEvent.gesture = data;\r\n        data.target.dispatchEvent( gestureEvent );\r\n    }\r\n\r\n    assign( Hammer, {\r\n        INPUT_START: INPUT_START,\r\n        INPUT_MOVE: INPUT_MOVE,\r\n        INPUT_END: INPUT_END,\r\n        INPUT_CANCEL: INPUT_CANCEL,\r\n\r\n        STATE_POSSIBLE: STATE_POSSIBLE,\r\n        STATE_BEGAN: STATE_BEGAN,\r\n        STATE_CHANGED: STATE_CHANGED,\r\n        STATE_ENDED: STATE_ENDED,\r\n        STATE_RECOGNIZED: STATE_RECOGNIZED,\r\n        STATE_CANCELLED: STATE_CANCELLED,\r\n        STATE_FAILED: STATE_FAILED,\r\n\r\n        DIRECTION_NONE: DIRECTION_NONE,\r\n        DIRECTION_LEFT: DIRECTION_LEFT,\r\n        DIRECTION_RIGHT: DIRECTION_RIGHT,\r\n        DIRECTION_UP: DIRECTION_UP,\r\n        DIRECTION_DOWN: DIRECTION_DOWN,\r\n        DIRECTION_HORIZONTAL: DIRECTION_HORIZONTAL,\r\n        DIRECTION_VERTICAL: DIRECTION_VERTICAL,\r\n        DIRECTION_ALL: DIRECTION_ALL,\r\n\r\n        Manager: Manager,\r\n        Input: Input,\r\n        TouchAction: TouchAction,\r\n\r\n        TouchInput: TouchInput,\r\n        MouseInput: MouseInput,\r\n        PointerEventInput: PointerEventInput,\r\n        TouchMouseInput: TouchMouseInput,\r\n        SingleTouchInput: SingleTouchInput,\r\n\r\n        Recognizer: Recognizer,\r\n        AttrRecognizer: AttrRecognizer,\r\n        Tap: TapRecognizer,\r\n        Pan: PanRecognizer,\r\n        Swipe: SwipeRecognizer,\r\n        Pinch: PinchRecognizer,\r\n        Rotate: RotateRecognizer,\r\n        Press: PressRecognizer,\r\n\r\n        on: addEventListeners,\r\n        off: removeEventListeners,\r\n        each: each,\r\n        merge: merge,\r\n        extend: extend,\r\n        assign: assign,\r\n        inherit: inherit,\r\n        bindFn: bindFn,\r\n        prefixed: prefixed\r\n    } );\r\n\r\n    // this prevents errors when Hammer is loaded in the presence of an AMD\r\n    //  style loader but by script tag, not by the loader.\r\n    var freeGlobal = ( typeof window !== 'undefined' ? window : ( typeof self !== 'undefined' ? self : {} ) ); // jshint ignore:line\r\n    freeGlobal.Hammer = Hammer;\r\n\r\n    if ( typeof define === 'function' && define.amd ) {\r\n        define( function () {\r\n            return Hammer;\r\n        } );\r\n    } else if ( typeof module != 'undefined' && module.exports ) {\r\n        module.exports = Hammer;\r\n    } else {\r\n        window[ exportName ] = Hammer;\r\n    }\r\n\r\n} )( window, document, 'Hammer' );\r\n\r\n\r\nmodule.exports = Hammer;\r\n\r\n\r\nmodule.exports._ = _;\n})"]}
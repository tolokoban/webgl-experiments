{"version":3,"sources":["external.hammer.js"],"names":["require","module","exports","_","D","X","intl","arguments","all","window","document","exportName","undefined","VENDOR_PREFIXES","TEST_ELEMENT","createElement","TYPE_FUNCTION","round","Math","abs","now","Date","setTimeoutContext","fn","timeout","context","setTimeout","bindFn","invokeArrayArg","arg","Array","isArray","each","obj","iterator","i","forEach","length","call","hasOwnProperty","deprecate","method","name","message","deprecationMessage","e","Error","stack","replace","log","console","warn","apply","assign","Object","target","TypeError","output","index","source","nextKey","extend","dest","src","merge","keys","inherit","child","base","properties","baseP","prototype","childP","create","constructor","_super","boundFn","boolOrFn","val","args","ifUndefined","val1","val2","addEventListeners","types","handler","splitStr","type","addEventListener","removeEventListeners","removeEventListener","hasParent","node","parent","parentNode","inStr","str","find","indexOf","trim","split","inArray","findByKey","toArray","slice","uniqueArray","key","sort","results","values","push","sortUniqueArray","a","b","prefixed","property","camelProp","toUpperCase","prefix","prop","_uniqueId","uniqueId","getWindowForElement","element","doc","ownerDocument","defaultView","parentWindow","MOBILE_REGEX","SUPPORT_TOUCH","SUPPORT_POINTER_EVENTS","SUPPORT_ONLY_TOUCH","test","navigator","userAgent","INPUT_TYPE_TOUCH","INPUT_TYPE_PEN","INPUT_TYPE_MOUSE","INPUT_TYPE_KINECT","COMPUTE_INTERVAL","INPUT_START","INPUT_MOVE","INPUT_END","INPUT_CANCEL","DIRECTION_NONE","DIRECTION_LEFT","DIRECTION_RIGHT","DIRECTION_UP","DIRECTION_DOWN","DIRECTION_HORIZONTAL","DIRECTION_VERTICAL","DIRECTION_ALL","PROPS_XY","PROPS_CLIENT_XY","Input","manager","callback","that","options","inputTarget","domHandler","ev","enable","init","evEl","evTarget","evWin","destroy","createInputInstance","Type","inputClass","PointerEventInput","TouchInput","MouseInput","TouchMouseInput","inputHandler","eventType","input","pointersLen","pointers","changedPointersLen","changedPointers","isFirst","isFinal","session","computeInputData","emit","recognize","prevInput","pointersLength","firstInput","simpleCloneInputData","firstMultiple","offsetCenter","center","getCenter","timeStamp","deltaTime","angle","getAngle","distance","getDistance","computeDeltaXY","offsetDirection","getDirection","deltaX","deltaY","overallVelocity","getVelocity","overallVelocityX","x","overallVelocityY","y","scale","getScale","rotation","getRotation","maxPointers","computeIntervalInputData","srcEvent","offset","offsetDelta","prevDelta","last","lastInterval","velocity","velocityX","velocityY","direction","v","clientX","clientY","p1","p2","props","sqrt","atan2","PI","start","end","MOUSE_INPUT_MAP","mousedown","mousemove","mouseup","MOUSE_ELEMENT_EVENTS","MOUSE_WINDOW_EVENTS","pressed","MEhandler","button","which","pointerType","POINTER_INPUT_MAP","pointerdown","pointermove","pointerup","pointercancel","pointerout","IE10_POINTER_TYPE_ENUM","POINTER_ELEMENT_EVENTS","POINTER_WINDOW_EVENTS","MSPointerEvent","PointerEvent","store","pointerEvents","PEhandler","removePointer","eventTypeNormalized","toLowerCase","isTouch","storeIndex","pointerId","splice","SINGLE_TOUCH_INPUT_MAP","touchstart","touchmove","touchend","touchcancel","SINGLE_TOUCH_TARGET_EVENTS","SINGLE_TOUCH_WINDOW_EVENTS","SingleTouchInput","started","TEhandler","touches","normalizeSingleTouches","changed","changedTouches","concat","TOUCH_INPUT_MAP","TOUCH_TARGET_EVENTS","targetIds","MTEhandler","getTouches","allTouches","identifier","targetTouches","changedTargetTouches","filter","touch","DEDUP_TIMEOUT","DEDUP_DISTANCE","mouse","primaryTouch","lastTouches","TMEhandler","inputEvent","inputData","isMouse","sourceCapabilities","firesTouchEvents","recordTouches","isSyntheticEvent","eventData","setLastTouch","lastTouch","lts","removeLastTouch","t","dx","dy","PREFIXED_TOUCH_ACTION","style","NATIVE_TOUCH_ACTION","TOUCH_ACTION_COMPUTE","TOUCH_ACTION_AUTO","TOUCH_ACTION_MANIPULATION","TOUCH_ACTION_NONE","TOUCH_ACTION_PAN_X","TOUCH_ACTION_PAN_Y","TOUCH_ACTION_MAP","getTouchActionProps","TouchAction","value","set","compute","actions","update","touchAction","recognizers","recognizer","getTouchAction","cleanTouchActions","join","preventDefaults","prevented","preventDefault","hasNone","hasPanY","hasPanX","isTapPointer","isTapMovement","isTapTouchTime","preventSrc","touchMap","cssSupports","CSS","supports","STATE_POSSIBLE","STATE_BEGAN","STATE_CHANGED","STATE_ENDED","STATE_RECOGNIZED","STATE_CANCELLED","STATE_FAILED","Recognizer","defaults","id","state","simultaneous","requireFail","recognizeWith","otherRecognizer","getRecognizerByNameIfManager","dropRecognizeWith","requireFailure","dropRequireFailure","hasRequireFailures","canRecognizeWith","self","event","stateStr","additionalEvent","tryEmit","canEmit","inputDataClone","reset","process","directionStr","get","AttrRecognizer","attrTest","optionPointers","isRecognized","isValid","PanRecognizer","pX","pY","threshold","directionTest","hasMoved","PinchRecognizer","inOut","PressRecognizer","_timer","_input","time","validPointers","validMovement","validTime","clearTimeout","RotateRecognizer","SwipeRecognizer","TapRecognizer","pTime","pCenter","count","taps","interval","posThreshold","validTouchTime","failTimeout","validInterval","validMultiTap","tapCount","Hammer","preset","Manager","VERSION","domEvents","cssProps","userSelect","touchSelect","touchCallout","contentZooming","userDrag","tapHighlightColor","STOP","FORCED_STOP","handlers","oldCssProps","toggleCssProps","item","add","stop","force","stopped","curRecognizer","existing","remove","on","events","off","data","triggerDomEvent","gestureEvent","createEvent","initEvent","gesture","dispatchEvent","Tap","Pan","Swipe","Pinch","Rotate","Press","freeGlobal","define","amd"],"mappings":"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","sourcesContent":["/** @module external.hammer */require( 'external.hammer', function(require, module, exports) { var _=function(){var D={\"en\":{},\"fr\":{}},X=require(\"$\").intl;function _(){return X(D,arguments);}_.all=D;return _}();\r\n   'use strict';\r\n\r\n/**\r\n * ! Hammer.JS - v2.0.8 - 2016-04-23\r\n * http://hammerjs.github.io/\r\n *\r\n * Copyright (c) 2016 Jorik Tangelder;\r\n * Licensed under the MIT license */\r\n\r\n/* eslint max-statements: [\"error\", 20, { \"ignoreTopLevelFunctions\": true }] */\r\n/* eslint wrap-iife: 0 */\r\n( function ( window, document, exportName, undefined ) {\r\n    const\r\n        VENDOR_PREFIXES = [ '', 'webkit', 'Moz', 'MS', 'ms', 'o' ],\r\n        TEST_ELEMENT = document.createElement( 'div' ),\r\n        TYPE_FUNCTION = 'function';\r\n\r\n    const\r\n        round = Math.round,\r\n        abs = Math.abs,\r\n        now = Date.now;\r\n\r\n    /**\r\n     * set a timeout with a given scope\r\n     * @param {Function} fn\r\n     * @param {Number} timeout\r\n     * @param {Object} context\r\n     * @returns {number}\r\n     */\r\n    function setTimeoutContext( fn, timeout, context ) {\r\n        return setTimeout( bindFn( fn, context ), timeout );\r\n    }\r\n\r\n    /**\r\n     * if the argument is an array, we want to execute the fn on each entry\r\n     * if it aint an array we don't want to do a thing.\r\n     * this is used by all the methods that accept a single and array argument.\r\n     * @param {*|Array} arg\r\n     * @param {String} fn\r\n     * @param {Object} [context]\r\n     * @returns {Boolean}\r\n     */\r\n    function invokeArrayArg( arg, fn, context ) {\r\n        if ( Array.isArray( arg ) ) {\r\n            each( arg, context[ fn ], context );\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * walk objects and arrays\r\n     * @param {Object} obj\r\n     * @param {Function} iterator\r\n     * @param {Object} context\r\n     */\r\n    function each( obj, iterator, context ) {\r\n        var i;\r\n\r\n        if ( !obj ) {\r\n            return;\r\n        }\r\n\r\n        if ( obj.forEach ) {\r\n            obj.forEach( iterator, context );\r\n        } else if ( obj.length !== undefined ) {\r\n            i = 0;\r\n            while ( i < obj.length ) {\r\n                iterator.call( context, obj[ i ], i, obj );\r\n                i++;\r\n            }\r\n        } else {\r\n            for ( i in obj ) {\r\n                obj.hasOwnProperty( i ) && iterator.call( context, obj[ i ], i, obj );\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * wrap a method with a deprecation warning and stack trace\r\n     * @param {Function} method\r\n     * @param {String} name\r\n     * @param {String} message\r\n     * @returns {Function} A new function wrapping the supplied method.\r\n     */\r\n    function deprecate( method, name, message ) {\r\n        var deprecationMessage = 'DEPRECATED METHOD: ' + name + '\\n' + message + ' AT \\n';\r\n        return function () {\r\n            var e = new Error( 'get-stack-trace' );\r\n            var stack = e && e.stack ? e.stack.replace( /^[^\\(]+?[\\n$]/gm, '' )\r\n                .replace( /^\\s+at\\s+/gm, '' )\r\n                .replace( /^Object.<anonymous>\\s*\\(/gm, '{anonymous}()@' ) : 'Unknown Stack Trace';\r\n\r\n            var log = window.console && ( window.console.warn || window.console.log );\r\n            if ( log ) {\r\n                log.call( window.console, deprecationMessage, stack );\r\n            }\r\n            return method.apply( this, arguments );\r\n        };\r\n    }\r\n\r\n    /**\r\n     * extend object.\r\n     * means that properties in dest will be overwritten by the ones in src.\r\n     * @param {Object} target\r\n     * @param {...Object} objects_to_assign\r\n     * @returns {Object} target\r\n     */\r\n    let assign;\r\n    if ( typeof Object.assign !== 'function' ) {\r\n        assign = function assign( target ) {\r\n            if ( target === undefined || target === null ) {\r\n                throw new TypeError( 'Cannot convert undefined or null to object' );\r\n            }\r\n\r\n            var output = Object( target );\r\n            for ( var index = 1; index < arguments.length; index++ ) {\r\n                var source = arguments[ index ];\r\n                if ( source !== undefined && source !== null ) {\r\n                    for ( var nextKey in source ) {\r\n                        if ( source.hasOwnProperty( nextKey ) ) {\r\n                            output[ nextKey ] = source[ nextKey ];\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            return output;\r\n        };\r\n    } else {\r\n        assign = Object.assign;\r\n    }\r\n\r\n    /**\r\n     * extend object.\r\n     * means that properties in dest will be overwritten by the ones in src.\r\n     * @param {Object} dest\r\n     * @param {Object} src\r\n     * @param {Boolean} [merge=false]\r\n     * @returns {Object} dest\r\n     */\r\n    var extend = deprecate( function extend( dest, src, merge ) {\r\n        var keys = Object.keys( src );\r\n        var i = 0;\r\n        while ( i < keys.length ) {\r\n            if ( !merge || ( merge && dest[ keys[ i ] ] === undefined ) ) {\r\n                dest[ keys[ i ] ] = src[ keys[ i ] ];\r\n            }\r\n            i++;\r\n        }\r\n        return dest;\r\n    }, 'extend', 'Use `assign`.' );\r\n\r\n    /**\r\n     * merge the values from src in the dest.\r\n     * means that properties that exist in dest will not be overwritten by src\r\n     * @param {Object} dest\r\n     * @param {Object} src\r\n     * @returns {Object} dest\r\n     */\r\n    var merge = deprecate( function merge( dest, src ) {\r\n        return extend( dest, src, true );\r\n    }, 'merge', 'Use `assign`.' );\r\n\r\n    /**\r\n     * simple class inheritance\r\n     * @param {Function} child\r\n     * @param {Function} base\r\n     * @param {Object} [properties]\r\n     */\r\n    function inherit( child, base, properties ) {\r\n        const\r\n            baseP = base.prototype,\r\n            childP = child.prototype = Object.create( baseP );\r\n        childP.constructor = child;\r\n        childP._super = baseP;\r\n\r\n        if ( properties ) {\r\n            assign( childP, properties );\r\n        }\r\n    }\r\n\r\n    /**\r\n     * simple function bind\r\n     * @param {Function} fn\r\n     * @param {Object} context\r\n     * @returns {Function}\r\n     */\r\n    function bindFn( fn, context ) {\r\n        return function boundFn() {\r\n            return fn.apply( context, arguments );\r\n        };\r\n    }\r\n\r\n    /**\r\n     * let a boolean value also be a function that must return a boolean\r\n     * this first item in args will be used as the context\r\n     * @param {Boolean|Function} val\r\n     * @param {Array} [args]\r\n     * @returns {Boolean}\r\n     */\r\n    function boolOrFn( val, args ) {\r\n        if ( typeof val == TYPE_FUNCTION ) {\r\n            return val.apply( args ? args[ 0 ] || undefined : undefined, args );\r\n        }\r\n        return val;\r\n    }\r\n\r\n    /**\r\n     * use the val2 when val1 is undefined\r\n     * @param {*} val1\r\n     * @param {*} val2\r\n     * @returns {*}\r\n     */\r\n    function ifUndefined( val1, val2 ) {\r\n        return ( val1 === undefined ) ? val2 : val1;\r\n    }\r\n\r\n    /**\r\n     * addEventListener with multiple events at once\r\n     * @param {EventTarget} target\r\n     * @param {String} types\r\n     * @param {Function} handler\r\n     */\r\n    function addEventListeners( target, types, handler ) {\r\n        each( splitStr( types ), function ( type ) {\r\n            target.addEventListener( type, handler, false );\r\n        } );\r\n    }\r\n\r\n    /**\r\n     * removeEventListener with multiple events at once\r\n     * @param {EventTarget} target\r\n     * @param {String} types\r\n     * @param {Function} handler\r\n     */\r\n    function removeEventListeners( target, types, handler ) {\r\n        each( splitStr( types ), function ( type ) {\r\n            target.removeEventListener( type, handler, false );\r\n        } );\r\n    }\r\n\r\n    /**\r\n     * find if a node is in the given parent\r\n     * @method hasParent\r\n     * @param {HTMLElement} node\r\n     * @param {HTMLElement} parent\r\n     * @return {Boolean} found\r\n     */\r\n    function hasParent( node, parent ) {\r\n        while ( node ) {\r\n            if ( node == parent ) {\r\n                return true;\r\n            }\r\n            node = node.parentNode;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * small indexOf wrapper\r\n     * @param {String} str\r\n     * @param {String} find\r\n     * @returns {Boolean} found\r\n     */\r\n    function inStr( str, find ) {\r\n        return str.indexOf( find ) > -1;\r\n    }\r\n\r\n    /**\r\n     * split string on whitespace\r\n     * @param {String} str\r\n     * @returns {Array} words\r\n     */\r\n    function splitStr( str ) {\r\n        return str.trim().split( /\\s+/g );\r\n    }\r\n\r\n    /**\r\n     * find if a array contains the object using indexOf or a simple polyFill\r\n     * @param {Array} src\r\n     * @param {String} find\r\n     * @param {String} [findByKey]\r\n     * @return {Boolean|Number} false when not found, or the index\r\n     */\r\n    function inArray( src, find, findByKey ) {\r\n        if ( src.indexOf && !findByKey ) {\r\n            return src.indexOf( find );\r\n        } else {\r\n            var i = 0;\r\n            while ( i < src.length ) {\r\n                if ( ( findByKey && src[ i ][ findByKey ] == find ) || ( !findByKey && src[ i ] === find ) ) {\r\n                    return i;\r\n                }\r\n                i++;\r\n            }\r\n            return -1;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * convert array-like objects to real arrays\r\n     * @param {Object} obj\r\n     * @returns {Array}\r\n     */\r\n    function toArray( obj ) {\r\n        return Array.prototype.slice.call( obj, 0 );\r\n    }\r\n\r\n    /**\r\n     * unique array with objects based on a key (like 'id') or just by the array's value\r\n     * @param {Array} src [{id:1},{id:2},{id:1}]\r\n     * @param {String} [key]\r\n     * @param {Boolean} [sort=False]\r\n     * @returns {Array} [{id:1},{id:2}]\r\n     */\r\n    function uniqueArray( src, key, sort ) {\r\n        var results = [];\r\n        var values = [];\r\n        var i = 0;\r\n\r\n        while ( i < src.length ) {\r\n            var val = key ? src[ i ][ key ] : src[ i ];\r\n            if ( inArray( values, val ) < 0 ) {\r\n                results.push( src[ i ] );\r\n            }\r\n            values[ i ] = val;\r\n            i++;\r\n        }\r\n\r\n        if ( sort ) {\r\n            if ( !key ) {\r\n                results = results.sort();\r\n            } else {\r\n                results = results.sort( function sortUniqueArray( a, b ) {\r\n                    return a[ key ] > b[ key ];\r\n                } );\r\n            }\r\n        }\r\n\r\n        return results;\r\n    }\r\n\r\n    /**\r\n     * get the prefixed property\r\n     * @param {Object} obj\r\n     * @param {String} property\r\n     * @returns {String|Undefined} prefixed\r\n     */\r\n    function prefixed( obj, property ) {\r\n        const camelProp = property[ 0 ].toUpperCase() + property.slice( 1 );\r\n\r\n        let i = 0;\r\n        while ( i < VENDOR_PREFIXES.length ) {\r\n            const\r\n                prefix = VENDOR_PREFIXES[ i ],\r\n                prop = ( prefix ) ? prefix + camelProp : property;\r\n\r\n            if ( prop in obj ) {\r\n                return prop;\r\n            }\r\n            i++;\r\n        }\r\n        return undefined;\r\n    }\r\n\r\n    /**\r\n     * get a unique id\r\n     * @returns {number} uniqueId\r\n     */\r\n    let _uniqueId = 1;\r\n\r\n    function uniqueId() {\r\n        return _uniqueId++;\r\n    }\r\n\r\n    /**\r\n     * get the window object of an element\r\n     * @param {HTMLElement} element\r\n     * @returns {DocumentView|Window}\r\n     */\r\n    function getWindowForElement( element ) {\r\n        var doc = element.ownerDocument || element;\r\n        return ( doc.defaultView || doc.parentWindow || window );\r\n    }\r\n\r\n    const MOBILE_REGEX = /mobile|tablet|ip(ad|hone|od)|android/i;\r\n\r\n    const\r\n        SUPPORT_TOUCH = ( 'ontouchstart' in window ),\r\n        SUPPORT_POINTER_EVENTS = prefixed( window, 'PointerEvent' ) !== undefined,\r\n        SUPPORT_ONLY_TOUCH = SUPPORT_TOUCH && MOBILE_REGEX.test( navigator.userAgent );\r\n\r\n    const\r\n        INPUT_TYPE_TOUCH = 'touch',\r\n        INPUT_TYPE_PEN = 'pen',\r\n        INPUT_TYPE_MOUSE = 'mouse',\r\n        INPUT_TYPE_KINECT = 'kinect';\r\n\r\n    const COMPUTE_INTERVAL = 25;\r\n\r\n    const\r\n        INPUT_START = 1,\r\n        INPUT_MOVE = 2,\r\n        INPUT_END = 4,\r\n        INPUT_CANCEL = 8;\r\n\r\n    const\r\n        DIRECTION_NONE = 1,\r\n        DIRECTION_LEFT = 2,\r\n        DIRECTION_RIGHT = 4,\r\n        DIRECTION_UP = 8,\r\n        DIRECTION_DOWN = 16;\r\n\r\n    const\r\n        DIRECTION_HORIZONTAL = DIRECTION_LEFT | DIRECTION_RIGHT,\r\n        DIRECTION_VERTICAL = DIRECTION_UP | DIRECTION_DOWN,\r\n        DIRECTION_ALL = DIRECTION_HORIZONTAL | DIRECTION_VERTICAL;\r\n\r\n    const\r\n        PROPS_XY = [ 'x', 'y' ],\r\n        PROPS_CLIENT_XY = [ 'clientX', 'clientY' ];\r\n\r\n    /**\r\n     * create new input type manager\r\n     * @param {Manager} manager\r\n     * @param {Function} callback\r\n     * @returns {Input}\r\n     * @constructor\r\n     */\r\n    function Input( manager, callback ) {\r\n        const that = this;\r\n        this.manager = manager;\r\n        this.callback = callback;\r\n        this.element = manager.element;\r\n        this.target = manager.options.inputTarget;\r\n\r\n        // smaller wrapper around the handler, for the scope and the enabled state of the manager,\r\n        // so when disabled the input events are completely bypassed.\r\n        this.domHandler = function ( ev ) {\r\n            if ( boolOrFn( manager.options.enable, [ manager ] ) ) {\r\n                that.handler( ev );\r\n            }\r\n        };\r\n\r\n        this.init();\r\n    }\r\n\r\n    Input.prototype = {\r\n        /**\r\n         * should handle the inputEvent data and trigger the callback\r\n         * @virtual\r\n         */\r\n        handler() {},\r\n\r\n        /**\r\n         * bind the events\r\n         */\r\n        init() {\r\n            this.evEl && addEventListeners( this.element, this.evEl, this.domHandler );\r\n            this.evTarget && addEventListeners( this.target, this.evTarget, this.domHandler );\r\n            this.evWin && addEventListeners( getWindowForElement( this.element ), this.evWin, this.domHandler );\r\n        },\r\n\r\n        /**\r\n         * unbind the events\r\n         */\r\n        destroy() {\r\n            this.evEl && removeEventListeners( this.element, this.evEl, this.domHandler );\r\n            this.evTarget && removeEventListeners( this.target, this.evTarget, this.domHandler );\r\n            this.evWin && removeEventListeners( getWindowForElement( this.element ), this.evWin, this.domHandler );\r\n        }\r\n    };\r\n\r\n    /**\r\n     * create new input type manager\r\n     * called by the Manager constructor\r\n     * @param {Hammer} manager\r\n     * @returns {Input}\r\n     */\r\n    function createInputInstance( manager ) {\r\n        var Type;\r\n        var inputClass = manager.options.inputClass;\r\n\r\n        if ( inputClass ) {\r\n            Type = inputClass;\r\n        } else if ( SUPPORT_POINTER_EVENTS ) {\r\n            Type = PointerEventInput;\r\n        } else if ( SUPPORT_ONLY_TOUCH ) {\r\n            Type = TouchInput;\r\n        } else if ( !SUPPORT_TOUCH ) {\r\n            Type = MouseInput;\r\n        } else {\r\n            Type = TouchMouseInput;\r\n        }\r\n        return new( Type )( manager, inputHandler );\r\n    }\r\n\r\n    /**\r\n     * handle input events\r\n     * @param {Manager} manager\r\n     * @param {String} eventType\r\n     * @param {Object} input\r\n     */\r\n    function inputHandler( manager, eventType, input ) {\r\n        var pointersLen = input.pointers.length;\r\n        var changedPointersLen = input.changedPointers.length;\r\n        var isFirst = ( eventType & INPUT_START && ( pointersLen - changedPointersLen === 0 ) );\r\n        var isFinal = ( eventType & ( INPUT_END | INPUT_CANCEL ) && ( pointersLen - changedPointersLen === 0 ) );\r\n\r\n        input.isFirst = !!isFirst;\r\n        input.isFinal = !!isFinal;\r\n\r\n        if ( isFirst ) {\r\n            manager.session = {};\r\n        }\r\n\r\n        // source event is the normalized value of the domEvents\r\n        // like 'touchstart, mouseup, pointerdown'\r\n        input.eventType = eventType;\r\n\r\n        // compute scale, rotation etc\r\n        computeInputData( manager, input );\r\n\r\n        // emit secret event\r\n        manager.emit( 'hammer.input', input );\r\n\r\n        manager.recognize( input );\r\n        manager.session.prevInput = input;\r\n    }\r\n\r\n    /**\r\n     * extend the data with some usable properties like scale, rotate, velocity etc\r\n     * @param {Object} manager\r\n     * @param {Object} input\r\n     */\r\n    function computeInputData( manager, input ) {\r\n        const\r\n            session = manager.session,\r\n            pointers = input.pointers,\r\n            pointersLength = pointers.length;\r\n\r\n        // store the first input to calculate the distance and direction\r\n        if ( !session.firstInput ) {\r\n            session.firstInput = simpleCloneInputData( input );\r\n        }\r\n\r\n        // to compute scale and rotation we need to store the multiple touches\r\n        if ( pointersLength > 1 && !session.firstMultiple ) {\r\n            session.firstMultiple = simpleCloneInputData( input );\r\n        } else if ( pointersLength === 1 ) {\r\n            session.firstMultiple = false;\r\n        }\r\n\r\n        const\r\n            firstInput = session.firstInput,\r\n            firstMultiple = session.firstMultiple,\r\n            offsetCenter = firstMultiple ? firstMultiple.center : firstInput.center;\r\n\r\n        const center = input.center = getCenter( pointers );\r\n        input.timeStamp = now();\r\n        input.deltaTime = input.timeStamp - firstInput.timeStamp;\r\n\r\n        input.angle = getAngle( offsetCenter, center );\r\n        input.distance = getDistance( offsetCenter, center );\r\n\r\n        computeDeltaXY( session, input );\r\n        input.offsetDirection = getDirection( input.deltaX, input.deltaY );\r\n\r\n        const overallVelocity = getVelocity( input.deltaTime, input.deltaX, input.deltaY );\r\n        input.overallVelocityX = overallVelocity.x;\r\n        input.overallVelocityY = overallVelocity.y;\r\n        input.overallVelocity = ( abs( overallVelocity.x ) > abs( overallVelocity.y ) ) ? overallVelocity.x : overallVelocity.y;\r\n\r\n        input.scale = firstMultiple ? getScale( firstMultiple.pointers, pointers ) : 1;\r\n        input.rotation = firstMultiple ? getRotation( firstMultiple.pointers, pointers ) : 0;\r\n\r\n        input.maxPointers = !session.prevInput ? input.pointers.length : ( ( input.pointers.length >\r\n            session.prevInput.maxPointers ) ? input.pointers.length : session.prevInput.maxPointers );\r\n\r\n        computeIntervalInputData( session, input );\r\n\r\n        // find the correct target\r\n        var target = manager.element;\r\n        if ( hasParent( input.srcEvent.target, target ) ) {\r\n            target = input.srcEvent.target;\r\n        }\r\n        input.target = target;\r\n    }\r\n\r\n    function computeDeltaXY( session, input ) {\r\n        let\r\n            center = input.center,\r\n            offset = session.offsetDelta || {},\r\n            prevDelta = session.prevDelta || {},\r\n            prevInput = session.prevInput || {};\r\n\r\n        if ( input.eventType === INPUT_START || prevInput.eventType === INPUT_END ) {\r\n            prevDelta = session.prevDelta = {\r\n                x: prevInput.deltaX || 0,\r\n                y: prevInput.deltaY || 0\r\n            };\r\n\r\n            offset = session.offsetDelta = {\r\n                x: center.x,\r\n                y: center.y\r\n            };\r\n        }\r\n\r\n        input.deltaX = prevDelta.x + ( center.x - offset.x );\r\n        input.deltaY = prevDelta.y + ( center.y - offset.y );\r\n    }\r\n\r\n    /**\r\n     * velocity is calculated every x ms\r\n     * @param {Object} session\r\n     * @param {Object} input\r\n     */\r\n    function computeIntervalInputData( session, input ) {\r\n        const\r\n            last = session.lastInterval || input,\r\n            deltaTime = input.timeStamp - last.timeStamp;\r\n        let velocity, velocityX, velocityY, direction;\r\n\r\n        if ( input.eventType !== INPUT_CANCEL && ( deltaTime > COMPUTE_INTERVAL || last.velocity === undefined ) ) {\r\n            const\r\n                deltaX = input.deltaX - last.deltaX,\r\n                deltaY = input.deltaY - last.deltaY,\r\n                v = getVelocity( deltaTime, deltaX, deltaY );\r\n\r\n            velocityX = v.x;\r\n            velocityY = v.y;\r\n            velocity = ( abs( v.x ) > abs( v.y ) ) ? v.x : v.y;\r\n            direction = getDirection( deltaX, deltaY );\r\n\r\n            session.lastInterval = input;\r\n        } else {\r\n            // use latest velocity info if it doesn't overtake a minimum period\r\n            velocity = last.velocity;\r\n            velocityX = last.velocityX;\r\n            velocityY = last.velocityY;\r\n            direction = last.direction;\r\n        }\r\n\r\n        input.velocity = velocity;\r\n        input.velocityX = velocityX;\r\n        input.velocityY = velocityY;\r\n        input.direction = direction;\r\n    }\r\n\r\n    /**\r\n     * create a simple clone from the input used for storage of firstInput and firstMultiple\r\n     * @param {Object} input\r\n     * @returns {Object} clonedInputData\r\n     */\r\n    function simpleCloneInputData( input ) {\r\n        // make a simple copy of the pointers because we will get a reference if we don't\r\n        // we only need clientXY for the calculations\r\n        var pointers = [];\r\n        var i = 0;\r\n        while ( i < input.pointers.length ) {\r\n            pointers[ i ] = {\r\n                clientX: round( input.pointers[ i ].clientX ),\r\n                clientY: round( input.pointers[ i ].clientY )\r\n            };\r\n            i++;\r\n        }\r\n\r\n        return {\r\n            timeStamp: now(),\r\n            pointers: pointers,\r\n            center: getCenter( pointers ),\r\n            deltaX: input.deltaX,\r\n            deltaY: input.deltaY\r\n        };\r\n    }\r\n\r\n    /**\r\n     * get the center of all the pointers\r\n     * @param {Array} pointers\r\n     * @return {Object} center contains `x` and `y` properties\r\n     */\r\n    function getCenter( pointers ) {\r\n        var pointersLength = pointers.length;\r\n\r\n        // no need to loop when only one touch\r\n        if ( pointersLength === 1 ) {\r\n            return {\r\n                x: round( pointers[ 0 ].clientX ),\r\n                y: round( pointers[ 0 ].clientY )\r\n            };\r\n        }\r\n\r\n        var x = 0,\r\n            y = 0,\r\n            i = 0;\r\n        while ( i < pointersLength ) {\r\n            x += pointers[ i ].clientX;\r\n            y += pointers[ i ].clientY;\r\n            i++;\r\n        }\r\n\r\n        return {\r\n            x: round( x / pointersLength ),\r\n            y: round( y / pointersLength )\r\n        };\r\n    }\r\n\r\n    /**\r\n     * calculate the velocity between two points. unit is in px per ms.\r\n     * @param {Number} deltaTime\r\n     * @param {Number} x\r\n     * @param {Number} y\r\n     * @return {Object} velocity `x` and `y`\r\n     */\r\n    function getVelocity( deltaTime, x, y ) {\r\n        return {\r\n            x: x / deltaTime || 0,\r\n            y: y / deltaTime || 0\r\n        };\r\n    }\r\n\r\n    /**\r\n     * get the direction between two points\r\n     * @param {Number} x\r\n     * @param {Number} y\r\n     * @return {Number} direction\r\n     */\r\n    function getDirection( x, y ) {\r\n        if ( x === y ) {\r\n            return DIRECTION_NONE;\r\n        }\r\n\r\n        if ( abs( x ) >= abs( y ) ) {\r\n            return x < 0 ? DIRECTION_LEFT : DIRECTION_RIGHT;\r\n        }\r\n        return y < 0 ? DIRECTION_UP : DIRECTION_DOWN;\r\n    }\r\n\r\n    /**\r\n     * calculate the absolute distance between two points\r\n     * @param {Object} p1 {x, y}\r\n     * @param {Object} p2 {x, y}\r\n     * @param {Array} [props] containing x and y keys\r\n     * @return {Number} distance\r\n     */\r\n    function getDistance( p1, p2, props ) {\r\n        if ( !props ) {\r\n            props = PROPS_XY;\r\n        }\r\n        var x = p2[ props[ 0 ] ] - p1[ props[ 0 ] ],\r\n            y = p2[ props[ 1 ] ] - p1[ props[ 1 ] ];\r\n\r\n        return Math.sqrt( ( x * x ) + ( y * y ) );\r\n    }\r\n\r\n    /**\r\n     * calculate the angle between two coordinates\r\n     * @param {Object} p1\r\n     * @param {Object} p2\r\n     * @param {Array} [props] containing x and y keys\r\n     * @return {Number} angle\r\n     */\r\n    function getAngle( p1, p2, props ) {\r\n        if ( !props ) {\r\n            props = PROPS_XY;\r\n        }\r\n        var x = p2[ props[ 0 ] ] - p1[ props[ 0 ] ],\r\n            y = p2[ props[ 1 ] ] - p1[ props[ 1 ] ];\r\n        return Math.atan2( y, x ) * 180 / Math.PI;\r\n    }\r\n\r\n    /**\r\n     * calculate the rotation degrees between two pointersets\r\n     * @param {Array} start array of pointers\r\n     * @param {Array} end array of pointers\r\n     * @return {Number} rotation\r\n     */\r\n    function getRotation( start, end ) {\r\n        return getAngle( end[ 1 ], end[ 0 ], PROPS_CLIENT_XY ) + getAngle( start[ 1 ], start[ 0 ], PROPS_CLIENT_XY );\r\n    }\r\n\r\n    /**\r\n     * calculate the scale factor between two pointersets\r\n     * no scale is 1, and goes down to 0 when pinched together, and bigger when pinched out\r\n     * @param {Array} start array of pointers\r\n     * @param {Array} end array of pointers\r\n     * @return {Number} scale\r\n     */\r\n    function getScale( start, end ) {\r\n        return getDistance( end[ 0 ], end[ 1 ], PROPS_CLIENT_XY ) / getDistance( start[ 0 ], start[ 1 ], PROPS_CLIENT_XY );\r\n    }\r\n\r\n    var MOUSE_INPUT_MAP = {\r\n        mousedown: INPUT_START,\r\n        mousemove: INPUT_MOVE,\r\n        mouseup: INPUT_END\r\n    };\r\n\r\n    var MOUSE_ELEMENT_EVENTS = 'mousedown';\r\n    var MOUSE_WINDOW_EVENTS = 'mousemove mouseup';\r\n\r\n    /**\r\n     * Mouse events input\r\n     * @constructor\r\n     * @extends Input\r\n     */\r\n    function MouseInput() {\r\n        this.evEl = MOUSE_ELEMENT_EVENTS;\r\n        this.evWin = MOUSE_WINDOW_EVENTS;\r\n\r\n        this.pressed = false; // mousedown state\r\n\r\n        Input.apply( this, arguments );\r\n    }\r\n\r\n    inherit( MouseInput, Input, {\r\n        /**\r\n         * handle mouse events\r\n         * @param {Object} ev\r\n         */\r\n        handler: function MEhandler( ev ) {\r\n            var eventType = MOUSE_INPUT_MAP[ ev.type ];\r\n\r\n            // on start we want to have the left mouse button down\r\n            if ( eventType & INPUT_START && ev.button !== 2 ) {\r\n                this.pressed = true;\r\n            }\r\n\r\n            if ( eventType & INPUT_MOVE && ev.which !== 1 ) {\r\n                eventType = INPUT_END;\r\n            }\r\n\r\n            // mouse must be down\r\n            if ( !this.pressed ) {\r\n                return;\r\n            }\r\n\r\n            if ( eventType & INPUT_END ) {\r\n                this.pressed = false;\r\n            }\r\n\r\n            this.callback( this.manager, eventType, {\r\n                pointers: [ ev ],\r\n                changedPointers: [ ev ],\r\n                pointerType: INPUT_TYPE_MOUSE,\r\n                srcEvent: ev\r\n            } );\r\n        }\r\n    } );\r\n\r\n    var POINTER_INPUT_MAP = {\r\n        pointerdown: INPUT_START,\r\n        pointermove: INPUT_MOVE,\r\n        pointerup: INPUT_END,\r\n        pointercancel: INPUT_CANCEL,\r\n        pointerout: INPUT_CANCEL\r\n    };\r\n\r\n    // in IE10 the pointer types is defined as an enum\r\n    var IE10_POINTER_TYPE_ENUM = {\r\n        2: INPUT_TYPE_TOUCH,\r\n        3: INPUT_TYPE_PEN,\r\n        4: INPUT_TYPE_MOUSE,\r\n        5: INPUT_TYPE_KINECT // see https://twitter.com/jacobrossi/status/480596438489890816\r\n    };\r\n\r\n    var POINTER_ELEMENT_EVENTS = 'pointerdown';\r\n    var POINTER_WINDOW_EVENTS = 'pointermove pointerup pointercancel';\r\n\r\n    // IE10 has prefixed support, and case-sensitive\r\n    if ( window.MSPointerEvent && !window.PointerEvent ) {\r\n        POINTER_ELEMENT_EVENTS = 'MSPointerDown';\r\n        POINTER_WINDOW_EVENTS = 'MSPointerMove MSPointerUp MSPointerCancel';\r\n    }\r\n\r\n    /**\r\n     * Pointer events input\r\n     * @constructor\r\n     * @extends Input\r\n     */\r\n    function PointerEventInput() {\r\n        this.evEl = POINTER_ELEMENT_EVENTS;\r\n        this.evWin = POINTER_WINDOW_EVENTS;\r\n\r\n        Input.apply( this, arguments );\r\n\r\n        this.store = ( this.manager.session.pointerEvents = [] );\r\n    }\r\n\r\n    inherit( PointerEventInput, Input, {\r\n        /**\r\n         * handle mouse events\r\n         * @param {Object} ev\r\n         */\r\n        handler: function PEhandler( ev ) {\r\n            var store = this.store;\r\n            var removePointer = false;\r\n\r\n            var eventTypeNormalized = ev.type.toLowerCase().replace( 'ms', '' );\r\n            var eventType = POINTER_INPUT_MAP[ eventTypeNormalized ];\r\n            var pointerType = IE10_POINTER_TYPE_ENUM[ ev.pointerType ] || ev.pointerType;\r\n\r\n            var isTouch = ( pointerType == INPUT_TYPE_TOUCH );\r\n\r\n            // get index of the event in the store\r\n            var storeIndex = inArray( store, ev.pointerId, 'pointerId' );\r\n\r\n            // start and mouse must be down\r\n            if ( eventType & INPUT_START && ( ev.button !== 2 || isTouch ) ) {\r\n                if ( storeIndex < 0 ) {\r\n                    store.push( ev );\r\n                    storeIndex = store.length - 1;\r\n                }\r\n            } else if ( eventType & ( INPUT_END | INPUT_CANCEL ) ) {\r\n                removePointer = true;\r\n            }\r\n\r\n            // it not found, so the pointer hasn't been down (so it's probably a hover)\r\n            if ( storeIndex < 0 ) {\r\n                return;\r\n            }\r\n\r\n            // update the event in the store\r\n            store[ storeIndex ] = ev;\r\n\r\n            this.callback( this.manager, eventType, {\r\n                pointers: store,\r\n                changedPointers: [ ev ],\r\n                pointerType: pointerType,\r\n                srcEvent: ev\r\n            } );\r\n\r\n            if ( removePointer ) {\r\n                // remove from the store\r\n                store.splice( storeIndex, 1 );\r\n            }\r\n        }\r\n    } );\r\n\r\n    var SINGLE_TOUCH_INPUT_MAP = {\r\n        touchstart: INPUT_START,\r\n        touchmove: INPUT_MOVE,\r\n        touchend: INPUT_END,\r\n        touchcancel: INPUT_CANCEL\r\n    };\r\n\r\n    var SINGLE_TOUCH_TARGET_EVENTS = 'touchstart';\r\n    var SINGLE_TOUCH_WINDOW_EVENTS = 'touchstart touchmove touchend touchcancel';\r\n\r\n    /**\r\n     * Touch events input\r\n     * @constructor\r\n     * @extends Input\r\n     */\r\n    function SingleTouchInput() {\r\n        this.evTarget = SINGLE_TOUCH_TARGET_EVENTS;\r\n        this.evWin = SINGLE_TOUCH_WINDOW_EVENTS;\r\n        this.started = false;\r\n\r\n        Input.apply( this, arguments );\r\n    }\r\n\r\n    inherit( SingleTouchInput, Input, {\r\n        handler: function TEhandler( ev ) {\r\n            var type = SINGLE_TOUCH_INPUT_MAP[ ev.type ];\r\n\r\n            // should we handle the touch events?\r\n            if ( type === INPUT_START ) {\r\n                this.started = true;\r\n            }\r\n\r\n            if ( !this.started ) {\r\n                return;\r\n            }\r\n\r\n            var touches = normalizeSingleTouches.call( this, ev, type );\r\n\r\n            // when done, reset the started state\r\n            if ( type & ( INPUT_END | INPUT_CANCEL ) && touches[ 0 ].length - touches[ 1 ].length === 0 ) {\r\n                this.started = false;\r\n            }\r\n\r\n            this.callback( this.manager, type, {\r\n                pointers: touches[ 0 ],\r\n                changedPointers: touches[ 1 ],\r\n                pointerType: INPUT_TYPE_TOUCH,\r\n                srcEvent: ev\r\n            } );\r\n        }\r\n    } );\r\n\r\n    /**\r\n     * @this {TouchInput}\r\n     * @param {Object} ev\r\n     * @param {Number} type flag\r\n     * @returns {undefined|Array} [all, changed]\r\n     */\r\n    function normalizeSingleTouches( ev, type ) {\r\n        var all = toArray( ev.touches );\r\n        var changed = toArray( ev.changedTouches );\r\n\r\n        if ( type & ( INPUT_END | INPUT_CANCEL ) ) {\r\n            all = uniqueArray( all.concat( changed ), 'identifier', true );\r\n        }\r\n\r\n        return [ all, changed ];\r\n    }\r\n\r\n    var TOUCH_INPUT_MAP = {\r\n        touchstart: INPUT_START,\r\n        touchmove: INPUT_MOVE,\r\n        touchend: INPUT_END,\r\n        touchcancel: INPUT_CANCEL\r\n    };\r\n\r\n    var TOUCH_TARGET_EVENTS = 'touchstart touchmove touchend touchcancel';\r\n\r\n    /**\r\n     * Multi-user touch events input\r\n     * @constructor\r\n     * @extends Input\r\n     */\r\n    function TouchInput() {\r\n        this.evTarget = TOUCH_TARGET_EVENTS;\r\n        this.targetIds = {};\r\n\r\n        Input.apply( this, arguments );\r\n    }\r\n\r\n    inherit( TouchInput, Input, {\r\n        handler: function MTEhandler( ev ) {\r\n            var type = TOUCH_INPUT_MAP[ ev.type ];\r\n            var touches = getTouches.call( this, ev, type );\r\n            if ( !touches ) {\r\n                return;\r\n            }\r\n\r\n            this.callback( this.manager, type, {\r\n                pointers: touches[ 0 ],\r\n                changedPointers: touches[ 1 ],\r\n                pointerType: INPUT_TYPE_TOUCH,\r\n                srcEvent: ev\r\n            } );\r\n        }\r\n    } );\r\n\r\n    /**\r\n     * @this {TouchInput}\r\n     * @param {Object} ev\r\n     * @param {Number} type flag\r\n     * @returns {undefined|Array} [all, changed]\r\n     */\r\n    function getTouches( ev, type ) {\r\n        var allTouches = toArray( ev.touches );\r\n        var targetIds = this.targetIds;\r\n\r\n        // when there is only one touch, the process can be simplified\r\n        if ( type & ( INPUT_START | INPUT_MOVE ) && allTouches.length === 1 ) {\r\n            targetIds[ allTouches[ 0 ].identifier ] = true;\r\n            return [ allTouches, allTouches ];\r\n        }\r\n\r\n        var i,\r\n            targetTouches,\r\n            changedTouches = toArray( ev.changedTouches ),\r\n            changedTargetTouches = [],\r\n            target = this.target;\r\n\r\n        // get target touches from touches\r\n        targetTouches = allTouches.filter( function ( touch ) {\r\n            return hasParent( touch.target, target );\r\n        } );\r\n\r\n        // collect touches\r\n        if ( type === INPUT_START ) {\r\n            i = 0;\r\n            while ( i < targetTouches.length ) {\r\n                targetIds[ targetTouches[ i ].identifier ] = true;\r\n                i++;\r\n            }\r\n        }\r\n\r\n        // filter changed touches to only contain touches that exist in the collected target ids\r\n        i = 0;\r\n        while ( i < changedTouches.length ) {\r\n            if ( targetIds[ changedTouches[ i ].identifier ] ) {\r\n                changedTargetTouches.push( changedTouches[ i ] );\r\n            }\r\n\r\n            // cleanup removed touches\r\n            if ( type & ( INPUT_END | INPUT_CANCEL ) ) {\r\n                delete targetIds[ changedTouches[ i ].identifier ];\r\n            }\r\n            i++;\r\n        }\r\n\r\n        if ( !changedTargetTouches.length ) {\r\n            return;\r\n        }\r\n\r\n        return [\r\n            // merge targetTouches with changedTargetTouches so it contains ALL touches, including 'end' and 'cancel'\r\n            uniqueArray( targetTouches.concat( changedTargetTouches ), 'identifier', true ),\r\n            changedTargetTouches\r\n        ];\r\n    }\r\n\r\n    /**\r\n     * Combined touch and mouse input\r\n     *\r\n     * Touch has a higher priority then mouse, and while touching no mouse events are allowed.\r\n     * This because touch devices also emit mouse events while doing a touch.\r\n     *\r\n     * @constructor\r\n     * @extends Input\r\n     */\r\n\r\n    var DEDUP_TIMEOUT = 2500;\r\n    var DEDUP_DISTANCE = 25;\r\n\r\n    function TouchMouseInput() {\r\n        Input.apply( this, arguments );\r\n\r\n        var handler = bindFn( this.handler, this );\r\n        this.touch = new TouchInput( this.manager, handler );\r\n        this.mouse = new MouseInput( this.manager, handler );\r\n\r\n        this.primaryTouch = null;\r\n        this.lastTouches = [];\r\n    }\r\n\r\n    inherit( TouchMouseInput, Input, {\r\n        /**\r\n         * handle mouse and touch events\r\n         * @param {Hammer} manager\r\n         * @param {String} inputEvent\r\n         * @param {Object} inputData\r\n         */\r\n        handler: function TMEhandler( manager, inputEvent, inputData ) {\r\n            var isTouch = ( inputData.pointerType == INPUT_TYPE_TOUCH ),\r\n                isMouse = ( inputData.pointerType == INPUT_TYPE_MOUSE );\r\n\r\n            if ( isMouse && inputData.sourceCapabilities && inputData.sourceCapabilities.firesTouchEvents ) {\r\n                return;\r\n            }\r\n\r\n            // when we're in a touch event, record touches to  de-dupe synthetic mouse event\r\n            if ( isTouch ) {\r\n                recordTouches.call( this, inputEvent, inputData );\r\n            } else if ( isMouse && isSyntheticEvent.call( this, inputData ) ) {\r\n                return;\r\n            }\r\n\r\n            this.callback( manager, inputEvent, inputData );\r\n        },\r\n\r\n        /**\r\n         * remove the event listeners\r\n         */\r\n        destroy: function destroy() {\r\n            this.touch.destroy();\r\n            this.mouse.destroy();\r\n        }\r\n    } );\r\n\r\n    function recordTouches( eventType, eventData ) {\r\n        if ( eventType & INPUT_START ) {\r\n            this.primaryTouch = eventData.changedPointers[ 0 ].identifier;\r\n            setLastTouch.call( this, eventData );\r\n        } else if ( eventType & ( INPUT_END | INPUT_CANCEL ) ) {\r\n            setLastTouch.call( this, eventData );\r\n        }\r\n    }\r\n\r\n    function setLastTouch( eventData ) {\r\n        var touch = eventData.changedPointers[ 0 ];\r\n\r\n        if ( touch.identifier === this.primaryTouch ) {\r\n            var lastTouch = { x: touch.clientX, y: touch.clientY };\r\n            this.lastTouches.push( lastTouch );\r\n            var lts = this.lastTouches;\r\n            var removeLastTouch = function () {\r\n                var i = lts.indexOf( lastTouch );\r\n                if ( i > -1 ) {\r\n                    lts.splice( i, 1 );\r\n                }\r\n            };\r\n            setTimeout( removeLastTouch, DEDUP_TIMEOUT );\r\n        }\r\n    }\r\n\r\n    function isSyntheticEvent( eventData ) {\r\n        var x = eventData.srcEvent.clientX,\r\n            y = eventData.srcEvent.clientY;\r\n        for ( var i = 0; i < this.lastTouches.length; i++ ) {\r\n            var t = this.lastTouches[ i ];\r\n            var dx = Math.abs( x - t.x ),\r\n                dy = Math.abs( y - t.y );\r\n            if ( dx <= DEDUP_DISTANCE && dy <= DEDUP_DISTANCE ) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    var PREFIXED_TOUCH_ACTION = prefixed( TEST_ELEMENT.style, 'touchAction' );\r\n    var NATIVE_TOUCH_ACTION = PREFIXED_TOUCH_ACTION !== undefined;\r\n\r\n    // magical touchAction value\r\n    var TOUCH_ACTION_COMPUTE = 'compute';\r\n    var TOUCH_ACTION_AUTO = 'auto';\r\n    var TOUCH_ACTION_MANIPULATION = 'manipulation'; // not implemented\r\n    var TOUCH_ACTION_NONE = 'none';\r\n    var TOUCH_ACTION_PAN_X = 'pan-x';\r\n    var TOUCH_ACTION_PAN_Y = 'pan-y';\r\n    var TOUCH_ACTION_MAP = getTouchActionProps();\r\n\r\n    /**\r\n     * Touch Action\r\n     * sets the touchAction property or uses the js alternative\r\n     * @param {Manager} manager\r\n     * @param {String} value\r\n     * @constructor\r\n     */\r\n    function TouchAction( manager, value ) {\r\n        this.manager = manager;\r\n        this.set( value );\r\n    }\r\n\r\n    TouchAction.prototype = {\r\n        /**\r\n         * set the touchAction value on the element or enable the polyfill\r\n         * @param {String} value\r\n         */\r\n        set: function ( value ) {\r\n            // find out the touch-action by the event handlers\r\n            if ( value == TOUCH_ACTION_COMPUTE ) {\r\n                value = this.compute();\r\n            }\r\n\r\n            if ( NATIVE_TOUCH_ACTION && this.manager.element.style && TOUCH_ACTION_MAP[ value ] ) {\r\n                this.manager.element.style[ PREFIXED_TOUCH_ACTION ] = value;\r\n            }\r\n            this.actions = value.toLowerCase().trim();\r\n        },\r\n\r\n        /**\r\n         * just re-set the touchAction value\r\n         */\r\n        update: function () {\r\n            this.set( this.manager.options.touchAction );\r\n        },\r\n\r\n        /**\r\n         * compute the value for the touchAction property based on the recognizer's settings\r\n         * @returns {String} value\r\n         */\r\n        compute: function () {\r\n            var actions = [];\r\n            each( this.manager.recognizers, function ( recognizer ) {\r\n                if ( boolOrFn( recognizer.options.enable, [ recognizer ] ) ) {\r\n                    actions = actions.concat( recognizer.getTouchAction() );\r\n                }\r\n            } );\r\n            return cleanTouchActions( actions.join( ' ' ) );\r\n        },\r\n\r\n        /**\r\n         * this method is called on each input cycle and provides the preventing of the browser behavior\r\n         * @param {Object} input\r\n         */\r\n        preventDefaults: function ( input ) {\r\n            var srcEvent = input.srcEvent;\r\n            var direction = input.offsetDirection;\r\n\r\n            // if the touch action did prevented once this session\r\n            if ( this.manager.session.prevented ) {\r\n                srcEvent.preventDefault();\r\n                return;\r\n            }\r\n\r\n            var actions = this.actions;\r\n            var hasNone = inStr( actions, TOUCH_ACTION_NONE ) && !TOUCH_ACTION_MAP[ TOUCH_ACTION_NONE ];\r\n            var hasPanY = inStr( actions, TOUCH_ACTION_PAN_Y ) && !TOUCH_ACTION_MAP[ TOUCH_ACTION_PAN_Y ];\r\n            var hasPanX = inStr( actions, TOUCH_ACTION_PAN_X ) && !TOUCH_ACTION_MAP[ TOUCH_ACTION_PAN_X ];\r\n\r\n            if ( hasNone ) {\r\n                //do not prevent defaults if this is a tap gesture\r\n\r\n                var isTapPointer = input.pointers.length === 1;\r\n                var isTapMovement = input.distance < 2;\r\n                var isTapTouchTime = input.deltaTime < 250;\r\n\r\n                if ( isTapPointer && isTapMovement && isTapTouchTime ) {\r\n                    return;\r\n                }\r\n            }\r\n\r\n            if ( hasPanX && hasPanY ) {\r\n                // `pan-x pan-y` means browser handles all scrolling/panning, do not prevent\r\n                return;\r\n            }\r\n\r\n            if ( hasNone ||\r\n                ( hasPanY && direction & DIRECTION_HORIZONTAL ) ||\r\n                ( hasPanX && direction & DIRECTION_VERTICAL ) ) {\r\n                return this.preventSrc( srcEvent );\r\n            }\r\n        },\r\n\r\n        /**\r\n         * call preventDefault to prevent the browser's default behavior (scrolling in most cases)\r\n         * @param {Object} srcEvent\r\n         */\r\n        preventSrc: function ( srcEvent ) {\r\n            this.manager.session.prevented = true;\r\n            srcEvent.preventDefault();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * when the touchActions are collected they are not a valid value, so we need to clean things up. *\r\n     * @param {String} actions\r\n     * @returns {*}\r\n     */\r\n    function cleanTouchActions( actions ) {\r\n        // none\r\n        if ( inStr( actions, TOUCH_ACTION_NONE ) ) {\r\n            return TOUCH_ACTION_NONE;\r\n        }\r\n\r\n        var hasPanX = inStr( actions, TOUCH_ACTION_PAN_X );\r\n        var hasPanY = inStr( actions, TOUCH_ACTION_PAN_Y );\r\n\r\n        // if both pan-x and pan-y are set (different recognizers\r\n        // for different directions, e.g. horizontal pan but vertical swipe?)\r\n        // we need none (as otherwise with pan-x pan-y combined none of these\r\n        // recognizers will work, since the browser would handle all panning\r\n        if ( hasPanX && hasPanY ) {\r\n            return TOUCH_ACTION_NONE;\r\n        }\r\n\r\n        // pan-x OR pan-y\r\n        if ( hasPanX || hasPanY ) {\r\n            return hasPanX ? TOUCH_ACTION_PAN_X : TOUCH_ACTION_PAN_Y;\r\n        }\r\n\r\n        // manipulation\r\n        if ( inStr( actions, TOUCH_ACTION_MANIPULATION ) ) {\r\n            return TOUCH_ACTION_MANIPULATION;\r\n        }\r\n\r\n        return TOUCH_ACTION_AUTO;\r\n    }\r\n\r\n    function getTouchActionProps() {\r\n        if ( !NATIVE_TOUCH_ACTION ) {\r\n            return false;\r\n        }\r\n        var touchMap = {};\r\n        var cssSupports = window.CSS && window.CSS.supports;\r\n        [ 'auto', 'manipulation', 'pan-y', 'pan-x', 'pan-x pan-y', 'none' ].forEach( function ( val ) {\r\n\r\n            // If css.supports is not supported but there is native touch-action assume it supports\r\n            // all values. This is the case for IE 10 and 11.\r\n            touchMap[ val ] = cssSupports ? window.CSS.supports( 'touch-action', val ) : true;\r\n        } );\r\n        return touchMap;\r\n    }\r\n\r\n    /**\r\n     * Recognizer flow explained; *\r\n     * All recognizers have the initial state of POSSIBLE when a input session starts.\r\n     * The definition of a input session is from the first input until the last input, with all it's movement in it. *\r\n     * Example session for mouse-input: mousedown -> mousemove -> mouseup\r\n     *\r\n     * On each recognizing cycle (see Manager.recognize) the .recognize() method is executed\r\n     * which determines with state it should be.\r\n     *\r\n     * If the recognizer has the state FAILED, CANCELLED or RECOGNIZED (equals ENDED), it is reset to\r\n     * POSSIBLE to give it another change on the next cycle.\r\n     *\r\n     *               Possible\r\n     *                  |\r\n     *            +-----+---------------+\r\n     *            |                     |\r\n     *      +-----+-----+               |\r\n     *      |           |               |\r\n     *   Failed      Cancelled          |\r\n     *                          +-------+------+\r\n     *                          |              |\r\n     *                      Recognized       Began\r\n     *                                         |\r\n     *                                      Changed\r\n     *                                         |\r\n     *                                  Ended/Recognized\r\n     */\r\n    var STATE_POSSIBLE = 1;\r\n    var STATE_BEGAN = 2;\r\n    var STATE_CHANGED = 4;\r\n    var STATE_ENDED = 8;\r\n    var STATE_RECOGNIZED = STATE_ENDED;\r\n    var STATE_CANCELLED = 16;\r\n    var STATE_FAILED = 32;\r\n\r\n    /**\r\n     * Recognizer\r\n     * Every recognizer needs to extend from this class.\r\n     * @constructor\r\n     * @param {Object} options\r\n     */\r\n    function Recognizer( options ) {\r\n        this.options = assign( {}, this.defaults, options || {} );\r\n\r\n        this.id = uniqueId();\r\n\r\n        this.manager = null;\r\n\r\n        // default is enable true\r\n        this.options.enable = ifUndefined( this.options.enable, true );\r\n\r\n        this.state = STATE_POSSIBLE;\r\n\r\n        this.simultaneous = {};\r\n        this.requireFail = [];\r\n    }\r\n\r\n    Recognizer.prototype = {\r\n        /**\r\n         * @virtual\r\n         * @type {Object}\r\n         */\r\n        defaults: {},\r\n\r\n        /**\r\n         * set options\r\n         * @param {Object} options\r\n         * @return {Recognizer}\r\n         */\r\n        set: function ( options ) {\r\n            assign( this.options, options );\r\n\r\n            // also update the touchAction, in case something changed about the directions/enabled state\r\n            this.manager && this.manager.touchAction.update();\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * recognize simultaneous with an other recognizer.\r\n         * @param {Recognizer} otherRecognizer\r\n         * @returns {Recognizer} this\r\n         */\r\n        recognizeWith: function ( otherRecognizer ) {\r\n            if ( invokeArrayArg( otherRecognizer, 'recognizeWith', this ) ) {\r\n                return this;\r\n            }\r\n\r\n            var simultaneous = this.simultaneous;\r\n            otherRecognizer = getRecognizerByNameIfManager( otherRecognizer, this );\r\n            if ( !simultaneous[ otherRecognizer.id ] ) {\r\n                simultaneous[ otherRecognizer.id ] = otherRecognizer;\r\n                otherRecognizer.recognizeWith( this );\r\n            }\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * drop the simultaneous link. it doesnt remove the link on the other recognizer.\r\n         * @param {Recognizer} otherRecognizer\r\n         * @returns {Recognizer} this\r\n         */\r\n        dropRecognizeWith: function ( otherRecognizer ) {\r\n            if ( invokeArrayArg( otherRecognizer, 'dropRecognizeWith', this ) ) {\r\n                return this;\r\n            }\r\n\r\n            otherRecognizer = getRecognizerByNameIfManager( otherRecognizer, this );\r\n            delete this.simultaneous[ otherRecognizer.id ];\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * recognizer can only run when an other is failing\r\n         * @param {Recognizer} otherRecognizer\r\n         * @returns {Recognizer} this\r\n         */\r\n        requireFailure: function ( otherRecognizer ) {\r\n            if ( invokeArrayArg( otherRecognizer, 'requireFailure', this ) ) {\r\n                return this;\r\n            }\r\n\r\n            var requireFail = this.requireFail;\r\n            otherRecognizer = getRecognizerByNameIfManager( otherRecognizer, this );\r\n            if ( inArray( requireFail, otherRecognizer ) === -1 ) {\r\n                requireFail.push( otherRecognizer );\r\n                otherRecognizer.requireFailure( this );\r\n            }\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * drop the requireFailure link. it does not remove the link on the other recognizer.\r\n         * @param {Recognizer} otherRecognizer\r\n         * @returns {Recognizer} this\r\n         */\r\n        dropRequireFailure: function ( otherRecognizer ) {\r\n            if ( invokeArrayArg( otherRecognizer, 'dropRequireFailure', this ) ) {\r\n                return this;\r\n            }\r\n\r\n            otherRecognizer = getRecognizerByNameIfManager( otherRecognizer, this );\r\n            var index = inArray( this.requireFail, otherRecognizer );\r\n            if ( index > -1 ) {\r\n                this.requireFail.splice( index, 1 );\r\n            }\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * has require failures boolean\r\n         * @returns {boolean}\r\n         */\r\n        hasRequireFailures: function () {\r\n            return this.requireFail.length > 0;\r\n        },\r\n\r\n        /**\r\n         * if the recognizer can recognize simultaneous with an other recognizer\r\n         * @param {Recognizer} otherRecognizer\r\n         * @returns {Boolean}\r\n         */\r\n        canRecognizeWith: function ( otherRecognizer ) {\r\n            return !!this.simultaneous[ otherRecognizer.id ];\r\n        },\r\n\r\n        /**\r\n         * You should use `tryEmit` instead of `emit` directly to check\r\n         * that all the needed recognizers has failed before emitting.\r\n         * @param {Object} input\r\n         */\r\n        emit: function ( input ) {\r\n            var self = this;\r\n            var state = this.state;\r\n\r\n            function emit( event ) {\r\n                self.manager.emit( event, input );\r\n            }\r\n\r\n            // 'panstart' and 'panmove'\r\n            if ( state < STATE_ENDED ) {\r\n                emit( self.options.event + stateStr( state ) );\r\n            }\r\n\r\n            emit( self.options.event ); // simple 'eventName' events\r\n\r\n            if ( input.additionalEvent ) { // additional event(panleft, panright, pinchin, pinchout...)\r\n                emit( input.additionalEvent );\r\n            }\r\n\r\n            // panend and pancancel\r\n            if ( state >= STATE_ENDED ) {\r\n                emit( self.options.event + stateStr( state ) );\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Check that all the require failure recognizers has failed,\r\n         * if true, it emits a gesture event,\r\n         * otherwise, setup the state to FAILED.\r\n         * @param {Object} input\r\n         */\r\n        tryEmit: function ( input ) {\r\n            if ( this.canEmit() ) {\r\n                return this.emit( input );\r\n            }\r\n            // it's failing anyway\r\n            this.state = STATE_FAILED;\r\n        },\r\n\r\n        /**\r\n         * can we emit?\r\n         * @returns {boolean}\r\n         */\r\n        canEmit: function () {\r\n            var i = 0;\r\n            while ( i < this.requireFail.length ) {\r\n                if ( !( this.requireFail[ i ].state & ( STATE_FAILED | STATE_POSSIBLE ) ) ) {\r\n                    return false;\r\n                }\r\n                i++;\r\n            }\r\n            return true;\r\n        },\r\n\r\n        /**\r\n         * update the recognizer\r\n         * @param {Object} inputData\r\n         */\r\n        recognize: function ( inputData ) {\r\n            // make a new copy of the inputData\r\n            // so we can change the inputData without messing up the other recognizers\r\n            var inputDataClone = assign( {}, inputData );\r\n\r\n            // is is enabled and allow recognizing?\r\n            if ( !boolOrFn( this.options.enable, [ this, inputDataClone ] ) ) {\r\n                this.reset();\r\n                this.state = STATE_FAILED;\r\n                return;\r\n            }\r\n\r\n            // reset when we've reached the end\r\n            if ( this.state & ( STATE_RECOGNIZED | STATE_CANCELLED | STATE_FAILED ) ) {\r\n                this.state = STATE_POSSIBLE;\r\n            }\r\n\r\n            this.state = this.process( inputDataClone );\r\n\r\n            // the recognizer has recognized a gesture\r\n            // so trigger an event\r\n            if ( this.state & ( STATE_BEGAN | STATE_CHANGED | STATE_ENDED | STATE_CANCELLED ) ) {\r\n                this.tryEmit( inputDataClone );\r\n            }\r\n        },\r\n\r\n        /**\r\n         * return the state of the recognizer\r\n         * the actual recognizing happens in this method\r\n         * @virtual\r\n         * @param {Object} inputData\r\n         * @returns {Const} STATE\r\n         */\r\n        process: function ( inputData ) {}, // jshint ignore:line\r\n\r\n        /**\r\n         * return the preferred touch-action\r\n         * @virtual\r\n         * @returns {Array}\r\n         */\r\n        getTouchAction: function () {},\r\n\r\n        /**\r\n         * called when the gesture isn't allowed to recognize\r\n         * like when another is being recognized or it is disabled\r\n         * @virtual\r\n         */\r\n        reset: function () {}\r\n    };\r\n\r\n    /**\r\n     * get a usable string, used as event postfix\r\n     * @param {Const} state\r\n     * @returns {String} state\r\n     */\r\n    function stateStr( state ) {\r\n        if ( state & STATE_CANCELLED ) {\r\n            return 'cancel';\r\n        } else if ( state & STATE_ENDED ) {\r\n            return 'end';\r\n        } else if ( state & STATE_CHANGED ) {\r\n            return 'move';\r\n        } else if ( state & STATE_BEGAN ) {\r\n            return 'start';\r\n        }\r\n        return '';\r\n    }\r\n\r\n    /**\r\n     * direction cons to string\r\n     * @param {Const} direction\r\n     * @returns {String}\r\n     */\r\n    function directionStr( direction ) {\r\n        if ( direction == DIRECTION_DOWN ) {\r\n            return 'down';\r\n        } else if ( direction == DIRECTION_UP ) {\r\n            return 'up';\r\n        } else if ( direction == DIRECTION_LEFT ) {\r\n            return 'left';\r\n        } else if ( direction == DIRECTION_RIGHT ) {\r\n            return 'right';\r\n        }\r\n        return '';\r\n    }\r\n\r\n    /**\r\n     * get a recognizer by name if it is bound to a manager\r\n     * @param {Recognizer|String} otherRecognizer\r\n     * @param {Recognizer} recognizer\r\n     * @returns {Recognizer}\r\n     */\r\n    function getRecognizerByNameIfManager( otherRecognizer, recognizer ) {\r\n        var manager = recognizer.manager;\r\n        if ( manager ) {\r\n            return manager.get( otherRecognizer );\r\n        }\r\n        return otherRecognizer;\r\n    }\r\n\r\n    /**\r\n     * This recognizer is just used as a base for the simple attribute recognizers.\r\n     * @constructor\r\n     * @extends Recognizer\r\n     */\r\n    function AttrRecognizer() {\r\n        Recognizer.apply( this, arguments );\r\n    }\r\n\r\n    inherit( AttrRecognizer, Recognizer, {\r\n        /**\r\n         * @namespace\r\n         * @memberof AttrRecognizer\r\n         */\r\n        defaults: {\r\n            /**\r\n             * @type {Number}\r\n             * @default 1\r\n             */\r\n            pointers: 1\r\n        },\r\n\r\n        /**\r\n         * Used to check if it the recognizer receives valid input, like input.distance > 10.\r\n         * @memberof AttrRecognizer\r\n         * @param {Object} input\r\n         * @returns {Boolean} recognized\r\n         */\r\n        attrTest: function ( input ) {\r\n            var optionPointers = this.options.pointers;\r\n            return optionPointers === 0 || input.pointers.length === optionPointers;\r\n        },\r\n\r\n        /**\r\n         * Process the input and return the state for the recognizer\r\n         * @memberof AttrRecognizer\r\n         * @param {Object} input\r\n         * @returns {*} State\r\n         */\r\n        process: function ( input ) {\r\n            var state = this.state;\r\n            var eventType = input.eventType;\r\n\r\n            var isRecognized = state & ( STATE_BEGAN | STATE_CHANGED );\r\n            var isValid = this.attrTest( input );\r\n\r\n            // on cancel input and we've recognized before, return STATE_CANCELLED\r\n            if ( isRecognized && ( eventType & INPUT_CANCEL || !isValid ) ) {\r\n                return state | STATE_CANCELLED;\r\n            } else if ( isRecognized || isValid ) {\r\n                if ( eventType & INPUT_END ) {\r\n                    return state | STATE_ENDED;\r\n                } else if ( !( state & STATE_BEGAN ) ) {\r\n                    return STATE_BEGAN;\r\n                }\r\n                return state | STATE_CHANGED;\r\n            }\r\n            return STATE_FAILED;\r\n        }\r\n    } );\r\n\r\n    /**\r\n     * Pan\r\n     * Recognized when the pointer is down and moved in the allowed direction.\r\n     * @constructor\r\n     * @extends AttrRecognizer\r\n     */\r\n    function PanRecognizer() {\r\n        AttrRecognizer.apply( this, arguments );\r\n\r\n        this.pX = null;\r\n        this.pY = null;\r\n    }\r\n\r\n    inherit( PanRecognizer, AttrRecognizer, {\r\n        /**\r\n         * @namespace\r\n         * @memberof PanRecognizer\r\n         */\r\n        defaults: {\r\n            event: 'pan',\r\n            threshold: 10,\r\n            pointers: 1,\r\n            direction: DIRECTION_ALL\r\n        },\r\n\r\n        getTouchAction: function () {\r\n            var direction = this.options.direction;\r\n            var actions = [];\r\n            if ( direction & DIRECTION_HORIZONTAL ) {\r\n                actions.push( TOUCH_ACTION_PAN_Y );\r\n            }\r\n            if ( direction & DIRECTION_VERTICAL ) {\r\n                actions.push( TOUCH_ACTION_PAN_X );\r\n            }\r\n            return actions;\r\n        },\r\n\r\n        directionTest: function ( input ) {\r\n            var options = this.options;\r\n            var hasMoved = true;\r\n            var distance = input.distance;\r\n            var direction = input.direction;\r\n            var x = input.deltaX;\r\n            var y = input.deltaY;\r\n\r\n            // lock to axis?\r\n            if ( !( direction & options.direction ) ) {\r\n                if ( options.direction & DIRECTION_HORIZONTAL ) {\r\n                    direction = ( x === 0 ) ? DIRECTION_NONE : ( x < 0 ) ? DIRECTION_LEFT : DIRECTION_RIGHT;\r\n                    hasMoved = x != this.pX;\r\n                    distance = Math.abs( input.deltaX );\r\n                } else {\r\n                    direction = ( y === 0 ) ? DIRECTION_NONE : ( y < 0 ) ? DIRECTION_UP : DIRECTION_DOWN;\r\n                    hasMoved = y != this.pY;\r\n                    distance = Math.abs( input.deltaY );\r\n                }\r\n            }\r\n            input.direction = direction;\r\n            return hasMoved && distance > options.threshold && direction & options.direction;\r\n        },\r\n\r\n        attrTest: function ( input ) {\r\n            return AttrRecognizer.prototype.attrTest.call( this, input ) &&\r\n                ( this.state & STATE_BEGAN || ( !( this.state & STATE_BEGAN ) && this.directionTest( input ) ) );\r\n        },\r\n\r\n        emit: function ( input ) {\r\n\r\n            this.pX = input.deltaX;\r\n            this.pY = input.deltaY;\r\n\r\n            var direction = directionStr( input.direction );\r\n\r\n            if ( direction ) {\r\n                input.additionalEvent = this.options.event + direction;\r\n            }\r\n            this._super.emit.call( this, input );\r\n        }\r\n    } );\r\n\r\n    /**\r\n     * Pinch\r\n     * Recognized when two or more pointers are moving toward (zoom-in) or away from each other (zoom-out).\r\n     * @constructor\r\n     * @extends AttrRecognizer\r\n     */\r\n    function PinchRecognizer() {\r\n        AttrRecognizer.apply( this, arguments );\r\n    }\r\n\r\n    inherit( PinchRecognizer, AttrRecognizer, {\r\n        /**\r\n         * @namespace\r\n         * @memberof PinchRecognizer\r\n         */\r\n        defaults: {\r\n            event: 'pinch',\r\n            threshold: 0,\r\n            pointers: 2\r\n        },\r\n\r\n        getTouchAction: function () {\r\n            return [ TOUCH_ACTION_NONE ];\r\n        },\r\n\r\n        attrTest: function ( input ) {\r\n            return this._super.attrTest.call( this, input ) &&\r\n                ( Math.abs( input.scale - 1 ) > this.options.threshold || this.state & STATE_BEGAN );\r\n        },\r\n\r\n        emit: function ( input ) {\r\n            if ( input.scale !== 1 ) {\r\n                var inOut = input.scale < 1 ? 'in' : 'out';\r\n                input.additionalEvent = this.options.event + inOut;\r\n            }\r\n            this._super.emit.call( this, input );\r\n        }\r\n    } );\r\n\r\n    /**\r\n     * Press\r\n     * Recognized when the pointer is down for x ms without any movement.\r\n     * @constructor\r\n     * @extends Recognizer\r\n     */\r\n    function PressRecognizer() {\r\n        Recognizer.apply( this, arguments );\r\n\r\n        this._timer = null;\r\n        this._input = null;\r\n    }\r\n\r\n    inherit( PressRecognizer, Recognizer, {\r\n        /**\r\n         * @namespace\r\n         * @memberof PressRecognizer\r\n         */\r\n        defaults: {\r\n            event: 'press',\r\n            pointers: 1,\r\n            time: 251, // minimal time of the pointer to be pressed\r\n            threshold: 9 // a minimal movement is ok, but keep it low\r\n        },\r\n\r\n        getTouchAction: function () {\r\n            return [ TOUCH_ACTION_AUTO ];\r\n        },\r\n\r\n        process: function ( input ) {\r\n            var options = this.options;\r\n            var validPointers = input.pointers.length === options.pointers;\r\n            var validMovement = input.distance < options.threshold;\r\n            var validTime = input.deltaTime > options.time;\r\n\r\n            this._input = input;\r\n\r\n            // we only allow little movement\r\n            // and we've reached an end event, so a tap is possible\r\n            if ( !validMovement || !validPointers || ( input.eventType & ( INPUT_END | INPUT_CANCEL ) && !validTime ) ) {\r\n                this.reset();\r\n            } else if ( input.eventType & INPUT_START ) {\r\n                this.reset();\r\n                this._timer = setTimeoutContext( function () {\r\n                    this.state = STATE_RECOGNIZED;\r\n                    this.tryEmit();\r\n                }, options.time, this );\r\n            } else if ( input.eventType & INPUT_END ) {\r\n                return STATE_RECOGNIZED;\r\n            }\r\n            return STATE_FAILED;\r\n        },\r\n\r\n        reset: function () {\r\n            clearTimeout( this._timer );\r\n        },\r\n\r\n        emit: function ( input ) {\r\n            if ( this.state !== STATE_RECOGNIZED ) {\r\n                return;\r\n            }\r\n\r\n            if ( input && ( input.eventType & INPUT_END ) ) {\r\n                this.manager.emit( this.options.event + 'up', input );\r\n            } else {\r\n                this._input.timeStamp = now();\r\n                this.manager.emit( this.options.event, this._input );\r\n            }\r\n        }\r\n    } );\r\n\r\n    /**\r\n     * Rotate\r\n     * Recognized when two or more pointer are moving in a circular motion.\r\n     * @constructor\r\n     * @extends AttrRecognizer\r\n     */\r\n    function RotateRecognizer() {\r\n        AttrRecognizer.apply( this, arguments );\r\n    }\r\n\r\n    inherit( RotateRecognizer, AttrRecognizer, {\r\n        /**\r\n         * @namespace\r\n         * @memberof RotateRecognizer\r\n         */\r\n        defaults: {\r\n            event: 'rotate',\r\n            threshold: 0,\r\n            pointers: 2\r\n        },\r\n\r\n        getTouchAction: function () {\r\n            return [ TOUCH_ACTION_NONE ];\r\n        },\r\n\r\n        attrTest: function ( input ) {\r\n            return this._super.attrTest.call( this, input ) &&\r\n                ( Math.abs( input.rotation ) > this.options.threshold || this.state & STATE_BEGAN );\r\n        }\r\n    } );\r\n\r\n    /**\r\n     * Swipe\r\n     * Recognized when the pointer is moving fast (velocity), with enough distance in the allowed direction.\r\n     * @constructor\r\n     * @extends AttrRecognizer\r\n     */\r\n    function SwipeRecognizer() {\r\n        AttrRecognizer.apply( this, arguments );\r\n    }\r\n\r\n    inherit( SwipeRecognizer, AttrRecognizer, {\r\n        /**\r\n         * @namespace\r\n         * @memberof SwipeRecognizer\r\n         */\r\n        defaults: {\r\n            event: 'swipe',\r\n            threshold: 10,\r\n            velocity: 0.3,\r\n            direction: DIRECTION_HORIZONTAL | DIRECTION_VERTICAL,\r\n            pointers: 1\r\n        },\r\n\r\n        getTouchAction: function () {\r\n            return PanRecognizer.prototype.getTouchAction.call( this );\r\n        },\r\n\r\n        attrTest: function ( input ) {\r\n            var direction = this.options.direction;\r\n            var velocity;\r\n\r\n            if ( direction & ( DIRECTION_HORIZONTAL | DIRECTION_VERTICAL ) ) {\r\n                velocity = input.overallVelocity;\r\n            } else if ( direction & DIRECTION_HORIZONTAL ) {\r\n                velocity = input.overallVelocityX;\r\n            } else if ( direction & DIRECTION_VERTICAL ) {\r\n                velocity = input.overallVelocityY;\r\n            }\r\n\r\n            return this._super.attrTest.call( this, input ) &&\r\n                direction & input.offsetDirection &&\r\n                input.distance > this.options.threshold &&\r\n                input.maxPointers == this.options.pointers &&\r\n                abs( velocity ) > this.options.velocity && input.eventType & INPUT_END;\r\n        },\r\n\r\n        emit: function ( input ) {\r\n            var direction = directionStr( input.offsetDirection );\r\n            if ( direction ) {\r\n                this.manager.emit( this.options.event + direction, input );\r\n            }\r\n\r\n            this.manager.emit( this.options.event, input );\r\n        }\r\n    } );\r\n\r\n    /**\r\n     * A tap is ecognized when the pointer is doing a small tap/click. Multiple taps are recognized if they occur\r\n     * between the given interval and position. The delay option can be used to recognize multi-taps without firing\r\n     * a single tap.\r\n     *\r\n     * The eventData from the emitted event contains the property `tapCount`, which contains the amount of\r\n     * multi-taps being recognized.\r\n     * @constructor\r\n     * @extends Recognizer\r\n     */\r\n    function TapRecognizer() {\r\n        Recognizer.apply( this, arguments );\r\n\r\n        // previous time and center,\r\n        // used for tap counting\r\n        this.pTime = false;\r\n        this.pCenter = false;\r\n\r\n        this._timer = null;\r\n        this._input = null;\r\n        this.count = 0;\r\n    }\r\n\r\n    inherit( TapRecognizer, Recognizer, {\r\n        /**\r\n         * @namespace\r\n         * @memberof PinchRecognizer\r\n         */\r\n        defaults: {\r\n            event: 'tap',\r\n            pointers: 1,\r\n            taps: 1,\r\n            interval: 300, // max time between the multi-tap taps\r\n            time: 250, // max time of the pointer to be down (like finger on the screen)\r\n            threshold: 9, // a minimal movement is ok, but keep it low\r\n            posThreshold: 10 // a multi-tap can be a bit off the initial position\r\n        },\r\n\r\n        getTouchAction: function () {\r\n            return [ TOUCH_ACTION_MANIPULATION ];\r\n        },\r\n\r\n        process: function ( input ) {\r\n            var options = this.options;\r\n\r\n            var validPointers = input.pointers.length === options.pointers;\r\n            var validMovement = input.distance < options.threshold;\r\n            var validTouchTime = input.deltaTime < options.time;\r\n\r\n            this.reset();\r\n\r\n            if ( ( input.eventType & INPUT_START ) && ( this.count === 0 ) ) {\r\n                return this.failTimeout();\r\n            }\r\n\r\n            // we only allow little movement\r\n            // and we've reached an end event, so a tap is possible\r\n            if ( validMovement && validTouchTime && validPointers ) {\r\n                if ( input.eventType != INPUT_END ) {\r\n                    return this.failTimeout();\r\n                }\r\n\r\n                var validInterval = this.pTime ? ( input.timeStamp - this.pTime < options.interval ) : true;\r\n                var validMultiTap = !this.pCenter || getDistance( this.pCenter, input.center ) < options.posThreshold;\r\n\r\n                this.pTime = input.timeStamp;\r\n                this.pCenter = input.center;\r\n\r\n                if ( !validMultiTap || !validInterval ) {\r\n                    this.count = 1;\r\n                } else {\r\n                    this.count += 1;\r\n                }\r\n\r\n                this._input = input;\r\n\r\n                // if tap count matches we have recognized it,\r\n                // else it has began recognizing...\r\n                var tapCount = this.count % options.taps;\r\n                if ( tapCount === 0 ) {\r\n                    // no failing requirements, immediately trigger the tap event\r\n                    // or wait as long as the multitap interval to trigger\r\n                    if ( !this.hasRequireFailures() ) {\r\n                        return STATE_RECOGNIZED;\r\n                    } else {\r\n                        this._timer = setTimeoutContext( function () {\r\n                            this.state = STATE_RECOGNIZED;\r\n                            this.tryEmit();\r\n                        }, options.interval, this );\r\n                        return STATE_BEGAN;\r\n                    }\r\n                }\r\n            }\r\n            return STATE_FAILED;\r\n        },\r\n\r\n        failTimeout: function () {\r\n            this._timer = setTimeoutContext( function () {\r\n                this.state = STATE_FAILED;\r\n            }, this.options.interval, this );\r\n            return STATE_FAILED;\r\n        },\r\n\r\n        reset: function () {\r\n            clearTimeout( this._timer );\r\n        },\r\n\r\n        emit: function () {\r\n            if ( this.state == STATE_RECOGNIZED ) {\r\n                this._input.tapCount = this.count;\r\n                this.manager.emit( this.options.event, this._input );\r\n            }\r\n        }\r\n    } );\r\n\r\n    /**\r\n     * Simple way to create a manager with a default set of recognizers.\r\n     * @param {HTMLElement} element\r\n     * @param {Object} [options]\r\n     * @constructor\r\n     */\r\n    function Hammer( element, options ) {\r\n        options = options || {};\r\n        options.recognizers = ifUndefined( options.recognizers, Hammer.defaults.preset );\r\n        return new Manager( element, options );\r\n    }\r\n\r\n    /**\r\n     * @const {string}\r\n     */\r\n    Hammer.VERSION = '2.0.8';\r\n\r\n    /**\r\n     * default settings\r\n     * @namespace\r\n     */\r\n    Hammer.defaults = {\r\n        /**\r\n         * set if DOM events are being triggered.\r\n         * But this is slower and unused by simple implementations, so disabled by default.\r\n         * @type {Boolean}\r\n         * @default false\r\n         */\r\n        domEvents: false,\r\n\r\n        /**\r\n         * The value for the touchAction property/fallback.\r\n         * When set to `compute` it will magically set the correct value based on the added recognizers.\r\n         * @type {String}\r\n         * @default compute\r\n         */\r\n        touchAction: TOUCH_ACTION_COMPUTE,\r\n\r\n        /**\r\n         * @type {Boolean}\r\n         * @default true\r\n         */\r\n        enable: true,\r\n\r\n        /**\r\n         * EXPERIMENTAL FEATURE -- can be removed/changed\r\n         * Change the parent input target element.\r\n         * If Null, then it is being set the to main element.\r\n         * @type {Null|EventTarget}\r\n         * @default null\r\n         */\r\n        inputTarget: null,\r\n\r\n        /**\r\n         * force an input class\r\n         * @type {Null|Function}\r\n         * @default null\r\n         */\r\n        inputClass: null,\r\n\r\n        /**\r\n         * Default recognizer setup when calling `Hammer()`\r\n         * When creating a new Manager these will be skipped.\r\n         * @type {Array}\r\n         */\r\n        preset: [\r\n            // RecognizerClass, options, [recognizeWith, ...], [requireFailure, ...]\r\n            [ RotateRecognizer, { enable: false } ],\r\n            [ PinchRecognizer, { enable: false },\r\n                [ 'rotate' ]\r\n            ],\r\n            [ SwipeRecognizer, { direction: DIRECTION_HORIZONTAL } ],\r\n            [ PanRecognizer, { direction: DIRECTION_HORIZONTAL },\r\n                [ 'swipe' ]\r\n            ],\r\n            [ TapRecognizer ],\r\n            [ TapRecognizer, { event: 'doubletap', taps: 2 },\r\n                [ 'tap' ]\r\n            ],\r\n            [ PressRecognizer ]\r\n        ],\r\n\r\n        /**\r\n         * Some CSS properties can be used to improve the working of Hammer.\r\n         * Add them to this method and they will be set when creating a new Manager.\r\n         * @namespace\r\n         */\r\n        cssProps: {\r\n            /**\r\n             * Disables text selection to improve the dragging gesture. Mainly for desktop browsers.\r\n             * @type {String}\r\n             * @default 'none'\r\n             */\r\n            userSelect: 'none',\r\n\r\n            /**\r\n             * Disable the Windows Phone grippers when pressing an element.\r\n             * @type {String}\r\n             * @default 'none'\r\n             */\r\n            touchSelect: 'none',\r\n\r\n            /**\r\n             * Disables the default callout shown when you touch and hold a touch target.\r\n             * On iOS, when you touch and hold a touch target such as a link, Safari displays\r\n             * a callout containing information about the link. This property allows you to disable that callout.\r\n             * @type {String}\r\n             * @default 'none'\r\n             */\r\n            touchCallout: 'none',\r\n\r\n            /**\r\n             * Specifies whether zooming is enabled. Used by IE10>\r\n             * @type {String}\r\n             * @default 'none'\r\n             */\r\n            contentZooming: 'none',\r\n\r\n            /**\r\n             * Specifies that an entire element should be draggable instead of its contents. Mainly for desktop browsers.\r\n             * @type {String}\r\n             * @default 'none'\r\n             */\r\n            userDrag: 'none',\r\n\r\n            /**\r\n             * Overrides the highlight color shown when the user taps a link or a JavaScript\r\n             * clickable element in iOS. This property obeys the alpha value, if specified.\r\n             * @type {String}\r\n             * @default 'rgba(0,0,0,0)'\r\n             */\r\n            tapHighlightColor: 'rgba(0,0,0,0)'\r\n        }\r\n    };\r\n\r\n    var STOP = 1;\r\n    var FORCED_STOP = 2;\r\n\r\n    /**\r\n     * Manager\r\n     * @param {HTMLElement} element\r\n     * @param {Object} [options]\r\n     * @constructor\r\n     */\r\n    function Manager( element, options ) {\r\n        this.options = assign( {}, Hammer.defaults, options || {} );\r\n\r\n        this.options.inputTarget = this.options.inputTarget || element;\r\n\r\n        this.handlers = {};\r\n        this.session = {};\r\n        this.recognizers = [];\r\n        this.oldCssProps = {};\r\n\r\n        this.element = element;\r\n        this.input = createInputInstance( this );\r\n        this.touchAction = new TouchAction( this, this.options.touchAction );\r\n\r\n        toggleCssProps( this, true );\r\n\r\n        each( this.options.recognizers, function ( item ) {\r\n            var recognizer = this.add( new( item[ 0 ] )( item[ 1 ] ) );\r\n            item[ 2 ] && recognizer.recognizeWith( item[ 2 ] );\r\n            item[ 3 ] && recognizer.requireFailure( item[ 3 ] );\r\n        }, this );\r\n    }\r\n\r\n    Manager.prototype = {\r\n        /**\r\n         * set options\r\n         * @param {Object} options\r\n         * @returns {Manager}\r\n         */\r\n        set: function ( options ) {\r\n            assign( this.options, options );\r\n\r\n            // Options that need a little more setup\r\n            if ( options.touchAction ) {\r\n                this.touchAction.update();\r\n            }\r\n            if ( options.inputTarget ) {\r\n                // Clean up existing event listeners and reinitialize\r\n                this.input.destroy();\r\n                this.input.target = options.inputTarget;\r\n                this.input.init();\r\n            }\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * stop recognizing for this session.\r\n         * This session will be discarded, when a new [input]start event is fired.\r\n         * When forced, the recognizer cycle is stopped immediately.\r\n         * @param {Boolean} [force]\r\n         */\r\n        stop: function ( force ) {\r\n            this.session.stopped = force ? FORCED_STOP : STOP;\r\n        },\r\n\r\n        /**\r\n         * run the recognizers!\r\n         * called by the inputHandler function on every movement of the pointers (touches)\r\n         * it walks through all the recognizers and tries to detect the gesture that is being made\r\n         * @param {Object} inputData\r\n         */\r\n        recognize: function ( inputData ) {\r\n            var session = this.session;\r\n            if ( session.stopped ) {\r\n                return;\r\n            }\r\n\r\n            // run the touch-action polyfill\r\n            this.touchAction.preventDefaults( inputData );\r\n\r\n            var recognizer;\r\n            var recognizers = this.recognizers;\r\n\r\n            // this holds the recognizer that is being recognized.\r\n            // so the recognizer's state needs to be BEGAN, CHANGED, ENDED or RECOGNIZED\r\n            // if no recognizer is detecting a thing, it is set to `null`\r\n            var curRecognizer = session.curRecognizer;\r\n\r\n            // reset when the last recognizer is recognized\r\n            // or when we're in a new session\r\n            if ( !curRecognizer || ( curRecognizer && curRecognizer.state & STATE_RECOGNIZED ) ) {\r\n                curRecognizer = session.curRecognizer = null;\r\n            }\r\n\r\n            var i = 0;\r\n            while ( i < recognizers.length ) {\r\n                recognizer = recognizers[ i ];\r\n\r\n                // find out if we are allowed try to recognize the input for this one.\r\n                // 1.   allow if the session is NOT forced stopped (see the .stop() method)\r\n                // 2.   allow if we still haven't recognized a gesture in this session, or the this recognizer is the one\r\n                //      that is being recognized.\r\n                // 3.   allow if the recognizer is allowed to run simultaneous with the current recognized recognizer.\r\n                //      this can be setup with the `recognizeWith()` method on the recognizer.\r\n                if ( session.stopped !== FORCED_STOP && ( // 1\r\n                        !curRecognizer || recognizer == curRecognizer || // 2\r\n                        recognizer.canRecognizeWith( curRecognizer ) ) ) { // 3\r\n                    recognizer.recognize( inputData );\r\n                } else {\r\n                    recognizer.reset();\r\n                }\r\n\r\n                // if the recognizer has been recognizing the input as a valid gesture, we want to store this one as the\r\n                // current active recognizer. but only if we don't already have an active recognizer\r\n                if ( !curRecognizer && recognizer.state & ( STATE_BEGAN | STATE_CHANGED | STATE_ENDED ) ) {\r\n                    curRecognizer = session.curRecognizer = recognizer;\r\n                }\r\n                i++;\r\n            }\r\n        },\r\n\r\n        /**\r\n         * get a recognizer by its event name.\r\n         * @param {Recognizer|String} recognizer\r\n         * @returns {Recognizer|Null}\r\n         */\r\n        get: function ( recognizer ) {\r\n            if ( recognizer instanceof Recognizer ) {\r\n                return recognizer;\r\n            }\r\n\r\n            var recognizers = this.recognizers;\r\n            for ( var i = 0; i < recognizers.length; i++ ) {\r\n                if ( recognizers[ i ].options.event == recognizer ) {\r\n                    return recognizers[ i ];\r\n                }\r\n            }\r\n            return null;\r\n        },\r\n\r\n        /**\r\n         * add a recognizer to the manager\r\n         * existing recognizers with the same event name will be removed\r\n         * @param {Recognizer} recognizer\r\n         * @returns {Recognizer|Manager}\r\n         */\r\n        add: function ( recognizer ) {\r\n            if ( invokeArrayArg( recognizer, 'add', this ) ) {\r\n                return this;\r\n            }\r\n\r\n            // remove existing\r\n            var existing = this.get( recognizer.options.event );\r\n            if ( existing ) {\r\n                this.remove( existing );\r\n            }\r\n\r\n            this.recognizers.push( recognizer );\r\n            recognizer.manager = this;\r\n\r\n            this.touchAction.update();\r\n            return recognizer;\r\n        },\r\n\r\n        /**\r\n         * remove a recognizer by name or instance\r\n         * @param {Recognizer|String} recognizer\r\n         * @returns {Manager}\r\n         */\r\n        remove: function ( recognizer ) {\r\n            if ( invokeArrayArg( recognizer, 'remove', this ) ) {\r\n                return this;\r\n            }\r\n\r\n            recognizer = this.get( recognizer );\r\n\r\n            // let's make sure this recognizer exists\r\n            if ( recognizer ) {\r\n                var recognizers = this.recognizers;\r\n                var index = inArray( recognizers, recognizer );\r\n\r\n                if ( index !== -1 ) {\r\n                    recognizers.splice( index, 1 );\r\n                    this.touchAction.update();\r\n                }\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * bind event\r\n         * @param {String} events\r\n         * @param {Function} handler\r\n         * @returns {EventEmitter} this\r\n         */\r\n        on: function ( events, handler ) {\r\n            if ( events === undefined ) {\r\n                return;\r\n            }\r\n            if ( handler === undefined ) {\r\n                return;\r\n            }\r\n\r\n            var handlers = this.handlers;\r\n            each( splitStr( events ), function ( event ) {\r\n                handlers[ event ] = handlers[ event ] || [];\r\n                handlers[ event ].push( handler );\r\n            } );\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * unbind event, leave emit blank to remove all handlers\r\n         * @param {String} events\r\n         * @param {Function} [handler]\r\n         * @returns {EventEmitter} this\r\n         */\r\n        off: function ( events, handler ) {\r\n            if ( events === undefined ) {\r\n                return;\r\n            }\r\n\r\n            var handlers = this.handlers;\r\n            each( splitStr( events ), function ( event ) {\r\n                if ( !handler ) {\r\n                    delete handlers[ event ];\r\n                } else {\r\n                    handlers[ event ] && handlers[ event ].splice( inArray( handlers[ event ], handler ), 1 );\r\n                }\r\n            } );\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * emit event to the listeners\r\n         * @param {String} event\r\n         * @param {Object} data\r\n         */\r\n        emit: function ( event, data ) {\r\n            // we also want to trigger dom events\r\n            if ( this.options.domEvents ) {\r\n                triggerDomEvent( event, data );\r\n            }\r\n\r\n            // no handlers, so skip it all\r\n            var handlers = this.handlers[ event ] && this.handlers[ event ].slice();\r\n            if ( !handlers || !handlers.length ) {\r\n                return;\r\n            }\r\n\r\n            data.type = event;\r\n            data.preventDefault = function () {\r\n                data.srcEvent.preventDefault();\r\n            };\r\n\r\n            var i = 0;\r\n            while ( i < handlers.length ) {\r\n                handlers[ i ]( data );\r\n                i++;\r\n            }\r\n        },\r\n\r\n        /**\r\n         * destroy the manager and unbinds all events\r\n         * it doesn't unbind dom events, that is the user own responsibility\r\n         */\r\n        destroy: function () {\r\n            this.element && toggleCssProps( this, false );\r\n\r\n            this.handlers = {};\r\n            this.session = {};\r\n            this.input.destroy();\r\n            this.element = null;\r\n        }\r\n    };\r\n\r\n    /**\r\n     * add/remove the css properties as defined in manager.options.cssProps\r\n     * @param {Manager} manager\r\n     * @param {Boolean} add\r\n     */\r\n    function toggleCssProps( manager, add ) {\r\n        var element = manager.element;\r\n        if ( !element.style ) {\r\n            return;\r\n        }\r\n        var prop;\r\n        each( manager.options.cssProps, function ( value, name ) {\r\n            prop = prefixed( element.style, name );\r\n            if ( add ) {\r\n                manager.oldCssProps[ prop ] = element.style[ prop ];\r\n                element.style[ prop ] = value;\r\n            } else {\r\n                element.style[ prop ] = manager.oldCssProps[ prop ] || '';\r\n            }\r\n        } );\r\n        if ( !add ) {\r\n            manager.oldCssProps = {};\r\n        }\r\n    }\r\n\r\n    /**\r\n     * trigger dom event\r\n     * @param {String} event\r\n     * @param {Object} data\r\n     */\r\n    function triggerDomEvent( event, data ) {\r\n        var gestureEvent = document.createEvent( 'Event' );\r\n        gestureEvent.initEvent( event, true, true );\r\n        gestureEvent.gesture = data;\r\n        data.target.dispatchEvent( gestureEvent );\r\n    }\r\n\r\n    assign( Hammer, {\r\n        INPUT_START: INPUT_START,\r\n        INPUT_MOVE: INPUT_MOVE,\r\n        INPUT_END: INPUT_END,\r\n        INPUT_CANCEL: INPUT_CANCEL,\r\n\r\n        STATE_POSSIBLE: STATE_POSSIBLE,\r\n        STATE_BEGAN: STATE_BEGAN,\r\n        STATE_CHANGED: STATE_CHANGED,\r\n        STATE_ENDED: STATE_ENDED,\r\n        STATE_RECOGNIZED: STATE_RECOGNIZED,\r\n        STATE_CANCELLED: STATE_CANCELLED,\r\n        STATE_FAILED: STATE_FAILED,\r\n\r\n        DIRECTION_NONE: DIRECTION_NONE,\r\n        DIRECTION_LEFT: DIRECTION_LEFT,\r\n        DIRECTION_RIGHT: DIRECTION_RIGHT,\r\n        DIRECTION_UP: DIRECTION_UP,\r\n        DIRECTION_DOWN: DIRECTION_DOWN,\r\n        DIRECTION_HORIZONTAL: DIRECTION_HORIZONTAL,\r\n        DIRECTION_VERTICAL: DIRECTION_VERTICAL,\r\n        DIRECTION_ALL: DIRECTION_ALL,\r\n\r\n        Manager: Manager,\r\n        Input: Input,\r\n        TouchAction: TouchAction,\r\n\r\n        TouchInput: TouchInput,\r\n        MouseInput: MouseInput,\r\n        PointerEventInput: PointerEventInput,\r\n        TouchMouseInput: TouchMouseInput,\r\n        SingleTouchInput: SingleTouchInput,\r\n\r\n        Recognizer: Recognizer,\r\n        AttrRecognizer: AttrRecognizer,\r\n        Tap: TapRecognizer,\r\n        Pan: PanRecognizer,\r\n        Swipe: SwipeRecognizer,\r\n        Pinch: PinchRecognizer,\r\n        Rotate: RotateRecognizer,\r\n        Press: PressRecognizer,\r\n\r\n        on: addEventListeners,\r\n        off: removeEventListeners,\r\n        each: each,\r\n        merge: merge,\r\n        extend: extend,\r\n        assign: assign,\r\n        inherit: inherit,\r\n        bindFn: bindFn,\r\n        prefixed: prefixed\r\n    } );\r\n\r\n    // this prevents errors when Hammer is loaded in the presence of an AMD\r\n    //  style loader but by script tag, not by the loader.\r\n    var freeGlobal = ( typeof window !== 'undefined' ? window : ( typeof self !== 'undefined' ? self : {} ) ); // jshint ignore:line\r\n    freeGlobal.Hammer = Hammer;\r\n\r\n    if ( typeof define === 'function' && define.amd ) {\r\n        define( function () {\r\n            return Hammer;\r\n        } );\r\n    } else if ( typeof module != 'undefined' && module.exports ) {\r\n        module.exports = Hammer;\r\n    } else {\r\n        window[ exportName ] = Hammer;\r\n    }\r\n\r\n} )( window, document, 'Hammer' );\r\n\r\n\r\nmodule.exports = Hammer;\r\n\r\n\r\nmodule.exports._ = _;\n})"]}
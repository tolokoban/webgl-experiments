{"version":3,"sources":["tfw.color.js"],"names":["require","module","Color","code","R","G","B","A","H","S","L","parse","parseHexa","text","charAt","length","parseInt","INV15","substr","INV255","isNaN","parseRGB","m","RX_RGB","exec","clamp01","parseRGBA","RX_RGBA","parseFloat","parseHSL","RX_HSL","INV359","INV99","hsl2rgb","hexa2","value","out","Math","floor","toString","v","staticParse","color","_","X","D","arguments","intl","all","exports","prototype","luminance","stringify","_text","input","trim","toUpperCase","call","copy","newColor","chroma","abs","x","shift","rgb2hsl","min","max","delta","INV6","INSTANCE","instance","newRGB","red","newRGBA"],"mappings":"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","sourcesContent":["/** @module tfw.color */require( 'tfw.color', function(require, module, exports) { var _=function(){var D={\"en\":{},\"fr\":{}},X=require(\"$\").intl;function _(){return X(D,arguments);}_.all=D;return _}();\r\n   \"use strict\";\r\n\r\n/**\r\n * @class Color\r\n * Fast color manipulations.\r\n * Attributes R  (red), G  (green), B  (blue), A  (alpha), H  (hue), S\r\n * (saturation), and L (luminance) are all floats between 0 and 1.\r\n */\r\nmodule.exports = Color;\r\n\r\n\r\n/**\r\n * Uses R, G and B.\r\n * @return  {float}  The  luminance  of  this color,  to  be  used  in\r\n * grayscale, for instance.\r\n */\r\nColor.prototype.luminance = luminance;\r\n\r\n/**\r\n * Uses R, G, B and A.\r\n * @return {string} CSS color format. For instance: `#FE1795DD`\r\n */\r\nColor.prototype.stringify = stringify;\r\n\r\n/**\r\n * @param {string} text - A CSS representation for this color.\r\n * @return {array} `[red, green, blue, alpha]` with every item between\r\n * 0 and 1.\r\n */\r\nColor.prototype.parse = parse;\r\n\r\n/**\r\n * @return {Color} A clone of this object\r\n */\r\nColor.prototype.copy = copy;\r\n\r\n/**\r\n * Read H,S,L and write R,G,B.\r\n */\r\nColor.prototype.hsl2rgb = hsl2rgb;\r\n\r\n/**\r\n * Read R,G,B and write H,S,L.\r\n */\r\nColor.prototype.rgb2hsl = rgb2hsl;\r\n\r\nconst INSTANCE = new Color();\r\nColor.instance = INSTANCE;\r\nColor.parse = staticParse;\r\nColor.luminance = staticLuminance;\r\n\r\n/**\r\n * @param {float} red - Red value between 0 and 1.\r\n * @param {float} green - Green value between 0 and 1.\r\n * @param {float} blue - Blue value between 0 and 1.\r\n * @return {Color} A new color.\r\n */\r\nColor.newRGB = newRGB;\r\n\r\n/**\r\n * @param {float} red - Red value between 0 and 1.\r\n * @param {float} green - Green value between 0 and 1.\r\n * @param {float} blue - Blue value between 0 and 1.\r\n * @param {float} alpha - Alpha value between 0 and 1.\r\n * @return {Color} A new color.\r\n */\r\nColor.newRGBA = newRGBA;\r\n\r\n\r\n/*\r\n *    ##################\r\n *    # Implementation #\r\n *    ##################\r\n */\r\n\r\n/**\r\n * @constructor\r\n * @param {string} code - CSS color code.\r\n */\r\nfunction Color( code ) {\r\n    this.R = 0;\r\n    this.G = 0;\r\n    this.B = 0;\r\n    this.A = 0;\r\n    this.H = 0;\r\n    this.S = 0;\r\n    this.L = 0;\r\n\r\n    if ( typeof code === 'string' ) {\r\n        this.parse( code );\r\n    }\r\n}\r\n\r\nconst\r\n    INV6 = 1 / 6,\r\n    INV15 = 1 / 15,\r\n    INV99 = 1 / 99,\r\n    INV255 = 1 / 255,\r\n    INV359 = 1 / 359;\r\n\r\n/**\r\n * Read R,G,B and write H,S,L.\r\n * @this Color\r\n * @returns {undefined}\r\n */\r\nfunction rgb2hsl() {\r\n    const\r\n        R = this.R,\r\n        G = this.G,\r\n        B = this.B,\r\n        min = Math.min( R, G, B ),\r\n        max = Math.max( R, G, B ),\r\n        delta = max - min;\r\n\r\n    this.L = 0.5 * ( max + min );\r\n\r\n    if ( delta < 0.000001 ) {\r\n        this.H = 0;\r\n        this.S = 0;\r\n    } else {\r\n        this.S = delta / ( 1 - Math.abs( ( 2 * this.L ) - 1 ) );\r\n        if ( max === R ) {\r\n            if ( G >= B ) {\r\n                this.H = INV6 * ( ( G - B ) / delta );\r\n            } else {\r\n                this.H = 1 - ( INV6 * ( ( B - G ) / delta ) );\r\n            }\r\n        } else if ( max === G ) {\r\n            this.H = INV6 * ( 2 + ( ( B - R ) / delta ) );\r\n        } else {\r\n            this.H = INV6 * ( 4 + ( ( R - G ) / delta ) );\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * @see https://en.wikipedia.org/wiki/HSL_and_HSV#Converting_to_RGB\r\n * @this Color\r\n * @returns {undefined}\r\n */\r\nfunction hsl2rgb() {\r\n    const\r\n        H = 6 * this.H,\r\n        S = this.S,\r\n        L = this.L,\r\n        chroma = ( 1 - Math.abs( 2 * L - 1 ) ) * S,\r\n        x = chroma * ( 1 - Math.abs( H % 2 - 1 ) );\r\n\r\n    let\r\n        R = 0,\r\n        G = 0,\r\n        B = 0;\r\n\r\n    if ( H < 3 ) {\r\n        if ( H < 1 ) {\r\n            R = chroma;\r\n            G = x;\r\n            B = 0;\r\n        } else if ( H < 2 ) {\r\n            R = x;\r\n            G = chroma;\r\n            B = 0;\r\n        } else {\r\n            // H == 2.\r\n            R = 0;\r\n            G = chroma;\r\n            B = x;\r\n        }\r\n    } else if ( H < 4 ) {\r\n        R = 0;\r\n        G = x;\r\n        B = chroma;\r\n    } else if ( H < 5 ) {\r\n        R = x;\r\n        G = 0;\r\n        B = chroma;\r\n    } else {\r\n        R = chroma;\r\n        G = 0;\r\n        B = x;\r\n    }\r\n\r\n    const shift = L - chroma * 0.5;\r\n    this.R = R + shift;\r\n    this.G = G + shift;\r\n    this.B = B + shift;\r\n}\r\n\r\n/**\r\n * @see https://en.wikipedia.org/wiki/Grayscale\r\n * @this Color\r\n * @returns {undefined}\r\n */\r\nfunction luminance() {\r\n    return ( 0.2126 * this.R ) + ( 0.7152 * this.G ) + ( 0.0722 * this.B );\r\n}\r\n\r\n/**\r\n * @this Color\r\n * @returns {string} String value of the color. `#fd45a7`.\r\n */\r\nfunction stringify() {\r\n    let color = hexa2( this.R * 255 ) + hexa2( this.G * 255 ) + hexa2( this.B * 255 );\r\n    if ( this.A < 1 ) {\r\n        color += hexa2( this.A * 255 );\r\n    }\r\n    return `#${color}`;\r\n}\r\n\r\n\r\n/**\r\n * @this Color\r\n * @param {string} _text - CSS color code.\r\n * @returns {boolean} Success?\r\n */\r\nfunction parse( _text ) {\r\n    const\r\n        text = typeof _text !== 'undefined' ? _text : '#000000',\r\n        input = text.trim().toUpperCase();\r\n    if ( parseHexa.call( this, input ) ) return true;\r\n    if ( parseRGB.call( this, input ) ) return true;\r\n    if ( parseRGBA.call( this, input ) ) return true;\r\n    if ( parseHSL.call( this, input ) ) return true;\r\n    // @TODO hsl and hsla.\r\n    return false;\r\n}\r\n\r\n\r\n/**\r\n * @this Color\r\n * @param {string} text - CSS color code.\r\n * @returns {boolean} Success?\r\n */\r\nfunction parseHexa( text ) {\r\n    if ( text.charAt( 0 ) !== '#' ) return false;\r\n    let\r\n        R = 0,\r\n        G = 0,\r\n        B = 0,\r\n        A = 1;\r\n\r\n    switch ( text.length ) {\r\n    case 4:\r\n        R = parseInt( text.charAt( 1 ), 16 ) * INV15;\r\n        G = parseInt( text.charAt( 2 ), 16 ) * INV15;\r\n        B = parseInt( text.charAt( 3 ), 16 ) * INV15;\r\n        break;\r\n    case 5:\r\n        R = parseInt( text.charAt( 1 ), 16 ) * INV15;\r\n        G = parseInt( text.charAt( 2 ), 16 ) * INV15;\r\n        B = parseInt( text.charAt( 3 ), 16 ) * INV15;\r\n        A = parseInt( text.charAt( 4 ), 16 ) * INV15;\r\n        break;\r\n    case 7:\r\n        R = parseInt( text.substr( 1, 2 ), 16 ) * INV255;\r\n        G = parseInt( text.substr( 3, 2 ), 16 ) * INV255;\r\n        B = parseInt( text.substr( 5, 2 ), 16 ) * INV255;\r\n        break;\r\n    case 9:\r\n        R = parseInt( text.substr( 1, 2 ), 16 ) * INV255;\r\n        G = parseInt( text.substr( 3, 2 ), 16 ) * INV255;\r\n        B = parseInt( text.substr( 5, 2 ), 16 ) * INV255;\r\n        A = parseInt( text.substr( 7, 2 ), 16 ) * INV255;\r\n        break;\r\n    default:\r\n    }\r\n\r\n    if ( isNaN( R ) || isNaN( G ) || isNaN( B ) || isNaN( A ) ) {\r\n        this.R = this.G = this.B = this.A = 0;\r\n    } else {\r\n        this.R = R;\r\n        this.G = G;\r\n        this.B = B;\r\n        this.A = A;\r\n    }\r\n\r\n    return true;\r\n}\r\n\r\nconst RX_RGB = /^RGB[\\s\\(]+([0-9]+)[^0-9]+([0-9]+)[^0-9]+([0-9]+)/;\r\n\r\n/**\r\n * @this Color\r\n * @param   {string} text - `rgb(200, 140, 50)`\r\n * @returns {boolean} `true` if `text` is a valid `rgb()` syntax.\r\n */\r\nfunction parseRGB( text ) {\r\n    const m = RX_RGB.exec( text );\r\n    if ( !m ) return false;\r\n    this.R = clamp01( parseInt( m[ 1 ], 10 ) * INV255 );\r\n    this.G = clamp01( parseInt( m[ 2 ], 10 ) * INV255 );\r\n    this.B = clamp01( parseInt( m[ 3 ], 10 ) * INV255 );\r\n    this.A = 1;\r\n    return true;\r\n}\r\n\r\nconst RX_RGBA = /^RGBA[\\s\\(]+([0-9]+)[^0-9]+([0-9]+)[^0-9]+([0-9]+)[^0-9\\.]+([0-9\\.]+)/;\r\n\r\n/**\r\n * @this Color\r\n * @param   {string} text - `rgba(200, 140, 50, 0.5)`\r\n * @returns {boolean} `true` if `text` is a valid `rgba()` syntax.\r\n */\r\nfunction parseRGBA( text ) {\r\n    const m = RX_RGBA.exec( text );\r\n    if ( !m ) return false;\r\n    this.R = clamp01( parseInt( m[ 1 ], 10 ) * INV255 );\r\n    this.G = clamp01( parseInt( m[ 2 ], 10 ) * INV255 );\r\n    this.B = clamp01( parseInt( m[ 3 ], 10 ) * INV255 );\r\n    this.A = clamp01( parseFloat( m[ 4 ] ) );\r\n    return true;\r\n}\r\n\r\nconst RX_HSL = /^HSL[\\s\\(]+([0-9]+)[^0-9]+([0-9]+)[^0-9]+([0-9]+)/;\r\n\r\n/**\r\n * @this Color\r\n * @param   {string} text - `hsl(200, 140, 50)`\r\n * @returns {boolean} `true` if `text` is a valid `hsl()` syntax.\r\n */\r\nfunction parseHSL( text ) {\r\n    const m = RX_HSL.exec( text );\r\n    if ( !m ) return false;\r\n    this.H = clamp01( parseInt( m[ 1 ], 10 ) * INV359 );\r\n    this.S = clamp01( parseInt( m[ 2 ], 10 ) * INV99 );\r\n    this.L = clamp01( parseInt( m[ 3 ], 10 ) * INV99 );\r\n    this.A = 1;\r\n    this.hsl2rgb();\r\n    return true;\r\n}\r\n\r\nfunction hexa2( value ) {\r\n    let out = Math.floor( value ).toString( 16 );\r\n    if ( out.length < 2 ) out = \"0\" + out;\r\n    return out;\r\n}\r\n\r\n\r\nfunction copy() {\r\n    const newColor = new Color();\r\n    newColor.R = this.R;\r\n    newColor.G = this.G;\r\n    newColor.B = this.B;\r\n    newColor.A = this.A;\r\n    newColor.H = this.H;\r\n    newColor.S = this.S;\r\n    newColor.L = this.L;\r\n    return newColor;\r\n}\r\n\r\n\r\nfunction newRGB( red, green, blue ) {\r\n    const color = new Color();\r\n    color.R = red;\r\n    color.G = red;\r\n    color.B = red;\r\n    return color;\r\n}\r\n\r\nfunction newRGBA( red, green, blue, alpha ) {\r\n    const color = new Color();\r\n    color.R = red;\r\n    color.G = red;\r\n    color.B = red;\r\n    color.A = red;\r\n    return color;\r\n}\r\n\r\nfunction clamp01( v ) {\r\n    if ( v < 0 ) return 0;\r\n    if ( v > 1 ) return 1;\r\n    return v;\r\n}\r\n\r\n\r\nfunction staticParse( text ) {\r\n    const color = new Color();\r\n    color.parse( text );\r\n    return color;\r\n}\r\n\r\nfunction staticLuminance( text ) {\r\n    const color = staticParse( text );\r\n    return color.luminance();\r\n}\r\n\r\n\r\nmodule.exports._ = _;\n})"]}
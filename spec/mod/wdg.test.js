require("wdg.test",function(t,e){function r(){return l(a,arguments)}function n(t,e,r){var n=e.createShader(t);return e.shaderSource(n,r),e.compileShader(n),e.getShaderParameter(n,e.COMPILE_STATUS)?n:(console.log(r),console.error("An error occurred compiling the shader: "+e.getShaderInfoLog(n)),null)}function o(t,e){return n(t.FRAGMENT_SHADER,t,e)}function i(t,e){return n(t.VERTEX_SHADER,t,e)}var a={en:{}},l=require("$").intl,g=require("dom"),s=require("tfw.data-binding"),c=function(t){function e(t){for(var r=0;r<d;r++)A=t/700+r*Math.PI*2/d,h[3*r+0]=.7*Math.cos(A),h[3*r+1]=.2*Math.sin(A),h[3*r+2]=.7*Math.sin(A);n.bindBuffer(n.ARRAY_BUFFER,l),n.bufferData(n.ARRAY_BUFFER,h,n.STATIC_DRAW),n.clearColor(0,0,0,1),n.clear(n.COLOR_BUFFER_BIT|n.DEPTH_BUFFER_BIT),n.drawArrays(n.POINTS,0,d),window.requestAnimationFrame(e)}var r=g.elem(this,"canvas");s.propInteger(this,"width")(function(t){r.setAttribute("width",t),r.style.width=t+"px"}),s.propInteger(this,"height")(function(t){r.setAttribute("height",t),r.style.height=t+"px"}),t=s.extend({width:640,height:480},t,this);var n=r.getContext("webgl")||r.getContext("experimental-webgl"),a=n.createProgram();n.attachShader(a,i(n,u.vertex)),n.attachShader(a,o(n,u.fragment)),n.linkProgram(a),n.useProgram(a);var l=n.createBuffer();n.bindBuffer(n.ARRAY_BUFFER,l),n.bufferData(n.ARRAY_BUFFER,new Float32Array([-.8,.8,.5,-.6,.6,.4,-.4,.4,.7,-.2,.2,.6,-0,0,.8,.2,-.2,0,.4,-.4,.1,.6,-.6,.3,.8,-.8,.2]),n.STATIC_DRAW);var c=n.getAttribLocation(a,"attVertexPosition");n.enableVertexAttribArray(c),n.vertexAttribPointer(c,3,n.FLOAT,!1,0,0),n.enable(n.BLEND),n.blendFunc(n.SRC_ALPHA,n.ONE_MINUS_SRC_ALPHA),n.disable(n.DEPTH_TEST);var A,d=7,h=new Float32Array(3*d);window.requestAnimationFrame(e)};e.exports=c;var u={vertex:"attribute vec3 attVertexPosition;\n\nvarying vec4 attPosition;\n\nvoid main() {\n  gl_Position = vec4( attVertexPosition.xyz, 1.0 );\n  gl_PointSize = 250.0\n    + (attVertexPosition.z - 1.0) * 120.0;\n  attPosition = gl_Position;\n}\n",fragment:"precision mediump float;\n\nvarying vec4 attPosition;\n\nvoid main() {\n  float x = gl_PointCoord.x - 0.5;\n  float y = gl_PointCoord.y - 0.5;\n  float r = x*x + y*y;\n\n  if (r > 0.25) {\n    gl_FragColor = vec4( 0.0, 0.0, 0.0, 0.0 );\n  } else if (r > 0.24) {\n    gl_FragColor = vec4( 1.0, 1.0, 1.0, 1.0 );\n  } else {\n    gl_FragColor = vec4( gl_PointCoord.y, gl_PointCoord.x, 0.0, 1.0 );\n  }\n}\n"};e.exports._=r});
//# sourceMappingURL=wdg.test.js.map
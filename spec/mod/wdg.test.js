require("wdg.test",function(t,e){function r(){return l(g,arguments)}function n(t){function e(t){for(var n=0;n<s;n++)l=t/700+n*Math.PI*2/s,f[3*n+0]=.7*Math.cos(l),f[3*n+1]=.2*Math.sin(l),f[3*n+2]=.7*Math.sin(l);r.bindBuffer(r.ARRAY_BUFFER,i),r.bufferData(r.ARRAY_BUFFER,f,r.STATIC_DRAW),r.clearColor(0,0,0,1),r.clear(r.COLOR_BUFFER_BIT|r.DEPTH_BUFFER_BIT),r.drawArrays(r.POINTS,0,s),window.requestAnimationFrame(e)}var r=t.getContext("webgl")||t.getContext("experimental-webgl");console.info("[wdg.gl3] 'fragment-' + this.fragment=...","fragment-"+this.fragment);var n=r.createProgram();r.attachShader(n,a(r,d.vertex)),r.attachShader(n,o(r,d.fragment)),r.linkProgram(n),r.useProgram(n);var i=r.createBuffer();r.bindBuffer(r.ARRAY_BUFFER,i),r.bufferData(r.ARRAY_BUFFER,new Float32Array([-.8,.8,.5,-.6,.6,.4,-.4,.4,.7,-.2,.2,.6,-0,0,.8,.2,-.2,0,.4,-.4,.1,.6,-.6,.3,.8,-.8,.2]),r.STATIC_DRAW);var g=r.getAttribLocation(n,"attVertexPosition");r.enableVertexAttribArray(g),r.vertexAttribPointer(g,3,r.FLOAT,!1,0,0),r.enable(r.BLEND),r.blendFunc(r.SRC_ALPHA,r.ONE_MINUS_SRC_ALPHA),r.disable(r.DEPTH_TEST);var l,s=7,f=new Float32Array(3*s);window.requestAnimationFrame(e)}function i(t,e,r){var n=e.createShader(t);return e.shaderSource(n,r),e.compileShader(n),e.getShaderParameter(n,e.COMPILE_STATUS)?n:(console.log(r),console.error("An error occurred compiling the shader: "+e.getShaderInfoLog(n)),null)}function o(t,e){return i(t.FRAGMENT_SHADER,t,e)}function a(t,e){return i(t.VERTEX_SHADER,t,e)}var g={en:{}},l=require("$").intl,s=require("dom"),f=require("tfw.data-binding"),c=function(t){var e=s.elem(this,"canvas");f.propInteger(this,"width")(function(t){e.setAttribute("width",t),e.style.width=t+"px"}),f.propInteger(this,"height")(function(t){e.setAttribute("height",t),e.style.height=t+"px"}),f.propString(this,"fragment"),t=f.extend({width:640,height:480,fragment:"a"},t,this),window.setTimeout(n.bind(this,e),20)};e.exports=c;var d={vertex:"attribute vec3 attVertexPosition;\n\nvarying vec4 attPosition;\n\nvoid main() {\n  gl_Position = vec4( attVertexPosition.xyz, 1.0 );\n  gl_PointSize = 250.0\n    + (attVertexPosition.z - 1.0) * 120.0;\n  attPosition = gl_Position;\n}\n",fragment:"precision mediump float;\n\nvarying vec4 attPosition;\n\nvoid main() {\n  float x = gl_PointCoord.x - 0.5;\n  float y = gl_PointCoord.y - 0.5;\n  float r = x*x + y*y;\n\n  if (r > 0.25) {\n    gl_FragColor = vec4( 0.0, 0.0, 0.0, 0.0 );\n  } else if (r > 0.24) {\n    gl_FragColor = vec4( 1.0, 1.0, 1.0, 1.0 );\n  } else {\n    gl_FragColor = vec4( gl_PointCoord.y, gl_PointCoord.x, 0.0, 1.0 );\n  }\n}\n"};e.exports._=r});
//# sourceMappingURL=wdg.test.js.map
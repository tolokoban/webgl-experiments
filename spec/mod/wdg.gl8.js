require("wdg.gl8",function(r,e){function n(){return i(t,arguments)}var t={en:{}},i=require("$").intl,o=require("dom"),a=require("tfw.data-binding"),u=require("tfw.webgl"),l=require("explosive-tp"),v=function(r){var e=o.elem(this,"canvas");a.propInteger(this,"width")(function(r){e.setAttribute("width",r),e.style.width=r+"px"}),a.propInteger(this,"height")(function(r){e.setAttribute("height",r),e.style.height=r+"px"}),a.propBoolean(this,"zindex"),r=a.extend({width:640,height:480,zbuffer:!1},r,this);var n=new u(e),t=n.gl,i=new l(e),v=n.createTextureForFB(512,512),f=t.createFramebuffer();t.bindFramebuffer(t.FRAMEBUFFER,f),t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,v,0),t.bindFramebuffer(t.FRAMEBUFFER,null);var s=t.createBuffer(),F=new Float32Array([-1,-1,0,-1,1,0,1,-1,0,1,1,0]),x=n.createProgram({vertex:c.vert,fragment:c.frag});n.start(function(r){t.bindFramebuffer(t.FRAMEBUFFER,f),t.clear(t.COLOR_BUFFER_BIT),i.render(r),x.use(),t.bindFramebuffer(t.FRAMEBUFFER,null),t.disable(t.BLEND),t.disable(t.DEPTH_TEST),t.clear(t.COLOR_BUFFER_BIT),t.bindBuffer(t.ARRAY_BUFFER,s),t.enableVertexAttribArray(x.$attPosition),t.vertexAttribPointer(x.$attPosition,3,t.FLOAT,!1,0,0),t.bufferData(t.ARRAY_BUFFER,F,t.STATIC_DRAW),t.bindTexture(t.TEXTURE_2D,v),t.drawArrays(t.TRIANGLE_STRIP,0,4)})};e.exports=v;var c={vert:"// Temps courant en millisecondes\r\nuniform float uniTime;\r\n\r\n// Position en valeurs comprises entre -1.0 et +1.0\r\nattribute vec2 attPosition;\r\n\r\n// Passer les coordonn√©es UV pour la texture.\r\nvarying vec2 varUV;\r\n\r\nvoid main() {\r\n  float x = attPosition.x;\r\n  float y = attPosition.y;\r\n  float z = 0.0;\r\n\r\n  gl_Position = vec4(x, y, z, 1.0 );\r\n\r\n  varUV = vec2( x, y );\r\n}\r\n",frag:"precision mediump float;\r\n\r\nuniform sampler2D uniTexture;\r\n\r\nvarying vec2 varUV;\r\n\r\nconst float S = 1.0 / 128.0;\r\n\r\nvoid main() {\r\n  float u = abs(varUV.x);\r\n  float v = abs(varUV.y);\r\n  \r\n  vec4 color = texture2D( uniTexture, vec2(u, v) );\r\n  if (varUV.x < 0.0) {\r\n    if (varUV.y < 0.0) {\r\n      gl_FragColor = color;\r\n    } else {\r\n      gl_FragColor = vec4( color.b, color.r, color.g, color.a );\r\n    }\r\n  } else {\r\n    if (varUV.y < 0.0) {\r\n      gl_FragColor = vec4( vec3(1.0, 1.0, 1.0) - color.rgb, 1.0 );\r\n    } else {\r\n      gl_FragColor = color * 9.0\r\n        - texture2D( uniTexture, vec2(u - S, v - S) )\r\n        - texture2D( uniTexture, vec2(u    , v - S) )\r\n        - texture2D( uniTexture, vec2(u + S, v - S) )\r\n        - texture2D( uniTexture, vec2(u - S, v    ) )\r\n        - texture2D( uniTexture, vec2(u + S, v    ) )\r\n        - texture2D( uniTexture, vec2(u - S, v + S) )\r\n        - texture2D( uniTexture, vec2(u    , v + S) )\r\n        - texture2D( uniTexture, vec2(u + S, v + S) );\r\n      if (gl_FragColor.r + gl_FragColor.g + gl_FragColor.b > .1) {\r\n        gl_FragColor = vec4(1.0, 1.0, 1.0, 0.0);\r\n      }\r\n    }\r\n  }\r\n}\r\n"};e.exports._=n});
//# sourceMappingURL=wdg.gl8.js.map
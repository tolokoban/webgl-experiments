require("wdg.gl6",function(e,n,t){function r(e){function n(e){var r,a,i,l,u=e/566,d=Math.cos(u),g=Math.sin(u),v=e/979,A=Math.cos(v),h=Math.sin(v),p=d,_=g,b=g*h,E=A,P=-d*h,m=-g*A,C=h,R=d*A;for(l=0;l<c;l++)r=f[3*l+0],a=f[3*l+1],i=f[3*l+2],s[6*l+0]=r*p+0*a+i*_,s[6*l+1]=r*b+a*E+i*P,s[6*l+2]=r*m+a*C+i*R;t.bindBuffer(t.ARRAY_BUFFER,o),t.bufferData(t.ARRAY_BUFFER,s,t.STATIC_DRAW),t.clear(t.COLOR_BUFFER_BIT),t.drawArrays(t.POINTS,0,c),window.requestAnimationFrame(n)}var t=e.getContext("webgl")||e.getContext("experimental-webgl"),r=t.createProgram();t.attachShader(r,i(t,u.vertex)),t.attachShader(r,a(t,u.fragment)),t.linkProgram(r),t.useProgram(r);var o=t.createBuffer();t.bindBuffer(t.ARRAY_BUFFER,o);var c=6,s=new Float32Array(36);t.bufferData(t.ARRAY_BUFFER,s,t.STATIC_DRAW);for(var d,f=[1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1],g=0;g<c;g++)d=l(),s[6*g+3]=d.r,s[6*g+4]=d.g,s[6*g+5]=d.b;var v=s.BYTES_PER_ELEMENT,A=6*v,h=t.getAttribLocation(r,"attPosition");t.enableVertexAttribArray(h),t.vertexAttribPointer(h,3,t.FLOAT,!1,A,0);var p=t.getAttribLocation(r,"attColor");t.enableVertexAttribArray(p),t.vertexAttribPointer(p,3,t.FLOAT,!1,A,3*v),Boolean(this.zbuffer)?(t.enable(t.DEPTH_TEST),t.depthFunc(t.LEQUAL),t.disable(t.BLEND),t.enable(t.BLEND),t.blendFunc(t.SRC_ALPHA,t.ONE_MINUS_SRC_ALPHA)):(t.enable(t.BLEND),t.blendFunc(t.SRC_ALPHA,t.ONE_MINUS_SRC_ALPHA),t.disable(t.DEPTH_TEST)),t.clearColor(1,1,1,1),t.bindBuffer(t.ARRAY_BUFFER,o),window.requestAnimationFrame(n)}function o(e,n,t){var r=n.createShader(e);return n.shaderSource(r,t),n.compileShader(r),n.getShaderParameter(r,n.COMPILE_STATUS)?r:(console.log(t),console.error("An error occurred compiling the shader: "+n.getShaderInfoLog(r)),null)}function a(e,n){return o(e.FRAGMENT_SHADER,e,n)}function i(e,n){return o(e.VERTEX_SHADER,e,n)}function l(){var e=Math.random(),n=Math.random(),t=Math.random();return e<n?t<e?(e=1,t=0):(e=1,n>t?t=0:n=0):n>t?(e=1,t=0):(n=0,e>t?e=1:t=1),{r:e,g:n,b:t}}var c=function(){function n(){return r(t,arguments)}var t={en:{}},r=e("$").intl;return n.all=t,n}(),u={vertex:"attribute vec3 attPosition;\nattribute vec3 attColor;\n\nvarying vec3 varPosition;\nvarying vec3 varColor;\n\nvoid main() {\n  float z = attPosition.z;\n  // Dans une projection 3D, les points éloignés de la caméra\n  // paraissent plus petits et plus proches les uns des autres.\n  // Cette variable permet de créer cet effet.\n  float depth = (2.0 - z) / 3.0;\n  gl_Position = vec4(attPosition.xy * depth, z, 1.0);\n\n  // La taille du point dépend aussi de la profondeur.\n  gl_PointSize = 150.0 * depth;\n  varPosition = attPosition;\n  varColor = attColor;\n}\n",fragment:"precision mediump float;\n\nvarying vec3 varPosition;\nvarying vec3 varColor;\n\nconst vec4 WHITE = vec4(1.0, 1.0, 1.0, 0.5);\n\nvoid main() {\n  // Calculons la distance du fragment courant\n  // au centre du point.\n  float x = gl_PointCoord.x - 0.5;\n  float y = gl_PointCoord.y - 0.5;\n  // On ne calcule pas la racine carré pour gagner du temps.\n  float r = x*x + y*y;\n\n  x = gl_PointCoord.x;\n  y = gl_PointCoord.y;\n\n  // 0.25 = 0.5 * 0.5\n  if (r > 0.25) {\n    // Si on est à l'extérieur du cercle de rayon 0.5,\n    // on place un fragment transparent.\n    gl_FragColor = vec4( 0.0, 0.0, 0.0, 0.0 );\n  } else if (r > .2 ) {\n    // Au delà d'un certain rayon, on met une couleur fixe\n    // qui nous sert de liseré.\n    gl_FragColor = vec4(varColor, 1.0);\n  } else {\n    // Petit effet de dégradé.\n    vec3 col = x * varColor + y * WHITE.rgb;\n    gl_FragColor = vec4( col, 1.0 );\n  }\n  // La luminosité varie avec la profondeur du point.\n  // En `z = 0.0`, la boule est noire.\n  float coeff = (3.0 - varPosition.z) / 3.0;\n  gl_FragColor = coeff * gl_FragColor + (1.0 - coeff) * WHITE;\n}\n"},s=e("dom"),d=e("tfw.data-binding"),f=function(e){var n=s.elem(this,"canvas");d.propInteger(this,"width")(function(e){n.setAttribute("width",e),n.style.width=e+"px"}),d.propInteger(this,"height")(function(e){n.setAttribute("height",e),n.style.height=e+"px"}),d.propBoolean(this,"zindex"),e=d.extend({width:640,height:480,zbuffer:!1},e,this),window.setTimeout(r.bind(this,n),20)};n.exports=f,n.exports._=c});
//# sourceMappingURL=wdg.gl6.js.map